'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace WS_REQUEST_NO
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SV_REQUEST_NOSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SV_REQUEST_NO
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private WS_INSERT_A_NOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_INSERT_C_NOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_INSERT_R_NOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WS_UPDATE_STAFFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FDA_DRUG_HERB.My.MySettings.Default.FDA_DRUG_HERB_WS_REQUEST_NO_SV_REQUEST_NO
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event WS_INSERT_A_NOCompleted As WS_INSERT_A_NOCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_INSERT_C_NOCompleted As WS_INSERT_C_NOCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_INSERT_R_NOCompleted As WS_INSERT_R_NOCompletedEventHandler
        
        '''<remarks/>
        Public Event WS_UPDATE_STAFFCompleted As WS_UPDATE_STAFFCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_INSERT_A_NO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WS_INSERT_A_NO(ByVal r_no As String, ByVal ref_no As String, ByVal _appdate As Date) As String
            Dim results() As Object = Me.Invoke("WS_INSERT_A_NO", New Object() {r_no, ref_no, _appdate})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WS_INSERT_A_NOAsync(ByVal r_no As String, ByVal ref_no As String, ByVal _appdate As Date)
            Me.WS_INSERT_A_NOAsync(r_no, ref_no, _appdate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_INSERT_A_NOAsync(ByVal r_no As String, ByVal ref_no As String, ByVal _appdate As Date, ByVal userState As Object)
            If (Me.WS_INSERT_A_NOOperationCompleted Is Nothing) Then
                Me.WS_INSERT_A_NOOperationCompleted = AddressOf Me.OnWS_INSERT_A_NOOperationCompleted
            End If
            Me.InvokeAsync("WS_INSERT_A_NO", New Object() {r_no, ref_no, _appdate}, Me.WS_INSERT_A_NOOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_INSERT_A_NOOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_INSERT_A_NOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_INSERT_A_NOCompleted(Me, New WS_INSERT_A_NOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_INSERT_C_NO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WS_INSERT_C_NO(ByVal r_no As String, ByVal ref_no As String) As String
            Dim results() As Object = Me.Invoke("WS_INSERT_C_NO", New Object() {r_no, ref_no})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WS_INSERT_C_NOAsync(ByVal r_no As String, ByVal ref_no As String)
            Me.WS_INSERT_C_NOAsync(r_no, ref_no, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_INSERT_C_NOAsync(ByVal r_no As String, ByVal ref_no As String, ByVal userState As Object)
            If (Me.WS_INSERT_C_NOOperationCompleted Is Nothing) Then
                Me.WS_INSERT_C_NOOperationCompleted = AddressOf Me.OnWS_INSERT_C_NOOperationCompleted
            End If
            Me.InvokeAsync("WS_INSERT_C_NO", New Object() {r_no, ref_no}, Me.WS_INSERT_C_NOOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_INSERT_C_NOOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_INSERT_C_NOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_INSERT_C_NOCompleted(Me, New WS_INSERT_C_NOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_INSERT_R_NO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WS_INSERT_R_NO(ByVal process_no As String, ByVal CITIZEN_AUTHIRIZE As String, ByVal CITIZEN_ID As String, ByVal nameplace As String, ByVal addr As String, ByVal pvncd As Integer, ByVal ref_no As String) As String
            Dim results() As Object = Me.Invoke("WS_INSERT_R_NO", New Object() {process_no, CITIZEN_AUTHIRIZE, CITIZEN_ID, nameplace, addr, pvncd, ref_no})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WS_INSERT_R_NOAsync(ByVal process_no As String, ByVal CITIZEN_AUTHIRIZE As String, ByVal CITIZEN_ID As String, ByVal nameplace As String, ByVal addr As String, ByVal pvncd As Integer, ByVal ref_no As String)
            Me.WS_INSERT_R_NOAsync(process_no, CITIZEN_AUTHIRIZE, CITIZEN_ID, nameplace, addr, pvncd, ref_no, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_INSERT_R_NOAsync(ByVal process_no As String, ByVal CITIZEN_AUTHIRIZE As String, ByVal CITIZEN_ID As String, ByVal nameplace As String, ByVal addr As String, ByVal pvncd As Integer, ByVal ref_no As String, ByVal userState As Object)
            If (Me.WS_INSERT_R_NOOperationCompleted Is Nothing) Then
                Me.WS_INSERT_R_NOOperationCompleted = AddressOf Me.OnWS_INSERT_R_NOOperationCompleted
            End If
            Me.InvokeAsync("WS_INSERT_R_NO", New Object() {process_no, CITIZEN_AUTHIRIZE, CITIZEN_ID, nameplace, addr, pvncd, ref_no}, Me.WS_INSERT_R_NOOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_INSERT_R_NOOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_INSERT_R_NOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_INSERT_R_NOCompleted(Me, New WS_INSERT_R_NOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WS_UPDATE_STAFF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WS_UPDATE_STAFF(ByVal rc_no As String, ByVal identify As String) As String
            Dim results() As Object = Me.Invoke("WS_UPDATE_STAFF", New Object() {rc_no, identify})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WS_UPDATE_STAFFAsync(ByVal rc_no As String, ByVal identify As String)
            Me.WS_UPDATE_STAFFAsync(rc_no, identify, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WS_UPDATE_STAFFAsync(ByVal rc_no As String, ByVal identify As String, ByVal userState As Object)
            If (Me.WS_UPDATE_STAFFOperationCompleted Is Nothing) Then
                Me.WS_UPDATE_STAFFOperationCompleted = AddressOf Me.OnWS_UPDATE_STAFFOperationCompleted
            End If
            Me.InvokeAsync("WS_UPDATE_STAFF", New Object() {rc_no, identify}, Me.WS_UPDATE_STAFFOperationCompleted, userState)
        End Sub
        
        Private Sub OnWS_UPDATE_STAFFOperationCompleted(ByVal arg As Object)
            If (Not (Me.WS_UPDATE_STAFFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WS_UPDATE_STAFFCompleted(Me, New WS_UPDATE_STAFFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub WS_INSERT_A_NOCompletedEventHandler(ByVal sender As Object, ByVal e As WS_INSERT_A_NOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_INSERT_A_NOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub WS_INSERT_C_NOCompletedEventHandler(ByVal sender As Object, ByVal e As WS_INSERT_C_NOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_INSERT_C_NOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub WS_INSERT_R_NOCompletedEventHandler(ByVal sender As Object, ByVal e As WS_INSERT_R_NOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_INSERT_R_NOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub WS_UPDATE_STAFFCompletedEventHandler(ByVal sender As Object, ByVal e As WS_UPDATE_STAFFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WS_UPDATE_STAFFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
