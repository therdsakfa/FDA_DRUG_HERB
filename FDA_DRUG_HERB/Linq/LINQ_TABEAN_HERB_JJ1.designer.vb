'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="LGT_DRUG_DEMO")>  _
Partial Public Class LINQ_TABEAN_HERB_JJDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertGEN_NO_JJ(instance As GEN_NO_JJ)
    End Sub
  Partial Private Sub UpdateGEN_NO_JJ(instance As GEN_NO_JJ)
    End Sub
  Partial Private Sub DeleteGEN_NO_JJ(instance As GEN_NO_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_EATTING_JJ(instance As MAS_TABEAN_HERB_EATTING_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_EATTING_JJ(instance As MAS_TABEAN_HERB_EATTING_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_EATTING_JJ(instance As MAS_TABEAN_HERB_EATTING_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_NAME_JJ(instance As MAS_TABEAN_HERB_NAME_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_NAME_JJ(instance As MAS_TABEAN_HERB_NAME_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_NAME_JJ(instance As MAS_TABEAN_HERB_NAME_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_PRODUCT_AGE_JJ(instance As MAS_TABEAN_HERB_PRODUCT_AGE_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_PRODUCT_AGE_JJ(instance As MAS_TABEAN_HERB_PRODUCT_AGE_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_PRODUCT_AGE_JJ(instance As MAS_TABEAN_HERB_PRODUCT_AGE_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_PRODUCT_PROCESS_JJ(instance As MAS_TABEAN_HERB_PRODUCT_PROCESS_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_PRODUCT_PROCESS_JJ(instance As MAS_TABEAN_HERB_PRODUCT_PROCESS_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_PRODUCT_PROCESS_JJ(instance As MAS_TABEAN_HERB_PRODUCT_PROCESS_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_STATUS_JJ(instance As MAS_TABEAN_HERB_STATUS_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_STATUS_JJ(instance As MAS_TABEAN_HERB_STATUS_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_STATUS_JJ(instance As MAS_TABEAN_HERB_STATUS_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_STYPE_JJ(instance As MAS_TABEAN_HERB_STYPE_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_STYPE_JJ(instance As MAS_TABEAN_HERB_STYPE_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_STYPE_JJ(instance As MAS_TABEAN_HERB_STYPE_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_SYNDROME_JJ(instance As MAS_TABEAN_HERB_SYNDROME_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_SYNDROME_JJ(instance As MAS_TABEAN_HERB_SYNDROME_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_SYNDROME_JJ(instance As MAS_TABEAN_HERB_SYNDROME_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_UPLOADFILE_JJ(instance As MAS_TABEAN_HERB_UPLOADFILE_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_UPLOADFILE_JJ(instance As MAS_TABEAN_HERB_UPLOADFILE_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_UPLOADFILE_JJ(instance As MAS_TABEAN_HERB_UPLOADFILE_JJ)
    End Sub
  Partial Private Sub InsertTABEAN_HERB_UPLOAD_FILE_JJ(instance As TABEAN_HERB_UPLOAD_FILE_JJ)
    End Sub
  Partial Private Sub UpdateTABEAN_HERB_UPLOAD_FILE_JJ(instance As TABEAN_HERB_UPLOAD_FILE_JJ)
    End Sub
  Partial Private Sub DeleteTABEAN_HERB_UPLOAD_FILE_JJ(instance As TABEAN_HERB_UPLOAD_FILE_JJ)
    End Sub
  Partial Private Sub InsertTABEAN_TRANSACTION_JJ(instance As TABEAN_TRANSACTION_JJ)
    End Sub
  Partial Private Sub UpdateTABEAN_TRANSACTION_JJ(instance As TABEAN_TRANSACTION_JJ)
    End Sub
  Partial Private Sub DeleteTABEAN_TRANSACTION_JJ(instance As TABEAN_TRANSACTION_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_NEW_STATUS(instance As MAS_TABEAN_HERB_NEW_STATUS)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_NEW_STATUS(instance As MAS_TABEAN_HERB_NEW_STATUS)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_NEW_STATUS(instance As MAS_TABEAN_HERB_NEW_STATUS)
    End Sub
  Partial Private Sub InsertTABEAN_HERB_MANUFACTRUE(instance As TABEAN_HERB_MANUFACTRUE)
    End Sub
  Partial Private Sub UpdateTABEAN_HERB_MANUFACTRUE(instance As TABEAN_HERB_MANUFACTRUE)
    End Sub
  Partial Private Sub DeleteTABEAN_HERB_MANUFACTRUE(instance As TABEAN_HERB_MANUFACTRUE)
    End Sub
  Partial Private Sub InsertTABEAN_HERB_SIZE_PACK_FST(instance As TABEAN_HERB_SIZE_PACK_FST)
    End Sub
  Partial Private Sub UpdateTABEAN_HERB_SIZE_PACK_FST(instance As TABEAN_HERB_SIZE_PACK_FST)
    End Sub
  Partial Private Sub DeleteTABEAN_HERB_SIZE_PACK_FST(instance As TABEAN_HERB_SIZE_PACK_FST)
    End Sub
  Partial Private Sub InsertGEN_NO_TBN(instance As GEN_NO_TBN)
    End Sub
  Partial Private Sub UpdateGEN_NO_TBN(instance As GEN_NO_TBN)
    End Sub
  Partial Private Sub DeleteGEN_NO_TBN(instance As GEN_NO_TBN)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_ML(instance As MAS_TABEAN_HERB_ML)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_ML(instance As MAS_TABEAN_HERB_ML)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_ML(instance As MAS_TABEAN_HERB_ML)
    End Sub
  Partial Private Sub InsertTABEAN_HERB(instance As TABEAN_HERB)
    End Sub
  Partial Private Sub UpdateTABEAN_HERB(instance As TABEAN_HERB)
    End Sub
  Partial Private Sub DeleteTABEAN_HERB(instance As TABEAN_HERB)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_DISCOUNT(instance As MAS_TABEAN_HERB_DISCOUNT)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_DISCOUNT(instance As MAS_TABEAN_HERB_DISCOUNT)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_DISCOUNT(instance As MAS_TABEAN_HERB_DISCOUNT)
    End Sub
  Partial Private Sub InsertTABEAN_JJ(instance As TABEAN_JJ)
    End Sub
  Partial Private Sub UpdateTABEAN_JJ(instance As TABEAN_JJ)
    End Sub
  Partial Private Sub DeleteTABEAN_JJ(instance As TABEAN_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_NAME_DETAIL_JJ(instance As MAS_TABEAN_HERB_NAME_DETAIL_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_NAME_DETAIL_JJ(instance As MAS_TABEAN_HERB_NAME_DETAIL_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_NAME_DETAIL_JJ(instance As MAS_TABEAN_HERB_NAME_DETAIL_JJ)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_HERB_RECIPE_PRODUCT_JJ(instance As MAS_TABEAN_HERB_RECIPE_PRODUCT_JJ)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_HERB_RECIPE_PRODUCT_JJ(instance As MAS_TABEAN_HERB_RECIPE_PRODUCT_JJ)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_HERB_RECIPE_PRODUCT_JJ(instance As MAS_TABEAN_HERB_RECIPE_PRODUCT_JJ)
    End Sub
  Partial Private Sub InsertTABEAN_JJ_SUB_PACKSIZE(instance As TABEAN_JJ_SUB_PACKSIZE)
    End Sub
  Partial Private Sub UpdateTABEAN_JJ_SUB_PACKSIZE(instance As TABEAN_JJ_SUB_PACKSIZE)
    End Sub
  Partial Private Sub DeleteTABEAN_JJ_SUB_PACKSIZE(instance As TABEAN_JJ_SUB_PACKSIZE)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("LGT_DRUGConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property GEN_NO_JJs() As System.Data.Linq.Table(Of GEN_NO_JJ)
		Get
			Return Me.GetTable(Of GEN_NO_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_EATTING_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_EATTING_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_EATTING_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_NAME_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_NAME_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_NAME_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_PRODUCT_AGE_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_PRODUCT_AGE_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_PRODUCT_AGE_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_PRODUCT_PROCESS_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_PRODUCT_PROCESS_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_PRODUCT_PROCESS_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_STATUS_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_STATUS_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_STATUS_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_STYPE_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_STYPE_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_STYPE_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_SYNDROME_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_SYNDROME_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_SYNDROME_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_UPLOADFILE_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_UPLOADFILE_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_UPLOADFILE_JJ)
		End Get
	End Property
	
	Public ReadOnly Property TABEAN_HERB_UPLOAD_FILE_JJs() As System.Data.Linq.Table(Of TABEAN_HERB_UPLOAD_FILE_JJ)
		Get
			Return Me.GetTable(Of TABEAN_HERB_UPLOAD_FILE_JJ)
		End Get
	End Property
	
	Public ReadOnly Property TABEAN_TRANSACTION_JJs() As System.Data.Linq.Table(Of TABEAN_TRANSACTION_JJ)
		Get
			Return Me.GetTable(Of TABEAN_TRANSACTION_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_NEW_STATUS() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_NEW_STATUS)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_NEW_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property TABEAN_HERB_MANUFACTRUEs() As System.Data.Linq.Table(Of TABEAN_HERB_MANUFACTRUE)
		Get
			Return Me.GetTable(Of TABEAN_HERB_MANUFACTRUE)
		End Get
	End Property
	
	Public ReadOnly Property TABEAN_HERB_SIZE_PACK_FSTs() As System.Data.Linq.Table(Of TABEAN_HERB_SIZE_PACK_FST)
		Get
			Return Me.GetTable(Of TABEAN_HERB_SIZE_PACK_FST)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_TBNs() As System.Data.Linq.Table(Of GEN_NO_TBN)
		Get
			Return Me.GetTable(Of GEN_NO_TBN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_MLs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_ML)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_ML)
		End Get
	End Property
	
	Public ReadOnly Property TABEAN_HERBs() As System.Data.Linq.Table(Of TABEAN_HERB)
		Get
			Return Me.GetTable(Of TABEAN_HERB)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_DISCOUNTs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_DISCOUNT)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_DISCOUNT)
		End Get
	End Property
	
	Public ReadOnly Property TABEAN_JJs() As System.Data.Linq.Table(Of TABEAN_JJ)
		Get
			Return Me.GetTable(Of TABEAN_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_NAME_DETAIL_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_NAME_DETAIL_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_NAME_DETAIL_JJ)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_HERB_RECIPE_PRODUCT_JJs() As System.Data.Linq.Table(Of MAS_TABEAN_HERB_RECIPE_PRODUCT_JJ)
		Get
			Return Me.GetTable(Of MAS_TABEAN_HERB_RECIPE_PRODUCT_JJ)
		End Get
	End Property
	
	Public ReadOnly Property TABEAN_JJ_SUB_PACKSIZEs() As System.Data.Linq.Table(Of TABEAN_JJ_SUB_PACKSIZE)
		Get
			Return Me.GetTable(Of TABEAN_JJ_SUB_PACKSIZE)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_JJ")>  _
Partial Public Class GEN_NO_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_EATTING_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_EATTING_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _EATTING_ID As System.Nullable(Of Integer)
	
	Private _EATTING_NAME As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IS_EXPAND As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnEATTING_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEATTING_IDChanged()
    End Sub
    Partial Private Sub OnEATTING_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEATTING_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnIS_EXPANDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_EXPANDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATTING_ID", DbType:="Int")>  _
	Public Property EATTING_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EATTING_ID
		End Get
		Set
			If (Me._EATTING_ID.Equals(value) = false) Then
				Me.OnEATTING_IDChanging(value)
				Me.SendPropertyChanging
				Me._EATTING_ID = value
				Me.SendPropertyChanged("EATTING_ID")
				Me.OnEATTING_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATTING_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property EATTING_NAME() As String
		Get
			Return Me._EATTING_NAME
		End Get
		Set
			If (String.Equals(Me._EATTING_NAME, value) = false) Then
				Me.OnEATTING_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._EATTING_NAME = value
				Me.SendPropertyChanged("EATTING_NAME")
				Me.OnEATTING_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXPAND", DbType:="Bit")>  _
	Public Property IS_EXPAND() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_EXPAND
		End Get
		Set
			If (Me._IS_EXPAND.Equals(value) = false) Then
				Me.OnIS_EXPANDChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXPAND = value
				Me.SendPropertyChanged("IS_EXPAND")
				Me.OnIS_EXPANDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_NAME_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_NAME_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _HERB_ID As System.Nullable(Of Integer)
	
	Private _HERB_NAME As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IS_EXPAND As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnHERB_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHERB_IDChanged()
    End Sub
    Partial Private Sub OnHERB_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHERB_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnIS_EXPANDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_EXPANDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HERB_ID", DbType:="Int")>  _
	Public Property HERB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HERB_ID
		End Get
		Set
			If (Me._HERB_ID.Equals(value) = false) Then
				Me.OnHERB_IDChanging(value)
				Me.SendPropertyChanging
				Me._HERB_ID = value
				Me.SendPropertyChanged("HERB_ID")
				Me.OnHERB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HERB_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property HERB_NAME() As String
		Get
			Return Me._HERB_NAME
		End Get
		Set
			If (String.Equals(Me._HERB_NAME, value) = false) Then
				Me.OnHERB_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._HERB_NAME = value
				Me.SendPropertyChanged("HERB_NAME")
				Me.OnHERB_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXPAND", DbType:="Bit")>  _
	Public Property IS_EXPAND() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_EXPAND
		End Get
		Set
			If (Me._IS_EXPAND.Equals(value) = false) Then
				Me.OnIS_EXPANDChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXPAND = value
				Me.SendPropertyChanged("IS_EXPAND")
				Me.OnIS_EXPANDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_PRODUCT_AGE_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_PRODUCT_AGE_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PRO_AGE_ID As System.Nullable(Of Integer)
	
	Private _PRO_AGE_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPRO_AGE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRO_AGE_IDChanged()
    End Sub
    Partial Private Sub OnPRO_AGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPRO_AGE_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_AGE_ID", DbType:="Int")>  _
	Public Property PRO_AGE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PRO_AGE_ID
		End Get
		Set
			If (Me._PRO_AGE_ID.Equals(value) = false) Then
				Me.OnPRO_AGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PRO_AGE_ID = value
				Me.SendPropertyChanged("PRO_AGE_ID")
				Me.OnPRO_AGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRO_AGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PRO_AGE_NAME() As String
		Get
			Return Me._PRO_AGE_NAME
		End Get
		Set
			If (String.Equals(Me._PRO_AGE_NAME, value) = false) Then
				Me.OnPRO_AGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PRO_AGE_NAME = value
				Me.SendPropertyChanged("PRO_AGE_NAME")
				Me.OnPRO_AGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Int")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_PRODUCT_PROCESS_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_PRODUCT_PROCESS_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DD_HERB_NAME_PRODUCT_ID As System.Nullable(Of Integer)
	
	Private _HEAD_NAME As String
	
	Private _DETAIL_NAME As String
	
	Private _TYPE_ID As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ACTIVE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDD_HERB_NAME_PRODUCT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDD_HERB_NAME_PRODUCT_IDChanged()
    End Sub
    Partial Private Sub OnHEAD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnHEAD_NAMEChanged()
    End Sub
    Partial Private Sub OnDETAIL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDETAIL_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_IDChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DD_HERB_NAME_PRODUCT_ID", DbType:="Int")>  _
	Public Property DD_HERB_NAME_PRODUCT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DD_HERB_NAME_PRODUCT_ID
		End Get
		Set
			If (Me._DD_HERB_NAME_PRODUCT_ID.Equals(value) = false) Then
				Me.OnDD_HERB_NAME_PRODUCT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DD_HERB_NAME_PRODUCT_ID = value
				Me.SendPropertyChanged("DD_HERB_NAME_PRODUCT_ID")
				Me.OnDD_HERB_NAME_PRODUCT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property HEAD_NAME() As String
		Get
			Return Me._HEAD_NAME
		End Get
		Set
			If (String.Equals(Me._HEAD_NAME, value) = false) Then
				Me.OnHEAD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_NAME = value
				Me.SendPropertyChanged("HEAD_NAME")
				Me.OnHEAD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DETAIL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DETAIL_NAME() As String
		Get
			Return Me._DETAIL_NAME
		End Get
		Set
			If (String.Equals(Me._DETAIL_NAME, value) = false) Then
				Me.OnDETAIL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DETAIL_NAME = value
				Me.SendPropertyChanged("DETAIL_NAME")
				Me.OnDETAIL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_ID", DbType:="Int")>  _
	Public Property TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_ID
		End Get
		Set
			If (Me._TYPE_ID.Equals(value) = false) Then
				Me.OnTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_ID = value
				Me.SendPropertyChanged("TYPE_ID")
				Me.OnTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Bit")>  _
	Public Property ACTIVE() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_STATUS_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_STATUS_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_NAME As String
	
	Private _STATUS_GROUP As System.Nullable(Of Integer)
	
	Private _STATUS_GROUP_SUB As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IS_EXPAND As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUP_SUBChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_GROUP_SUBChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnIS_EXPANDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_EXPANDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP", DbType:="Int")>  _
	Public Property STATUS_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_GROUP
		End Get
		Set
			If (Me._STATUS_GROUP.Equals(value) = false) Then
				Me.OnSTATUS_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP = value
				Me.SendPropertyChanged("STATUS_GROUP")
				Me.OnSTATUS_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP_SUB", DbType:="Int")>  _
	Public Property STATUS_GROUP_SUB() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_GROUP_SUB
		End Get
		Set
			If (Me._STATUS_GROUP_SUB.Equals(value) = false) Then
				Me.OnSTATUS_GROUP_SUBChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP_SUB = value
				Me.SendPropertyChanged("STATUS_GROUP_SUB")
				Me.OnSTATUS_GROUP_SUBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXPAND", DbType:="Bit")>  _
	Public Property IS_EXPAND() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_EXPAND
		End Get
		Set
			If (Me._IS_EXPAND.Equals(value) = false) Then
				Me.OnIS_EXPANDChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXPAND = value
				Me.SendPropertyChanged("IS_EXPAND")
				Me.OnIS_EXPANDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_STYPE_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_STYPE_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STYPE_ID As System.Nullable(Of Integer)
	
	Private _STYPE_NAME As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IS_EXPAND As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTYPE_IDChanged()
    End Sub
    Partial Private Sub OnSTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnIS_EXPANDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_EXPANDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYPE_ID", DbType:="Int")>  _
	Public Property STYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STYPE_ID
		End Get
		Set
			If (Me._STYPE_ID.Equals(value) = false) Then
				Me.OnSTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._STYPE_ID = value
				Me.SendPropertyChanged("STYPE_ID")
				Me.OnSTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STYPE_NAME() As String
		Get
			Return Me._STYPE_NAME
		End Get
		Set
			If (String.Equals(Me._STYPE_NAME, value) = false) Then
				Me.OnSTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STYPE_NAME = value
				Me.SendPropertyChanged("STYPE_NAME")
				Me.OnSTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXPAND", DbType:="Bit")>  _
	Public Property IS_EXPAND() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_EXPAND
		End Get
		Set
			If (Me._IS_EXPAND.Equals(value) = false) Then
				Me.OnIS_EXPANDChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXPAND = value
				Me.SendPropertyChanged("IS_EXPAND")
				Me.OnIS_EXPANDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_SYNDROME_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_SYNDROME_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _SYNDROME_ID As System.Nullable(Of Integer)
	
	Private _SYNDROME_NAME As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IS_EXPAND As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSYNDROME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYNDROME_IDChanged()
    End Sub
    Partial Private Sub OnSYNDROME_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSYNDROME_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnIS_EXPANDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_EXPANDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYNDROME_ID", DbType:="Int")>  _
	Public Property SYNDROME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYNDROME_ID
		End Get
		Set
			If (Me._SYNDROME_ID.Equals(value) = false) Then
				Me.OnSYNDROME_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYNDROME_ID = value
				Me.SendPropertyChanged("SYNDROME_ID")
				Me.OnSYNDROME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYNDROME_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SYNDROME_NAME() As String
		Get
			Return Me._SYNDROME_NAME
		End Get
		Set
			If (String.Equals(Me._SYNDROME_NAME, value) = false) Then
				Me.OnSYNDROME_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SYNDROME_NAME = value
				Me.SendPropertyChanged("SYNDROME_NAME")
				Me.OnSYNDROME_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXPAND", DbType:="Bit")>  _
	Public Property IS_EXPAND() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_EXPAND
		End Get
		Set
			If (Me._IS_EXPAND.Equals(value) = false) Then
				Me.OnIS_EXPANDChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXPAND = value
				Me.SendPropertyChanged("IS_EXPAND")
				Me.OnIS_EXPANDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_UPLOADFILE_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_UPLOADFILE_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _HEAD_ID As System.Nullable(Of Integer)
	
	Private _DUCUMENT_NAME As String
	
	Private _TITEL_ID As System.Nullable(Of Integer)
	
	Private _TITLE_ID2 As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _TYPE_ID As System.Nullable(Of Integer)
	
	Private _SUB_MAIN_MENU As String
	
	Private _MAIN_MENU As String
	
	Private _ANNOTATION As String
	
	Private _SUB_MENU_GROUP As String
	
	Private _MENU_GROUP As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnHEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_IDChanged()
    End Sub
    Partial Private Sub OnDUCUMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDUCUMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnTITEL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTITEL_IDChanged()
    End Sub
    Partial Private Sub OnTITLE_ID2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTITLE_ID2Changed()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_IDChanged()
    End Sub
    Partial Private Sub OnSUB_MAIN_MENUChanging(value As String)
    End Sub
    Partial Private Sub OnSUB_MAIN_MENUChanged()
    End Sub
    Partial Private Sub OnMAIN_MENUChanging(value As String)
    End Sub
    Partial Private Sub OnMAIN_MENUChanged()
    End Sub
    Partial Private Sub OnANNOTATIONChanging(value As String)
    End Sub
    Partial Private Sub OnANNOTATIONChanged()
    End Sub
    Partial Private Sub OnSUB_MENU_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnSUB_MENU_GROUPChanged()
    End Sub
    Partial Private Sub OnMENU_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnMENU_GROUPChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="Int")>  _
	Public Property HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (Me._HEAD_ID.Equals(value) = false) Then
				Me.OnHEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_ID = value
				Me.SendPropertyChanged("HEAD_ID")
				Me.OnHEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUCUMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DUCUMENT_NAME() As String
		Get
			Return Me._DUCUMENT_NAME
		End Get
		Set
			If (String.Equals(Me._DUCUMENT_NAME, value) = false) Then
				Me.OnDUCUMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DUCUMENT_NAME = value
				Me.SendPropertyChanged("DUCUMENT_NAME")
				Me.OnDUCUMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TITEL_ID", DbType:="Int")>  _
	Public Property TITEL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TITEL_ID
		End Get
		Set
			If (Me._TITEL_ID.Equals(value) = false) Then
				Me.OnTITEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._TITEL_ID = value
				Me.SendPropertyChanged("TITEL_ID")
				Me.OnTITEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TITLE_ID2", DbType:="Int")>  _
	Public Property TITLE_ID2() As System.Nullable(Of Integer)
		Get
			Return Me._TITLE_ID2
		End Get
		Set
			If (Me._TITLE_ID2.Equals(value) = false) Then
				Me.OnTITLE_ID2Changing(value)
				Me.SendPropertyChanging
				Me._TITLE_ID2 = value
				Me.SendPropertyChanged("TITLE_ID2")
				Me.OnTITLE_ID2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_ID", DbType:="Int")>  _
	Public Property TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_ID
		End Get
		Set
			If (Me._TYPE_ID.Equals(value) = false) Then
				Me.OnTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_ID = value
				Me.SendPropertyChanged("TYPE_ID")
				Me.OnTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_MAIN_MENU", DbType:="NVarChar(MAX)")>  _
	Public Property SUB_MAIN_MENU() As String
		Get
			Return Me._SUB_MAIN_MENU
		End Get
		Set
			If (String.Equals(Me._SUB_MAIN_MENU, value) = false) Then
				Me.OnSUB_MAIN_MENUChanging(value)
				Me.SendPropertyChanging
				Me._SUB_MAIN_MENU = value
				Me.SendPropertyChanged("SUB_MAIN_MENU")
				Me.OnSUB_MAIN_MENUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_MENU", DbType:="NVarChar(MAX)")>  _
	Public Property MAIN_MENU() As String
		Get
			Return Me._MAIN_MENU
		End Get
		Set
			If (String.Equals(Me._MAIN_MENU, value) = false) Then
				Me.OnMAIN_MENUChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_MENU = value
				Me.SendPropertyChanged("MAIN_MENU")
				Me.OnMAIN_MENUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANNOTATION", DbType:="NVarChar(MAX)")>  _
	Public Property ANNOTATION() As String
		Get
			Return Me._ANNOTATION
		End Get
		Set
			If (String.Equals(Me._ANNOTATION, value) = false) Then
				Me.OnANNOTATIONChanging(value)
				Me.SendPropertyChanging
				Me._ANNOTATION = value
				Me.SendPropertyChanged("ANNOTATION")
				Me.OnANNOTATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_MENU_GROUP", DbType:="NChar(10)")>  _
	Public Property SUB_MENU_GROUP() As String
		Get
			Return Me._SUB_MENU_GROUP
		End Get
		Set
			If (String.Equals(Me._SUB_MENU_GROUP, value) = false) Then
				Me.OnSUB_MENU_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._SUB_MENU_GROUP = value
				Me.SendPropertyChanged("SUB_MENU_GROUP")
				Me.OnSUB_MENU_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_GROUP", DbType:="NChar(10)")>  _
	Public Property MENU_GROUP() As String
		Get
			Return Me._MENU_GROUP
		End Get
		Set
			If (String.Equals(Me._MENU_GROUP, value) = false) Then
				Me.OnMENU_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._MENU_GROUP = value
				Me.SendPropertyChanged("MENU_GROUP")
				Me.OnMENU_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TABEAN_HERB_UPLOAD_FILE_JJ")>  _
Partial Public Class TABEAN_HERB_UPLOAD_FILE_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_IDA_LCN As System.Nullable(Of Integer)
	
	Private _NAME_FAKE As String
	
	Private _NAME_REAL As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _TYPE As String
	
	Private _TYPE_PERSON As System.Nullable(Of Integer)
	
	Private _TYPE_PERSON_NAME As String
	
	Private _TYPE_BSN As System.Nullable(Of Integer)
	
	Private _TYPE_BSN_NAME As String
	
	Private _TYPE_LOCAL As System.Nullable(Of Integer)
	
	Private _TYPE_LOCAL_NAME As String
	
	Private _DUCUMENT_NAME As String
	
	Private _SUB_DOCUMENT_NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ACTIVE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_LCNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDA_LCNChanged()
    End Sub
    Partial Private Sub OnNAME_FAKEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_FAKEChanged()
    End Sub
    Partial Private Sub OnNAME_REALChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_REALChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnTYPE_PERSONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PERSONChanged()
    End Sub
    Partial Private Sub OnTYPE_PERSON_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_PERSON_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_BSNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_BSNChanged()
    End Sub
    Partial Private Sub OnTYPE_BSN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_BSN_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_LOCALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_LOCALChanged()
    End Sub
    Partial Private Sub OnTYPE_LOCAL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_LOCAL_NAMEChanged()
    End Sub
    Partial Private Sub OnDUCUMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDUCUMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnSUB_DOCUMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSUB_DOCUMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_LCN", DbType:="Int")>  _
	Public Property FK_IDA_LCN() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA_LCN
		End Get
		Set
			If (Me._FK_IDA_LCN.Equals(value) = false) Then
				Me.OnFK_IDA_LCNChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_LCN = value
				Me.SendPropertyChanged("FK_IDA_LCN")
				Me.OnFK_IDA_LCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_FAKE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_FAKE() As String
		Get
			Return Me._NAME_FAKE
		End Get
		Set
			If (String.Equals(Me._NAME_FAKE, value) = false) Then
				Me.OnNAME_FAKEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_FAKE = value
				Me.SendPropertyChanged("NAME_FAKE")
				Me.OnNAME_FAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_REAL", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_REAL() As String
		Get
			Return Me._NAME_REAL
		End Get
		Set
			If (String.Equals(Me._NAME_REAL, value) = false) Then
				Me.OnNAME_REALChanging(value)
				Me.SendPropertyChanging
				Me._NAME_REAL = value
				Me.SendPropertyChanged("NAME_REAL")
				Me.OnNAME_REALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NChar(10)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PERSON", DbType:="Int")>  _
	Public Property TYPE_PERSON() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PERSON
		End Get
		Set
			If (Me._TYPE_PERSON.Equals(value) = false) Then
				Me.OnTYPE_PERSONChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PERSON = value
				Me.SendPropertyChanged("TYPE_PERSON")
				Me.OnTYPE_PERSONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PERSON_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_PERSON_NAME() As String
		Get
			Return Me._TYPE_PERSON_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_PERSON_NAME, value) = false) Then
				Me.OnTYPE_PERSON_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PERSON_NAME = value
				Me.SendPropertyChanged("TYPE_PERSON_NAME")
				Me.OnTYPE_PERSON_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_BSN", DbType:="Int")>  _
	Public Property TYPE_BSN() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_BSN
		End Get
		Set
			If (Me._TYPE_BSN.Equals(value) = false) Then
				Me.OnTYPE_BSNChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_BSN = value
				Me.SendPropertyChanged("TYPE_BSN")
				Me.OnTYPE_BSNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_BSN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_BSN_NAME() As String
		Get
			Return Me._TYPE_BSN_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_BSN_NAME, value) = false) Then
				Me.OnTYPE_BSN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_BSN_NAME = value
				Me.SendPropertyChanged("TYPE_BSN_NAME")
				Me.OnTYPE_BSN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_LOCAL", DbType:="Int")>  _
	Public Property TYPE_LOCAL() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_LOCAL
		End Get
		Set
			If (Me._TYPE_LOCAL.Equals(value) = false) Then
				Me.OnTYPE_LOCALChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_LOCAL = value
				Me.SendPropertyChanged("TYPE_LOCAL")
				Me.OnTYPE_LOCALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_LOCAL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_LOCAL_NAME() As String
		Get
			Return Me._TYPE_LOCAL_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_LOCAL_NAME, value) = false) Then
				Me.OnTYPE_LOCAL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_LOCAL_NAME = value
				Me.SendPropertyChanged("TYPE_LOCAL_NAME")
				Me.OnTYPE_LOCAL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUCUMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DUCUMENT_NAME() As String
		Get
			Return Me._DUCUMENT_NAME
		End Get
		Set
			If (String.Equals(Me._DUCUMENT_NAME, value) = false) Then
				Me.OnDUCUMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DUCUMENT_NAME = value
				Me.SendPropertyChanged("DUCUMENT_NAME")
				Me.OnDUCUMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_DOCUMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SUB_DOCUMENT_NAME() As String
		Get
			Return Me._SUB_DOCUMENT_NAME
		End Get
		Set
			If (String.Equals(Me._SUB_DOCUMENT_NAME, value) = false) Then
				Me.OnSUB_DOCUMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_DOCUMENT_NAME = value
				Me.SendPropertyChanged("SUB_DOCUMENT_NAME")
				Me.OnSUB_DOCUMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Bit")>  _
	Public Property ACTIVE() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TABEAN_TRANSACTION_JJ")>  _
Partial Public Class TABEAN_TRANSACTION_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA_JJ As System.Nullable(Of Integer)
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _UPLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _DOWNLOAD_ID As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _GEN_NO As System.Nullable(Of Integer)
	
	Private _PROCESS_ID_STR As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_JJChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDA_JJChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnGEN_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGEN_NOChanged()
    End Sub
    Partial Private Sub OnPROCESS_ID_STRChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_ID_STRChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_JJ", DbType:="Int")>  _
	Public Property FK_IDA_JJ() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA_JJ
		End Get
		Set
			If (Me._FK_IDA_JJ.Equals(value) = false) Then
				Me.OnFK_IDA_JJChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_JJ = value
				Me.SendPropertyChanged("FK_IDA_JJ")
				Me.OnFK_IDA_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPLOAD_DATE", DbType:="DateTime")>  _
	Public Property UPLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPLOAD_DATE
		End Get
		Set
			If (Me._UPLOAD_DATE.Equals(value) = false) Then
				Me.OnUPLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPLOAD_DATE = value
				Me.SendPropertyChanged("UPLOAD_DATE")
				Me.OnUPLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_ID", DbType:="Int")>  _
	Public Property DOWNLOAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWNLOAD_ID
		End Get
		Set
			If (Me._DOWNLOAD_ID.Equals(value) = false) Then
				Me.OnDOWNLOAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_ID = value
				Me.SendPropertyChanged("DOWNLOAD_ID")
				Me.OnDOWNLOAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(10)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GEN_NO", DbType:="Int")>  _
	Public Property GEN_NO() As System.Nullable(Of Integer)
		Get
			Return Me._GEN_NO
		End Get
		Set
			If (Me._GEN_NO.Equals(value) = false) Then
				Me.OnGEN_NOChanging(value)
				Me.SendPropertyChanging
				Me._GEN_NO = value
				Me.SendPropertyChanged("GEN_NO")
				Me.OnGEN_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID_STR", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID_STR() As String
		Get
			Return Me._PROCESS_ID_STR
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID_STR, value) = false) Then
				Me.OnPROCESS_ID_STRChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID_STR = value
				Me.SendPropertyChanged("PROCESS_ID_STR")
				Me.OnPROCESS_ID_STRChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_NEW_STATUS")>  _
Partial Public Class MAS_TABEAN_HERB_NEW_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_NAME As String
	
	Private _STATUS_GROUP As System.Nullable(Of Integer)
	
	Private _STATUS_GROUP_SUB As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IS_EXPAND As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUP_SUBChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_GROUP_SUBChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnIS_EXPANDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_EXPANDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP", DbType:="Int")>  _
	Public Property STATUS_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_GROUP
		End Get
		Set
			If (Me._STATUS_GROUP.Equals(value) = false) Then
				Me.OnSTATUS_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP = value
				Me.SendPropertyChanged("STATUS_GROUP")
				Me.OnSTATUS_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP_SUB", DbType:="Int")>  _
	Public Property STATUS_GROUP_SUB() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_GROUP_SUB
		End Get
		Set
			If (Me._STATUS_GROUP_SUB.Equals(value) = false) Then
				Me.OnSTATUS_GROUP_SUBChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP_SUB = value
				Me.SendPropertyChanged("STATUS_GROUP_SUB")
				Me.OnSTATUS_GROUP_SUBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXPAND", DbType:="Int")>  _
	Public Property IS_EXPAND() As System.Nullable(Of Integer)
		Get
			Return Me._IS_EXPAND
		End Get
		Set
			If (Me._IS_EXPAND.Equals(value) = false) Then
				Me.OnIS_EXPANDChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXPAND = value
				Me.SendPropertyChanged("IS_EXPAND")
				Me.OnIS_EXPANDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TABEAN_HERB_MANUFACTRUE")>  _
Partial Public Class TABEAN_HERB_MANUFACTRUE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA_DQ As System.Nullable(Of Integer)
	
	Private _NO_ID As System.Nullable(Of Integer)
	
	Private _MENUFAC_ID As System.Nullable(Of Integer)
	
	Private _MENUFAC_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_DQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDA_DQChanged()
    End Sub
    Partial Private Sub OnNO_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNO_IDChanged()
    End Sub
    Partial Private Sub OnMENUFAC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENUFAC_IDChanged()
    End Sub
    Partial Private Sub OnMENUFAC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMENUFAC_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_DQ", DbType:="Int")>  _
	Public Property FK_IDA_DQ() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA_DQ
		End Get
		Set
			If (Me._FK_IDA_DQ.Equals(value) = false) Then
				Me.OnFK_IDA_DQChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_DQ = value
				Me.SendPropertyChanged("FK_IDA_DQ")
				Me.OnFK_IDA_DQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_ID", DbType:="Int")>  _
	Public Property NO_ID() As System.Nullable(Of Integer)
		Get
			Return Me._NO_ID
		End Get
		Set
			If (Me._NO_ID.Equals(value) = false) Then
				Me.OnNO_IDChanging(value)
				Me.SendPropertyChanging
				Me._NO_ID = value
				Me.SendPropertyChanged("NO_ID")
				Me.OnNO_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENUFAC_ID", DbType:="Int")>  _
	Public Property MENUFAC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MENUFAC_ID
		End Get
		Set
			If (Me._MENUFAC_ID.Equals(value) = false) Then
				Me.OnMENUFAC_IDChanging(value)
				Me.SendPropertyChanging
				Me._MENUFAC_ID = value
				Me.SendPropertyChanged("MENUFAC_ID")
				Me.OnMENUFAC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENUFAC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MENUFAC_NAME() As String
		Get
			Return Me._MENUFAC_NAME
		End Get
		Set
			If (String.Equals(Me._MENUFAC_NAME, value) = false) Then
				Me.OnMENUFAC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MENUFAC_NAME = value
				Me.SendPropertyChanged("MENUFAC_NAME")
				Me.OnMENUFAC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Int")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TABEAN_HERB_SIZE_PACK_FST")>  _
Partial Public Class TABEAN_HERB_SIZE_PACK_FST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA_DQ As System.Nullable(Of Integer)
	
	Private _PACK_F_ID As System.Nullable(Of Integer)
	
	Private _PACK_F_NAME As String
	
	Private _NO_1 As String
	
	Private _UNIT_F_ID As System.Nullable(Of Integer)
	
	Private _UNIT_F_NAME As String
	
	Private _PACK_S_ID As System.Nullable(Of Integer)
	
	Private _PACK_S_NAME As String
	
	Private _NO_2 As String
	
	Private _UNIT_S_ID As System.Nullable(Of Integer)
	
	Private _UNIT_S_NAME As String
	
	Private _PACK_T_ID As System.Nullable(Of Integer)
	
	Private _PACK_T_NAME As String
	
	Private _NO_3 As String
	
	Private _UNIT_T_ID As System.Nullable(Of Integer)
	
	Private _UNIT_T_NAME As String
	
	Private _ACTIVEFACT As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_USER As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_USER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_DQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDA_DQChanged()
    End Sub
    Partial Private Sub OnPACK_F_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPACK_F_IDChanged()
    End Sub
    Partial Private Sub OnPACK_F_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_F_NAMEChanged()
    End Sub
    Partial Private Sub OnNO_1Changing(value As String)
    End Sub
    Partial Private Sub OnNO_1Changed()
    End Sub
    Partial Private Sub OnUNIT_F_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUNIT_F_IDChanged()
    End Sub
    Partial Private Sub OnUNIT_F_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_F_NAMEChanged()
    End Sub
    Partial Private Sub OnPACK_S_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPACK_S_IDChanged()
    End Sub
    Partial Private Sub OnPACK_S_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_S_NAMEChanged()
    End Sub
    Partial Private Sub OnNO_2Changing(value As String)
    End Sub
    Partial Private Sub OnNO_2Changed()
    End Sub
    Partial Private Sub OnUNIT_S_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUNIT_S_IDChanged()
    End Sub
    Partial Private Sub OnUNIT_S_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_S_NAMEChanged()
    End Sub
    Partial Private Sub OnPACK_T_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPACK_T_IDChanged()
    End Sub
    Partial Private Sub OnPACK_T_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_T_NAMEChanged()
    End Sub
    Partial Private Sub OnNO_3Changing(value As String)
    End Sub
    Partial Private Sub OnNO_3Changed()
    End Sub
    Partial Private Sub OnUNIT_T_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUNIT_T_IDChanged()
    End Sub
    Partial Private Sub OnUNIT_T_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_T_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_USERChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_USERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_DQ", DbType:="Int")>  _
	Public Property FK_IDA_DQ() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA_DQ
		End Get
		Set
			If (Me._FK_IDA_DQ.Equals(value) = false) Then
				Me.OnFK_IDA_DQChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_DQ = value
				Me.SendPropertyChanged("FK_IDA_DQ")
				Me.OnFK_IDA_DQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_F_ID", DbType:="Int")>  _
	Public Property PACK_F_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PACK_F_ID
		End Get
		Set
			If (Me._PACK_F_ID.Equals(value) = false) Then
				Me.OnPACK_F_IDChanging(value)
				Me.SendPropertyChanging
				Me._PACK_F_ID = value
				Me.SendPropertyChanged("PACK_F_ID")
				Me.OnPACK_F_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_F_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_F_NAME() As String
		Get
			Return Me._PACK_F_NAME
		End Get
		Set
			If (String.Equals(Me._PACK_F_NAME, value) = false) Then
				Me.OnPACK_F_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_F_NAME = value
				Me.SendPropertyChanged("PACK_F_NAME")
				Me.OnPACK_F_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_1", DbType:="NVarChar(MAX)")>  _
	Public Property NO_1() As String
		Get
			Return Me._NO_1
		End Get
		Set
			If (String.Equals(Me._NO_1, value) = false) Then
				Me.OnNO_1Changing(value)
				Me.SendPropertyChanging
				Me._NO_1 = value
				Me.SendPropertyChanged("NO_1")
				Me.OnNO_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_F_ID", DbType:="Int")>  _
	Public Property UNIT_F_ID() As System.Nullable(Of Integer)
		Get
			Return Me._UNIT_F_ID
		End Get
		Set
			If (Me._UNIT_F_ID.Equals(value) = false) Then
				Me.OnUNIT_F_IDChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_F_ID = value
				Me.SendPropertyChanged("UNIT_F_ID")
				Me.OnUNIT_F_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_F_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_F_NAME() As String
		Get
			Return Me._UNIT_F_NAME
		End Get
		Set
			If (String.Equals(Me._UNIT_F_NAME, value) = false) Then
				Me.OnUNIT_F_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_F_NAME = value
				Me.SendPropertyChanged("UNIT_F_NAME")
				Me.OnUNIT_F_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_S_ID", DbType:="Int")>  _
	Public Property PACK_S_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PACK_S_ID
		End Get
		Set
			If (Me._PACK_S_ID.Equals(value) = false) Then
				Me.OnPACK_S_IDChanging(value)
				Me.SendPropertyChanging
				Me._PACK_S_ID = value
				Me.SendPropertyChanged("PACK_S_ID")
				Me.OnPACK_S_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_S_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_S_NAME() As String
		Get
			Return Me._PACK_S_NAME
		End Get
		Set
			If (String.Equals(Me._PACK_S_NAME, value) = false) Then
				Me.OnPACK_S_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_S_NAME = value
				Me.SendPropertyChanged("PACK_S_NAME")
				Me.OnPACK_S_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_2", DbType:="NVarChar(MAX)")>  _
	Public Property NO_2() As String
		Get
			Return Me._NO_2
		End Get
		Set
			If (String.Equals(Me._NO_2, value) = false) Then
				Me.OnNO_2Changing(value)
				Me.SendPropertyChanging
				Me._NO_2 = value
				Me.SendPropertyChanged("NO_2")
				Me.OnNO_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_S_ID", DbType:="Int")>  _
	Public Property UNIT_S_ID() As System.Nullable(Of Integer)
		Get
			Return Me._UNIT_S_ID
		End Get
		Set
			If (Me._UNIT_S_ID.Equals(value) = false) Then
				Me.OnUNIT_S_IDChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_S_ID = value
				Me.SendPropertyChanged("UNIT_S_ID")
				Me.OnUNIT_S_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_S_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_S_NAME() As String
		Get
			Return Me._UNIT_S_NAME
		End Get
		Set
			If (String.Equals(Me._UNIT_S_NAME, value) = false) Then
				Me.OnUNIT_S_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_S_NAME = value
				Me.SendPropertyChanged("UNIT_S_NAME")
				Me.OnUNIT_S_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_T_ID", DbType:="Int")>  _
	Public Property PACK_T_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PACK_T_ID
		End Get
		Set
			If (Me._PACK_T_ID.Equals(value) = false) Then
				Me.OnPACK_T_IDChanging(value)
				Me.SendPropertyChanging
				Me._PACK_T_ID = value
				Me.SendPropertyChanged("PACK_T_ID")
				Me.OnPACK_T_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_T_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_T_NAME() As String
		Get
			Return Me._PACK_T_NAME
		End Get
		Set
			If (String.Equals(Me._PACK_T_NAME, value) = false) Then
				Me.OnPACK_T_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_T_NAME = value
				Me.SendPropertyChanged("PACK_T_NAME")
				Me.OnPACK_T_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_3", DbType:="NVarChar(MAX)")>  _
	Public Property NO_3() As String
		Get
			Return Me._NO_3
		End Get
		Set
			If (String.Equals(Me._NO_3, value) = false) Then
				Me.OnNO_3Changing(value)
				Me.SendPropertyChanging
				Me._NO_3 = value
				Me.SendPropertyChanged("NO_3")
				Me.OnNO_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_T_ID", DbType:="Int")>  _
	Public Property UNIT_T_ID() As System.Nullable(Of Integer)
		Get
			Return Me._UNIT_T_ID
		End Get
		Set
			If (Me._UNIT_T_ID.Equals(value) = false) Then
				Me.OnUNIT_T_IDChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_T_ID = value
				Me.SendPropertyChanged("UNIT_T_ID")
				Me.OnUNIT_T_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_T_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_T_NAME() As String
		Get
			Return Me._UNIT_T_NAME
		End Get
		Set
			If (String.Equals(Me._UNIT_T_NAME, value) = false) Then
				Me.OnUNIT_T_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_T_NAME = value
				Me.SendPropertyChanged("UNIT_T_NAME")
				Me.OnUNIT_T_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Int")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_USER() As String
		Get
			Return Me._CREATE_USER
		End Get
		Set
			If (String.Equals(Me._CREATE_USER, value) = false) Then
				Me.OnCREATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_USER = value
				Me.SendPropertyChanged("CREATE_USER")
				Me.OnCREATE_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_USER", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_USER() As String
		Get
			Return Me._UPDATE_USER
		End Get
		Set
			If (String.Equals(Me._UPDATE_USER, value) = false) Then
				Me.OnUPDATE_USERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_USER = value
				Me.SendPropertyChanged("UPDATE_USER")
				Me.OnUPDATE_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_TBN")>  _
Partial Public Class GEN_NO_TBN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_ML")>  _
Partial Public Class MAS_TABEAN_HERB_ML
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ML_ID As System.Nullable(Of Integer)
	
	Private _ML_NAME As String
	
	Private _ML_PAY As System.Nullable(Of Decimal)
	
	Private _ML_TYPE As String
	
	Private _ML_NOTE As String
	
	Private _ML_DAY_APPOINTION As System.Nullable(Of Integer)
	
	Private _TYPE_OFF As System.Nullable(Of Integer)
	
	Private _ACTIVE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnML_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnML_IDChanged()
    End Sub
    Partial Private Sub OnML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnML_NAMEChanged()
    End Sub
    Partial Private Sub OnML_PAYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnML_PAYChanged()
    End Sub
    Partial Private Sub OnML_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnML_TYPEChanged()
    End Sub
    Partial Private Sub OnML_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnML_NOTEChanged()
    End Sub
    Partial Private Sub OnML_DAY_APPOINTIONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnML_DAY_APPOINTIONChanged()
    End Sub
    Partial Private Sub OnTYPE_OFFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_OFFChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_ID", DbType:="Int")>  _
	Public Property ML_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ML_ID
		End Get
		Set
			If (Me._ML_ID.Equals(value) = false) Then
				Me.OnML_IDChanging(value)
				Me.SendPropertyChanging
				Me._ML_ID = value
				Me.SendPropertyChanged("ML_ID")
				Me.OnML_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ML_NAME() As String
		Get
			Return Me._ML_NAME
		End Get
		Set
			If (String.Equals(Me._ML_NAME, value) = false) Then
				Me.OnML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ML_NAME = value
				Me.SendPropertyChanged("ML_NAME")
				Me.OnML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_PAY", DbType:="Decimal(18,2)")>  _
	Public Property ML_PAY() As System.Nullable(Of Decimal)
		Get
			Return Me._ML_PAY
		End Get
		Set
			If (Me._ML_PAY.Equals(value) = false) Then
				Me.OnML_PAYChanging(value)
				Me.SendPropertyChanging
				Me._ML_PAY = value
				Me.SendPropertyChanged("ML_PAY")
				Me.OnML_PAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property ML_TYPE() As String
		Get
			Return Me._ML_TYPE
		End Get
		Set
			If (String.Equals(Me._ML_TYPE, value) = false) Then
				Me.OnML_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._ML_TYPE = value
				Me.SendPropertyChanged("ML_TYPE")
				Me.OnML_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ML_NOTE() As String
		Get
			Return Me._ML_NOTE
		End Get
		Set
			If (String.Equals(Me._ML_NOTE, value) = false) Then
				Me.OnML_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ML_NOTE = value
				Me.SendPropertyChanged("ML_NOTE")
				Me.OnML_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_DAY_APPOINTION", DbType:="Int")>  _
	Public Property ML_DAY_APPOINTION() As System.Nullable(Of Integer)
		Get
			Return Me._ML_DAY_APPOINTION
		End Get
		Set
			If (Me._ML_DAY_APPOINTION.Equals(value) = false) Then
				Me.OnML_DAY_APPOINTIONChanging(value)
				Me.SendPropertyChanging
				Me._ML_DAY_APPOINTION = value
				Me.SendPropertyChanged("ML_DAY_APPOINTION")
				Me.OnML_DAY_APPOINTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_OFF", DbType:="Int")>  _
	Public Property TYPE_OFF() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_OFF
		End Get
		Set
			If (Me._TYPE_OFF.Equals(value) = false) Then
				Me.OnTYPE_OFFChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_OFF = value
				Me.SendPropertyChanged("TYPE_OFF")
				Me.OnTYPE_OFFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Bit")>  _
	Public Property ACTIVE() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TABEAN_HERB")>  _
Partial Public Class TABEAN_HERB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA_DQ As System.Nullable(Of Integer)
	
	Private _LCN_ID As System.Nullable(Of Integer)
	
	Private _LCNNO As String
	
	Private _LCN_ADDR As String
	
	Private _LCN_NAME As String
	
	Private _LCN_THANAMEPLACE As String
	
	Private _CUSTOMER_IDENTIFY As String
	
	Private _COMPANY_NAME As String
	
	Private _FOREIGN_NAME_ID As System.Nullable(Of Integer)
	
	Private _FOREIGN_NAME As String
	
	Private _FOREIGN_NAME_PLACE_ID As System.Nullable(Of Integer)
	
	Private _FOREIGN_NAME_PLACE As String
	
	Private _MAIN_PROCESS_ID As System.Nullable(Of Integer)
	
	Private _MAIN_PROCESS_NAME As String
	
	Private _TYPE_ID As System.Nullable(Of Integer)
	
	Private _TYPE_NAME As String
	
	Private _TYPE_SUB_ID As System.Nullable(Of Integer)
	
	Private _TYPE_SUB_NAME As String
	
	Private _CATEGORY_ID As System.Nullable(Of Integer)
	
	Private _CATEGORY_NAME As String
	
	Private _CATEGORY_OUT_ID As System.Nullable(Of Integer)
	
	Private _CATEGORY_OUT_NAME As String
	
	Private _NAME_PLACE_JJ As String
	
	Private _NAME_JJ As String
	
	Private _NAME_THAI As String
	
	Private _NAME_ENG As String
	
	Private _NAME_OTHER As String
	
	Private _STYPE_ID As System.Nullable(Of Integer)
	
	Private _STYPE_NAME As String
	
	Private _RECIPE_NAME As String
	
	Private _ACCOUNT_NO As System.Nullable(Of Integer)
	
	Private _ARTICLE_NO As System.Nullable(Of Integer)
	
	Private _PRODUCT_JJ As String
	
	Private _NATURE As String
	
	Private _MANUFAC_ID As System.Nullable(Of Integer)
	
	Private _MANUFAC_NAME As String
	
	Private _PRODUCT_PROCESS As String
	
	Private _WEIGHT_TABLE_CAP As String
	
	Private _WEIGHT_TABLE_CAP_UNIT_ID As System.Nullable(Of Integer)
	
	Private _WEIGHT_TABLE_CAP_UNIT_NAME As String
	
	Private _SIZE_PACK As String
	
	Private _SYNDROME_ID As System.Nullable(Of Integer)
	
	Private _SYNDROME_NAME As String
	
	Private _PROPERTIES As String
	
	Private _SIZE_USE As String
	
	Private _HOW_USE As String
	
	Private _EATTING_ID As System.Nullable(Of Integer)
	
	Private _EATTING_NAME As String
	
	Private _EATTING_NAME_DETAIL As String
	
	Private _EATING_CONDITION_ID As System.Nullable(Of Integer)
	
	Private _EATING_CONDITION_NAME As String
	
	Private _EATING_CONDITION_NAME_DETAIL As String
	
	Private _STORAGE_ID As System.Nullable(Of Integer)
	
	Private _STORAGE_NAME As String
	
	Private _TREATMENT As String
	
	Private _TREATMENT_AGE As System.Nullable(Of Integer)
	
	Private _TREATMENT_AGE_ID As System.Nullable(Of Integer)
	
	Private _TREATMENT_AGE_NAME As String
	
	Private _CONTRAINDICATION_ID As System.Nullable(Of Integer)
	
	Private _CONTRAINDICATION_NAME As String
	
	Private _WARNING_TYPE_ID As System.Nullable(Of Integer)
	
	Private _WARNING_TYPE_NAME As String
	
	Private _WARNING_ID As System.Nullable(Of Integer)
	
	Private _WARNING_NAME As String
	
	Private _WARNING_SUB_ID As System.Nullable(Of Integer)
	
	Private _WARNING_SUB_NAME As String
	
	Private _CAUTION_ID As System.Nullable(Of Integer)
	
	Private _CAUTION_NAME As String
	
	Private _ADV_REACTIVETION_ID As System.Nullable(Of Integer)
	
	Private _ADV_REACTIVETION_NAME As String
	
	Private _SALE_CHANNEL_ID As System.Nullable(Of Integer)
	
	Private _SALE_CHANNEL_NAME As String
	
	Private _NOTE As String
	
	Private _ACCEPT_FORMULA_ID As System.Nullable(Of Integer)
	
	Private _ACCEPT_FORMULA As String
	
	Private _ACCEPT_FORMULA_NOTE As String
	
	Private _RGTTPCD_GROUP_ID As System.Nullable(Of Integer)
	
	Private _RGTTPCD_GROUP As String
	
	Private _RGTTPCD_GROUP_ENG As String
	
	Private _DATE_REQ As System.Nullable(Of Date)
	
	Private _OFF_REQ_ID As System.Nullable(Of Integer)
	
	Private _OFF_REQ As String
	
	Private _DATE_OFFER As System.Nullable(Of Date)
	
	Private _NOTE_OFFER As String
	
	Private _OFF_OFFER_ID As System.Nullable(Of Integer)
	
	Private _OFF_OFFER As String
	
	Private _DATE_APP As System.Nullable(Of Date)
	
	Private _NOTE_APP As String
	
	Private _OFF_APP_ID As System.Nullable(Of Integer)
	
	Private _OFF_APP As String
	
	Private _NOTE_EDIT As String
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _CITIZEN_ID As String
	
	Private _MENU_GROUP As System.Nullable(Of Integer)
	
	Private _TR_ID_LCN As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _IDA_LCN As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _DATE_YEAR As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _NAME_CONFIRM As String
	
	Private _DATE_CONFIRM As System.Nullable(Of Date)
	
	Private _ML_ID As System.Nullable(Of Integer)
	
	Private _ML_NAME As String
	
	Private _ML_PAY As System.Nullable(Of Decimal)
	
	Private _ML_MINUS As System.Nullable(Of Integer)
	
	Private _ML_SUM As System.Nullable(Of Decimal)
	
	Private _ML_KEY_NAME As String
	
	Private _ML_KEY_DATE As System.Nullable(Of Date)
	
	Private _DATE_PAY1 As System.Nullable(Of Date)
	
	Private _DATE_PAY2 As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDA_DQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDA_DQChanged()
    End Sub
    Partial Private Sub OnLCN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnLCN_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_ADDRChanged()
    End Sub
    Partial Private Sub OnLCN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_NAMEChanged()
    End Sub
    Partial Private Sub OnLCN_THANAMEPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_THANAMEPLACEChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnCUSTOMER_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnFOREIGN_NAME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFOREIGN_NAME_IDChanged()
    End Sub
    Partial Private Sub OnFOREIGN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_NAMEChanged()
    End Sub
    Partial Private Sub OnFOREIGN_NAME_PLACE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFOREIGN_NAME_PLACE_IDChanged()
    End Sub
    Partial Private Sub OnFOREIGN_NAME_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_NAME_PLACEChanged()
    End Sub
    Partial Private Sub OnMAIN_PROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAIN_PROCESS_IDChanged()
    End Sub
    Partial Private Sub OnMAIN_PROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMAIN_PROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_SUB_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_SUB_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_SUB_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_SUB_NAMEChanged()
    End Sub
    Partial Private Sub OnCATEGORY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCATEGORY_IDChanged()
    End Sub
    Partial Private Sub OnCATEGORY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_NAMEChanged()
    End Sub
    Partial Private Sub OnCATEGORY_OUT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCATEGORY_OUT_IDChanged()
    End Sub
    Partial Private Sub OnCATEGORY_OUT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_OUT_NAMEChanged()
    End Sub
    Partial Private Sub OnNAME_PLACE_JJChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PLACE_JJChanged()
    End Sub
    Partial Private Sub OnNAME_JJChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_JJChanged()
    End Sub
    Partial Private Sub OnNAME_THAIChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_THAIChanged()
    End Sub
    Partial Private Sub OnNAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ENGChanged()
    End Sub
    Partial Private Sub OnNAME_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OTHERChanged()
    End Sub
    Partial Private Sub OnSTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTYPE_IDChanged()
    End Sub
    Partial Private Sub OnSTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnRECIPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRECIPE_NAMEChanged()
    End Sub
    Partial Private Sub OnACCOUNT_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACCOUNT_NOChanged()
    End Sub
    Partial Private Sub OnARTICLE_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnARTICLE_NOChanged()
    End Sub
    Partial Private Sub OnPRODUCT_JJChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_JJChanged()
    End Sub
    Partial Private Sub OnNATUREChanging(value As String)
    End Sub
    Partial Private Sub OnNATUREChanged()
    End Sub
    Partial Private Sub OnMANUFAC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMANUFAC_IDChanged()
    End Sub
    Partial Private Sub OnMANUFAC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFAC_NAMEChanged()
    End Sub
    Partial Private Sub OnPRODUCT_PROCESSChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_PROCESSChanged()
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAPChanging(value As String)
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAPChanged()
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_IDChanged()
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_NAMEChanged()
    End Sub
    Partial Private Sub OnSIZE_PACKChanging(value As String)
    End Sub
    Partial Private Sub OnSIZE_PACKChanged()
    End Sub
    Partial Private Sub OnSYNDROME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYNDROME_IDChanged()
    End Sub
    Partial Private Sub OnSYNDROME_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSYNDROME_NAMEChanged()
    End Sub
    Partial Private Sub OnPROPERTIESChanging(value As String)
    End Sub
    Partial Private Sub OnPROPERTIESChanged()
    End Sub
    Partial Private Sub OnSIZE_USEChanging(value As String)
    End Sub
    Partial Private Sub OnSIZE_USEChanged()
    End Sub
    Partial Private Sub OnHOW_USEChanging(value As String)
    End Sub
    Partial Private Sub OnHOW_USEChanged()
    End Sub
    Partial Private Sub OnEATTING_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEATTING_IDChanged()
    End Sub
    Partial Private Sub OnEATTING_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEATTING_NAMEChanged()
    End Sub
    Partial Private Sub OnEATTING_NAME_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnEATTING_NAME_DETAILChanged()
    End Sub
    Partial Private Sub OnEATING_CONDITION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEATING_CONDITION_IDChanged()
    End Sub
    Partial Private Sub OnEATING_CONDITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEATING_CONDITION_NAMEChanged()
    End Sub
    Partial Private Sub OnEATING_CONDITION_NAME_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnEATING_CONDITION_NAME_DETAILChanged()
    End Sub
    Partial Private Sub OnSTORAGE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTORAGE_IDChanged()
    End Sub
    Partial Private Sub OnSTORAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTORAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnTREATMENTChanging(value As String)
    End Sub
    Partial Private Sub OnTREATMENTChanged()
    End Sub
    Partial Private Sub OnTREATMENT_AGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTREATMENT_AGEChanged()
    End Sub
    Partial Private Sub OnTREATMENT_AGE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTREATMENT_AGE_IDChanged()
    End Sub
    Partial Private Sub OnTREATMENT_AGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTREATMENT_AGE_NAMEChanged()
    End Sub
    Partial Private Sub OnCONTRAINDICATION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCONTRAINDICATION_IDChanged()
    End Sub
    Partial Private Sub OnCONTRAINDICATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCONTRAINDICATION_NAMEChanged()
    End Sub
    Partial Private Sub OnWARNING_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWARNING_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnWARNING_TYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWARNING_TYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnWARNING_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWARNING_IDChanged()
    End Sub
    Partial Private Sub OnWARNING_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWARNING_NAMEChanged()
    End Sub
    Partial Private Sub OnWARNING_SUB_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWARNING_SUB_IDChanged()
    End Sub
    Partial Private Sub OnWARNING_SUB_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWARNING_SUB_NAMEChanged()
    End Sub
    Partial Private Sub OnCAUTION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAUTION_IDChanged()
    End Sub
    Partial Private Sub OnCAUTION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCAUTION_NAMEChanged()
    End Sub
    Partial Private Sub OnADV_REACTIVETION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnADV_REACTIVETION_IDChanged()
    End Sub
    Partial Private Sub OnADV_REACTIVETION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnADV_REACTIVETION_NAMEChanged()
    End Sub
    Partial Private Sub OnSALE_CHANNEL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSALE_CHANNEL_IDChanged()
    End Sub
    Partial Private Sub OnSALE_CHANNEL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSALE_CHANNEL_NAMEChanged()
    End Sub
    Partial Private Sub OnNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNOTEChanged()
    End Sub
    Partial Private Sub OnACCEPT_FORMULA_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACCEPT_FORMULA_IDChanged()
    End Sub
    Partial Private Sub OnACCEPT_FORMULAChanging(value As String)
    End Sub
    Partial Private Sub OnACCEPT_FORMULAChanged()
    End Sub
    Partial Private Sub OnACCEPT_FORMULA_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnACCEPT_FORMULA_NOTEChanged()
    End Sub
    Partial Private Sub OnRGTTPCD_GROUP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRGTTPCD_GROUP_IDChanged()
    End Sub
    Partial Private Sub OnRGTTPCD_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnRGTTPCD_GROUPChanged()
    End Sub
    Partial Private Sub OnRGTTPCD_GROUP_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnRGTTPCD_GROUP_ENGChanged()
    End Sub
    Partial Private Sub OnDATE_REQChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_REQChanged()
    End Sub
    Partial Private Sub OnOFF_REQ_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOFF_REQ_IDChanged()
    End Sub
    Partial Private Sub OnOFF_REQChanging(value As String)
    End Sub
    Partial Private Sub OnOFF_REQChanged()
    End Sub
    Partial Private Sub OnDATE_OFFERChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_OFFERChanged()
    End Sub
    Partial Private Sub OnNOTE_OFFERChanging(value As String)
    End Sub
    Partial Private Sub OnNOTE_OFFERChanged()
    End Sub
    Partial Private Sub OnOFF_OFFER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOFF_OFFER_IDChanged()
    End Sub
    Partial Private Sub OnOFF_OFFERChanging(value As String)
    End Sub
    Partial Private Sub OnOFF_OFFERChanged()
    End Sub
    Partial Private Sub OnDATE_APPChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_APPChanged()
    End Sub
    Partial Private Sub OnNOTE_APPChanging(value As String)
    End Sub
    Partial Private Sub OnNOTE_APPChanged()
    End Sub
    Partial Private Sub OnOFF_APP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOFF_APP_IDChanged()
    End Sub
    Partial Private Sub OnOFF_APPChanging(value As String)
    End Sub
    Partial Private Sub OnOFF_APPChanged()
    End Sub
    Partial Private Sub OnNOTE_EDITChanging(value As String)
    End Sub
    Partial Private Sub OnNOTE_EDITChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnMENU_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_GROUPChanged()
    End Sub
    Partial Private Sub OnTR_ID_LCNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_ID_LCNChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnIDA_LCNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_LCNChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnDATE_YEARChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_YEARChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnNAME_CONFIRMChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_CONFIRMChanged()
    End Sub
    Partial Private Sub OnDATE_CONFIRMChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CONFIRMChanged()
    End Sub
    Partial Private Sub OnML_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnML_IDChanged()
    End Sub
    Partial Private Sub OnML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnML_NAMEChanged()
    End Sub
    Partial Private Sub OnML_PAYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnML_PAYChanged()
    End Sub
    Partial Private Sub OnML_MINUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnML_MINUSChanged()
    End Sub
    Partial Private Sub OnML_SUMChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnML_SUMChanged()
    End Sub
    Partial Private Sub OnML_KEY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnML_KEY_NAMEChanged()
    End Sub
    Partial Private Sub OnML_KEY_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnML_KEY_DATEChanged()
    End Sub
    Partial Private Sub OnDATE_PAY1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PAY1Changed()
    End Sub
    Partial Private Sub OnDATE_PAY2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PAY2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA_DQ", DbType:="Int")>  _
	Public Property FK_IDA_DQ() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA_DQ
		End Get
		Set
			If (Me._FK_IDA_DQ.Equals(value) = false) Then
				Me.OnFK_IDA_DQChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA_DQ = value
				Me.SendPropertyChanged("FK_IDA_DQ")
				Me.OnFK_IDA_DQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_ID", DbType:="Int")>  _
	Public Property LCN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_ID
		End Get
		Set
			If (Me._LCN_ID.Equals(value) = false) Then
				Me.OnLCN_IDChanging(value)
				Me.SendPropertyChanging
				Me._LCN_ID = value
				Me.SendPropertyChanged("LCN_ID")
				Me.OnLCN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_ADDR() As String
		Get
			Return Me._LCN_ADDR
		End Get
		Set
			If (String.Equals(Me._LCN_ADDR, value) = false) Then
				Me.OnLCN_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._LCN_ADDR = value
				Me.SendPropertyChanged("LCN_ADDR")
				Me.OnLCN_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_NAME() As String
		Get
			Return Me._LCN_NAME
		End Get
		Set
			If (String.Equals(Me._LCN_NAME, value) = false) Then
				Me.OnLCN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LCN_NAME = value
				Me.SendPropertyChanged("LCN_NAME")
				Me.OnLCN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_THANAMEPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_THANAMEPLACE() As String
		Get
			Return Me._LCN_THANAMEPLACE
		End Get
		Set
			If (String.Equals(Me._LCN_THANAMEPLACE, value) = false) Then
				Me.OnLCN_THANAMEPLACEChanging(value)
				Me.SendPropertyChanging
				Me._LCN_THANAMEPLACE = value
				Me.SendPropertyChanged("LCN_THANAMEPLACE")
				Me.OnLCN_THANAMEPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property CUSTOMER_IDENTIFY() As String
		Get
			Return Me._CUSTOMER_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._CUSTOMER_IDENTIFY, value) = false) Then
				Me.OnCUSTOMER_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_IDENTIFY = value
				Me.SendPropertyChanged("CUSTOMER_IDENTIFY")
				Me.OnCUSTOMER_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_NAME_ID", DbType:="Int")>  _
	Public Property FOREIGN_NAME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FOREIGN_NAME_ID
		End Get
		Set
			If (Me._FOREIGN_NAME_ID.Equals(value) = false) Then
				Me.OnFOREIGN_NAME_IDChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_NAME_ID = value
				Me.SendPropertyChanged("FOREIGN_NAME_ID")
				Me.OnFOREIGN_NAME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_NAME() As String
		Get
			Return Me._FOREIGN_NAME
		End Get
		Set
			If (String.Equals(Me._FOREIGN_NAME, value) = false) Then
				Me.OnFOREIGN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_NAME = value
				Me.SendPropertyChanged("FOREIGN_NAME")
				Me.OnFOREIGN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_NAME_PLACE_ID", DbType:="Int")>  _
	Public Property FOREIGN_NAME_PLACE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FOREIGN_NAME_PLACE_ID
		End Get
		Set
			If (Me._FOREIGN_NAME_PLACE_ID.Equals(value) = false) Then
				Me.OnFOREIGN_NAME_PLACE_IDChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_NAME_PLACE_ID = value
				Me.SendPropertyChanged("FOREIGN_NAME_PLACE_ID")
				Me.OnFOREIGN_NAME_PLACE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_NAME_PLACE", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_NAME_PLACE() As String
		Get
			Return Me._FOREIGN_NAME_PLACE
		End Get
		Set
			If (String.Equals(Me._FOREIGN_NAME_PLACE, value) = false) Then
				Me.OnFOREIGN_NAME_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_NAME_PLACE = value
				Me.SendPropertyChanged("FOREIGN_NAME_PLACE")
				Me.OnFOREIGN_NAME_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_PROCESS_ID", DbType:="Int")>  _
	Public Property MAIN_PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MAIN_PROCESS_ID
		End Get
		Set
			If (Me._MAIN_PROCESS_ID.Equals(value) = false) Then
				Me.OnMAIN_PROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_PROCESS_ID = value
				Me.SendPropertyChanged("MAIN_PROCESS_ID")
				Me.OnMAIN_PROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MAIN_PROCESS_NAME() As String
		Get
			Return Me._MAIN_PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._MAIN_PROCESS_NAME, value) = false) Then
				Me.OnMAIN_PROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_PROCESS_NAME = value
				Me.SendPropertyChanged("MAIN_PROCESS_NAME")
				Me.OnMAIN_PROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_ID", DbType:="Int")>  _
	Public Property TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_ID
		End Get
		Set
			If (Me._TYPE_ID.Equals(value) = false) Then
				Me.OnTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_ID = value
				Me.SendPropertyChanged("TYPE_ID")
				Me.OnTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_NAME() As String
		Get
			Return Me._TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_NAME, value) = false) Then
				Me.OnTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_NAME = value
				Me.SendPropertyChanged("TYPE_NAME")
				Me.OnTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SUB_ID", DbType:="Int")>  _
	Public Property TYPE_SUB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_SUB_ID
		End Get
		Set
			If (Me._TYPE_SUB_ID.Equals(value) = false) Then
				Me.OnTYPE_SUB_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SUB_ID = value
				Me.SendPropertyChanged("TYPE_SUB_ID")
				Me.OnTYPE_SUB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SUB_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_SUB_NAME() As String
		Get
			Return Me._TYPE_SUB_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_SUB_NAME, value) = false) Then
				Me.OnTYPE_SUB_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SUB_NAME = value
				Me.SendPropertyChanged("TYPE_SUB_NAME")
				Me.OnTYPE_SUB_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_ID", DbType:="Int")>  _
	Public Property CATEGORY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CATEGORY_ID
		End Get
		Set
			If (Me._CATEGORY_ID.Equals(value) = false) Then
				Me.OnCATEGORY_IDChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_ID = value
				Me.SendPropertyChanged("CATEGORY_ID")
				Me.OnCATEGORY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY_NAME() As String
		Get
			Return Me._CATEGORY_NAME
		End Get
		Set
			If (String.Equals(Me._CATEGORY_NAME, value) = false) Then
				Me.OnCATEGORY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_NAME = value
				Me.SendPropertyChanged("CATEGORY_NAME")
				Me.OnCATEGORY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_OUT_ID", DbType:="Int")>  _
	Public Property CATEGORY_OUT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CATEGORY_OUT_ID
		End Get
		Set
			If (Me._CATEGORY_OUT_ID.Equals(value) = false) Then
				Me.OnCATEGORY_OUT_IDChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_OUT_ID = value
				Me.SendPropertyChanged("CATEGORY_OUT_ID")
				Me.OnCATEGORY_OUT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_OUT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY_OUT_NAME() As String
		Get
			Return Me._CATEGORY_OUT_NAME
		End Get
		Set
			If (String.Equals(Me._CATEGORY_OUT_NAME, value) = false) Then
				Me.OnCATEGORY_OUT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_OUT_NAME = value
				Me.SendPropertyChanged("CATEGORY_OUT_NAME")
				Me.OnCATEGORY_OUT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PLACE_JJ", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PLACE_JJ() As String
		Get
			Return Me._NAME_PLACE_JJ
		End Get
		Set
			If (String.Equals(Me._NAME_PLACE_JJ, value) = false) Then
				Me.OnNAME_PLACE_JJChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PLACE_JJ = value
				Me.SendPropertyChanged("NAME_PLACE_JJ")
				Me.OnNAME_PLACE_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_JJ", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_JJ() As String
		Get
			Return Me._NAME_JJ
		End Get
		Set
			If (String.Equals(Me._NAME_JJ, value) = false) Then
				Me.OnNAME_JJChanging(value)
				Me.SendPropertyChanging
				Me._NAME_JJ = value
				Me.SendPropertyChanged("NAME_JJ")
				Me.OnNAME_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_THAI", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_THAI() As String
		Get
			Return Me._NAME_THAI
		End Get
		Set
			If (String.Equals(Me._NAME_THAI, value) = false) Then
				Me.OnNAME_THAIChanging(value)
				Me.SendPropertyChanging
				Me._NAME_THAI = value
				Me.SendPropertyChanged("NAME_THAI")
				Me.OnNAME_THAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ENG() As String
		Get
			Return Me._NAME_ENG
		End Get
		Set
			If (String.Equals(Me._NAME_ENG, value) = false) Then
				Me.OnNAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ENG = value
				Me.SendPropertyChanged("NAME_ENG")
				Me.OnNAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OTHER() As String
		Get
			Return Me._NAME_OTHER
		End Get
		Set
			If (String.Equals(Me._NAME_OTHER, value) = false) Then
				Me.OnNAME_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OTHER = value
				Me.SendPropertyChanged("NAME_OTHER")
				Me.OnNAME_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYPE_ID", DbType:="Int")>  _
	Public Property STYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STYPE_ID
		End Get
		Set
			If (Me._STYPE_ID.Equals(value) = false) Then
				Me.OnSTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._STYPE_ID = value
				Me.SendPropertyChanged("STYPE_ID")
				Me.OnSTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STYPE_NAME() As String
		Get
			Return Me._STYPE_NAME
		End Get
		Set
			If (String.Equals(Me._STYPE_NAME, value) = false) Then
				Me.OnSTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STYPE_NAME = value
				Me.SendPropertyChanged("STYPE_NAME")
				Me.OnSTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECIPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property RECIPE_NAME() As String
		Get
			Return Me._RECIPE_NAME
		End Get
		Set
			If (String.Equals(Me._RECIPE_NAME, value) = false) Then
				Me.OnRECIPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._RECIPE_NAME = value
				Me.SendPropertyChanged("RECIPE_NAME")
				Me.OnRECIPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_NO", DbType:="Int")>  _
	Public Property ACCOUNT_NO() As System.Nullable(Of Integer)
		Get
			Return Me._ACCOUNT_NO
		End Get
		Set
			If (Me._ACCOUNT_NO.Equals(value) = false) Then
				Me.OnACCOUNT_NOChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_NO = value
				Me.SendPropertyChanged("ACCOUNT_NO")
				Me.OnACCOUNT_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARTICLE_NO", DbType:="Int")>  _
	Public Property ARTICLE_NO() As System.Nullable(Of Integer)
		Get
			Return Me._ARTICLE_NO
		End Get
		Set
			If (Me._ARTICLE_NO.Equals(value) = false) Then
				Me.OnARTICLE_NOChanging(value)
				Me.SendPropertyChanging
				Me._ARTICLE_NO = value
				Me.SendPropertyChanged("ARTICLE_NO")
				Me.OnARTICLE_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_JJ", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_JJ() As String
		Get
			Return Me._PRODUCT_JJ
		End Get
		Set
			If (String.Equals(Me._PRODUCT_JJ, value) = false) Then
				Me.OnPRODUCT_JJChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_JJ = value
				Me.SendPropertyChanged("PRODUCT_JJ")
				Me.OnPRODUCT_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATURE", DbType:="NVarChar(MAX)")>  _
	Public Property NATURE() As String
		Get
			Return Me._NATURE
		End Get
		Set
			If (String.Equals(Me._NATURE, value) = false) Then
				Me.OnNATUREChanging(value)
				Me.SendPropertyChanging
				Me._NATURE = value
				Me.SendPropertyChanged("NATURE")
				Me.OnNATUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFAC_ID", DbType:="Int")>  _
	Public Property MANUFAC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MANUFAC_ID
		End Get
		Set
			If (Me._MANUFAC_ID.Equals(value) = false) Then
				Me.OnMANUFAC_IDChanging(value)
				Me.SendPropertyChanging
				Me._MANUFAC_ID = value
				Me.SendPropertyChanged("MANUFAC_ID")
				Me.OnMANUFAC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFAC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFAC_NAME() As String
		Get
			Return Me._MANUFAC_NAME
		End Get
		Set
			If (String.Equals(Me._MANUFAC_NAME, value) = false) Then
				Me.OnMANUFAC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MANUFAC_NAME = value
				Me.SendPropertyChanged("MANUFAC_NAME")
				Me.OnMANUFAC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_PROCESS", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_PROCESS() As String
		Get
			Return Me._PRODUCT_PROCESS
		End Get
		Set
			If (String.Equals(Me._PRODUCT_PROCESS, value) = false) Then
				Me.OnPRODUCT_PROCESSChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_PROCESS = value
				Me.SendPropertyChanged("PRODUCT_PROCESS")
				Me.OnPRODUCT_PROCESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_TABLE_CAP", DbType:="NVarChar(MAX)")>  _
	Public Property WEIGHT_TABLE_CAP() As String
		Get
			Return Me._WEIGHT_TABLE_CAP
		End Get
		Set
			If (String.Equals(Me._WEIGHT_TABLE_CAP, value) = false) Then
				Me.OnWEIGHT_TABLE_CAPChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_TABLE_CAP = value
				Me.SendPropertyChanged("WEIGHT_TABLE_CAP")
				Me.OnWEIGHT_TABLE_CAPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_TABLE_CAP_UNIT_ID", DbType:="Int")>  _
	Public Property WEIGHT_TABLE_CAP_UNIT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WEIGHT_TABLE_CAP_UNIT_ID
		End Get
		Set
			If (Me._WEIGHT_TABLE_CAP_UNIT_ID.Equals(value) = false) Then
				Me.OnWEIGHT_TABLE_CAP_UNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_TABLE_CAP_UNIT_ID = value
				Me.SendPropertyChanged("WEIGHT_TABLE_CAP_UNIT_ID")
				Me.OnWEIGHT_TABLE_CAP_UNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_TABLE_CAP_UNIT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WEIGHT_TABLE_CAP_UNIT_NAME() As String
		Get
			Return Me._WEIGHT_TABLE_CAP_UNIT_NAME
		End Get
		Set
			If (String.Equals(Me._WEIGHT_TABLE_CAP_UNIT_NAME, value) = false) Then
				Me.OnWEIGHT_TABLE_CAP_UNIT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_TABLE_CAP_UNIT_NAME = value
				Me.SendPropertyChanged("WEIGHT_TABLE_CAP_UNIT_NAME")
				Me.OnWEIGHT_TABLE_CAP_UNIT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_PACK", DbType:="NVarChar(MAX)")>  _
	Public Property SIZE_PACK() As String
		Get
			Return Me._SIZE_PACK
		End Get
		Set
			If (String.Equals(Me._SIZE_PACK, value) = false) Then
				Me.OnSIZE_PACKChanging(value)
				Me.SendPropertyChanging
				Me._SIZE_PACK = value
				Me.SendPropertyChanged("SIZE_PACK")
				Me.OnSIZE_PACKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYNDROME_ID", DbType:="Int")>  _
	Public Property SYNDROME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYNDROME_ID
		End Get
		Set
			If (Me._SYNDROME_ID.Equals(value) = false) Then
				Me.OnSYNDROME_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYNDROME_ID = value
				Me.SendPropertyChanged("SYNDROME_ID")
				Me.OnSYNDROME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYNDROME_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SYNDROME_NAME() As String
		Get
			Return Me._SYNDROME_NAME
		End Get
		Set
			If (String.Equals(Me._SYNDROME_NAME, value) = false) Then
				Me.OnSYNDROME_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SYNDROME_NAME = value
				Me.SendPropertyChanged("SYNDROME_NAME")
				Me.OnSYNDROME_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROPERTIES", DbType:="NVarChar(MAX)")>  _
	Public Property PROPERTIES() As String
		Get
			Return Me._PROPERTIES
		End Get
		Set
			If (String.Equals(Me._PROPERTIES, value) = false) Then
				Me.OnPROPERTIESChanging(value)
				Me.SendPropertyChanging
				Me._PROPERTIES = value
				Me.SendPropertyChanged("PROPERTIES")
				Me.OnPROPERTIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_USE", DbType:="NVarChar(MAX)")>  _
	Public Property SIZE_USE() As String
		Get
			Return Me._SIZE_USE
		End Get
		Set
			If (String.Equals(Me._SIZE_USE, value) = false) Then
				Me.OnSIZE_USEChanging(value)
				Me.SendPropertyChanging
				Me._SIZE_USE = value
				Me.SendPropertyChanged("SIZE_USE")
				Me.OnSIZE_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOW_USE", DbType:="NVarChar(MAX)")>  _
	Public Property HOW_USE() As String
		Get
			Return Me._HOW_USE
		End Get
		Set
			If (String.Equals(Me._HOW_USE, value) = false) Then
				Me.OnHOW_USEChanging(value)
				Me.SendPropertyChanging
				Me._HOW_USE = value
				Me.SendPropertyChanged("HOW_USE")
				Me.OnHOW_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATTING_ID", DbType:="Int")>  _
	Public Property EATTING_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EATTING_ID
		End Get
		Set
			If (Me._EATTING_ID.Equals(value) = false) Then
				Me.OnEATTING_IDChanging(value)
				Me.SendPropertyChanging
				Me._EATTING_ID = value
				Me.SendPropertyChanged("EATTING_ID")
				Me.OnEATTING_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATTING_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property EATTING_NAME() As String
		Get
			Return Me._EATTING_NAME
		End Get
		Set
			If (String.Equals(Me._EATTING_NAME, value) = false) Then
				Me.OnEATTING_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._EATTING_NAME = value
				Me.SendPropertyChanged("EATTING_NAME")
				Me.OnEATTING_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATTING_NAME_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EATTING_NAME_DETAIL() As String
		Get
			Return Me._EATTING_NAME_DETAIL
		End Get
		Set
			If (String.Equals(Me._EATTING_NAME_DETAIL, value) = false) Then
				Me.OnEATTING_NAME_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._EATTING_NAME_DETAIL = value
				Me.SendPropertyChanged("EATTING_NAME_DETAIL")
				Me.OnEATTING_NAME_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATING_CONDITION_ID", DbType:="Int")>  _
	Public Property EATING_CONDITION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EATING_CONDITION_ID
		End Get
		Set
			If (Me._EATING_CONDITION_ID.Equals(value) = false) Then
				Me.OnEATING_CONDITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._EATING_CONDITION_ID = value
				Me.SendPropertyChanged("EATING_CONDITION_ID")
				Me.OnEATING_CONDITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATING_CONDITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property EATING_CONDITION_NAME() As String
		Get
			Return Me._EATING_CONDITION_NAME
		End Get
		Set
			If (String.Equals(Me._EATING_CONDITION_NAME, value) = false) Then
				Me.OnEATING_CONDITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._EATING_CONDITION_NAME = value
				Me.SendPropertyChanged("EATING_CONDITION_NAME")
				Me.OnEATING_CONDITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATING_CONDITION_NAME_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EATING_CONDITION_NAME_DETAIL() As String
		Get
			Return Me._EATING_CONDITION_NAME_DETAIL
		End Get
		Set
			If (String.Equals(Me._EATING_CONDITION_NAME_DETAIL, value) = false) Then
				Me.OnEATING_CONDITION_NAME_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._EATING_CONDITION_NAME_DETAIL = value
				Me.SendPropertyChanged("EATING_CONDITION_NAME_DETAIL")
				Me.OnEATING_CONDITION_NAME_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORAGE_ID", DbType:="Int")>  _
	Public Property STORAGE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STORAGE_ID
		End Get
		Set
			If (Me._STORAGE_ID.Equals(value) = false) Then
				Me.OnSTORAGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._STORAGE_ID = value
				Me.SendPropertyChanged("STORAGE_ID")
				Me.OnSTORAGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STORAGE_NAME() As String
		Get
			Return Me._STORAGE_NAME
		End Get
		Set
			If (String.Equals(Me._STORAGE_NAME, value) = false) Then
				Me.OnSTORAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STORAGE_NAME = value
				Me.SendPropertyChanged("STORAGE_NAME")
				Me.OnSTORAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT", DbType:="NVarChar(MAX)")>  _
	Public Property TREATMENT() As String
		Get
			Return Me._TREATMENT
		End Get
		Set
			If (String.Equals(Me._TREATMENT, value) = false) Then
				Me.OnTREATMENTChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT = value
				Me.SendPropertyChanged("TREATMENT")
				Me.OnTREATMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT_AGE", DbType:="Int")>  _
	Public Property TREATMENT_AGE() As System.Nullable(Of Integer)
		Get
			Return Me._TREATMENT_AGE
		End Get
		Set
			If (Me._TREATMENT_AGE.Equals(value) = false) Then
				Me.OnTREATMENT_AGEChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT_AGE = value
				Me.SendPropertyChanged("TREATMENT_AGE")
				Me.OnTREATMENT_AGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT_AGE_ID", DbType:="Int")>  _
	Public Property TREATMENT_AGE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TREATMENT_AGE_ID
		End Get
		Set
			If (Me._TREATMENT_AGE_ID.Equals(value) = false) Then
				Me.OnTREATMENT_AGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT_AGE_ID = value
				Me.SendPropertyChanged("TREATMENT_AGE_ID")
				Me.OnTREATMENT_AGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT_AGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TREATMENT_AGE_NAME() As String
		Get
			Return Me._TREATMENT_AGE_NAME
		End Get
		Set
			If (String.Equals(Me._TREATMENT_AGE_NAME, value) = false) Then
				Me.OnTREATMENT_AGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT_AGE_NAME = value
				Me.SendPropertyChanged("TREATMENT_AGE_NAME")
				Me.OnTREATMENT_AGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINDICATION_ID", DbType:="Int")>  _
	Public Property CONTRAINDICATION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CONTRAINDICATION_ID
		End Get
		Set
			If (Me._CONTRAINDICATION_ID.Equals(value) = false) Then
				Me.OnCONTRAINDICATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINDICATION_ID = value
				Me.SendPropertyChanged("CONTRAINDICATION_ID")
				Me.OnCONTRAINDICATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINDICATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CONTRAINDICATION_NAME() As String
		Get
			Return Me._CONTRAINDICATION_NAME
		End Get
		Set
			If (String.Equals(Me._CONTRAINDICATION_NAME, value) = false) Then
				Me.OnCONTRAINDICATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINDICATION_NAME = value
				Me.SendPropertyChanged("CONTRAINDICATION_NAME")
				Me.OnCONTRAINDICATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_TYPE_ID", DbType:="Int")>  _
	Public Property WARNING_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WARNING_TYPE_ID
		End Get
		Set
			If (Me._WARNING_TYPE_ID.Equals(value) = false) Then
				Me.OnWARNING_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_TYPE_ID = value
				Me.SendPropertyChanged("WARNING_TYPE_ID")
				Me.OnWARNING_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WARNING_TYPE_NAME() As String
		Get
			Return Me._WARNING_TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._WARNING_TYPE_NAME, value) = false) Then
				Me.OnWARNING_TYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_TYPE_NAME = value
				Me.SendPropertyChanged("WARNING_TYPE_NAME")
				Me.OnWARNING_TYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_ID", DbType:="Int")>  _
	Public Property WARNING_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WARNING_ID
		End Get
		Set
			If (Me._WARNING_ID.Equals(value) = false) Then
				Me.OnWARNING_IDChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_ID = value
				Me.SendPropertyChanged("WARNING_ID")
				Me.OnWARNING_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WARNING_NAME() As String
		Get
			Return Me._WARNING_NAME
		End Get
		Set
			If (String.Equals(Me._WARNING_NAME, value) = false) Then
				Me.OnWARNING_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_NAME = value
				Me.SendPropertyChanged("WARNING_NAME")
				Me.OnWARNING_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_SUB_ID", DbType:="Int")>  _
	Public Property WARNING_SUB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WARNING_SUB_ID
		End Get
		Set
			If (Me._WARNING_SUB_ID.Equals(value) = false) Then
				Me.OnWARNING_SUB_IDChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_SUB_ID = value
				Me.SendPropertyChanged("WARNING_SUB_ID")
				Me.OnWARNING_SUB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_SUB_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WARNING_SUB_NAME() As String
		Get
			Return Me._WARNING_SUB_NAME
		End Get
		Set
			If (String.Equals(Me._WARNING_SUB_NAME, value) = false) Then
				Me.OnWARNING_SUB_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_SUB_NAME = value
				Me.SendPropertyChanged("WARNING_SUB_NAME")
				Me.OnWARNING_SUB_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUTION_ID", DbType:="Int")>  _
	Public Property CAUTION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CAUTION_ID
		End Get
		Set
			If (Me._CAUTION_ID.Equals(value) = false) Then
				Me.OnCAUTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._CAUTION_ID = value
				Me.SendPropertyChanged("CAUTION_ID")
				Me.OnCAUTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUTION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CAUTION_NAME() As String
		Get
			Return Me._CAUTION_NAME
		End Get
		Set
			If (String.Equals(Me._CAUTION_NAME, value) = false) Then
				Me.OnCAUTION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CAUTION_NAME = value
				Me.SendPropertyChanged("CAUTION_NAME")
				Me.OnCAUTION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADV_REACTIVETION_ID", DbType:="Int")>  _
	Public Property ADV_REACTIVETION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ADV_REACTIVETION_ID
		End Get
		Set
			If (Me._ADV_REACTIVETION_ID.Equals(value) = false) Then
				Me.OnADV_REACTIVETION_IDChanging(value)
				Me.SendPropertyChanging
				Me._ADV_REACTIVETION_ID = value
				Me.SendPropertyChanged("ADV_REACTIVETION_ID")
				Me.OnADV_REACTIVETION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADV_REACTIVETION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ADV_REACTIVETION_NAME() As String
		Get
			Return Me._ADV_REACTIVETION_NAME
		End Get
		Set
			If (String.Equals(Me._ADV_REACTIVETION_NAME, value) = false) Then
				Me.OnADV_REACTIVETION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ADV_REACTIVETION_NAME = value
				Me.SendPropertyChanged("ADV_REACTIVETION_NAME")
				Me.OnADV_REACTIVETION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_CHANNEL_ID", DbType:="Int")>  _
	Public Property SALE_CHANNEL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SALE_CHANNEL_ID
		End Get
		Set
			If (Me._SALE_CHANNEL_ID.Equals(value) = false) Then
				Me.OnSALE_CHANNEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._SALE_CHANNEL_ID = value
				Me.SendPropertyChanged("SALE_CHANNEL_ID")
				Me.OnSALE_CHANNEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_CHANNEL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_CHANNEL_NAME() As String
		Get
			Return Me._SALE_CHANNEL_NAME
		End Get
		Set
			If (String.Equals(Me._SALE_CHANNEL_NAME, value) = false) Then
				Me.OnSALE_CHANNEL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_CHANNEL_NAME = value
				Me.SendPropertyChanged("SALE_CHANNEL_NAME")
				Me.OnSALE_CHANNEL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property NOTE() As String
		Get
			Return Me._NOTE
		End Get
		Set
			If (String.Equals(Me._NOTE, value) = false) Then
				Me.OnNOTEChanging(value)
				Me.SendPropertyChanging
				Me._NOTE = value
				Me.SendPropertyChanged("NOTE")
				Me.OnNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCEPT_FORMULA_ID", DbType:="Int")>  _
	Public Property ACCEPT_FORMULA_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ACCEPT_FORMULA_ID
		End Get
		Set
			If (Me._ACCEPT_FORMULA_ID.Equals(value) = false) Then
				Me.OnACCEPT_FORMULA_IDChanging(value)
				Me.SendPropertyChanging
				Me._ACCEPT_FORMULA_ID = value
				Me.SendPropertyChanged("ACCEPT_FORMULA_ID")
				Me.OnACCEPT_FORMULA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCEPT_FORMULA", DbType:="NVarChar(MAX)")>  _
	Public Property ACCEPT_FORMULA() As String
		Get
			Return Me._ACCEPT_FORMULA
		End Get
		Set
			If (String.Equals(Me._ACCEPT_FORMULA, value) = false) Then
				Me.OnACCEPT_FORMULAChanging(value)
				Me.SendPropertyChanging
				Me._ACCEPT_FORMULA = value
				Me.SendPropertyChanged("ACCEPT_FORMULA")
				Me.OnACCEPT_FORMULAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCEPT_FORMULA_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ACCEPT_FORMULA_NOTE() As String
		Get
			Return Me._ACCEPT_FORMULA_NOTE
		End Get
		Set
			If (String.Equals(Me._ACCEPT_FORMULA_NOTE, value) = false) Then
				Me.OnACCEPT_FORMULA_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ACCEPT_FORMULA_NOTE = value
				Me.SendPropertyChanged("ACCEPT_FORMULA_NOTE")
				Me.OnACCEPT_FORMULA_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD_GROUP_ID", DbType:="Int")>  _
	Public Property RGTTPCD_GROUP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._RGTTPCD_GROUP_ID
		End Get
		Set
			If (Me._RGTTPCD_GROUP_ID.Equals(value) = false) Then
				Me.OnRGTTPCD_GROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD_GROUP_ID = value
				Me.SendPropertyChanged("RGTTPCD_GROUP_ID")
				Me.OnRGTTPCD_GROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD_GROUP", DbType:="NVarChar(MAX)")>  _
	Public Property RGTTPCD_GROUP() As String
		Get
			Return Me._RGTTPCD_GROUP
		End Get
		Set
			If (String.Equals(Me._RGTTPCD_GROUP, value) = false) Then
				Me.OnRGTTPCD_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD_GROUP = value
				Me.SendPropertyChanged("RGTTPCD_GROUP")
				Me.OnRGTTPCD_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD_GROUP_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property RGTTPCD_GROUP_ENG() As String
		Get
			Return Me._RGTTPCD_GROUP_ENG
		End Get
		Set
			If (String.Equals(Me._RGTTPCD_GROUP_ENG, value) = false) Then
				Me.OnRGTTPCD_GROUP_ENGChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD_GROUP_ENG = value
				Me.SendPropertyChanged("RGTTPCD_GROUP_ENG")
				Me.OnRGTTPCD_GROUP_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_REQ", DbType:="DateTime")>  _
	Public Property DATE_REQ() As System.Nullable(Of Date)
		Get
			Return Me._DATE_REQ
		End Get
		Set
			If (Me._DATE_REQ.Equals(value) = false) Then
				Me.OnDATE_REQChanging(value)
				Me.SendPropertyChanging
				Me._DATE_REQ = value
				Me.SendPropertyChanged("DATE_REQ")
				Me.OnDATE_REQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_REQ_ID", DbType:="Int")>  _
	Public Property OFF_REQ_ID() As System.Nullable(Of Integer)
		Get
			Return Me._OFF_REQ_ID
		End Get
		Set
			If (Me._OFF_REQ_ID.Equals(value) = false) Then
				Me.OnOFF_REQ_IDChanging(value)
				Me.SendPropertyChanging
				Me._OFF_REQ_ID = value
				Me.SendPropertyChanged("OFF_REQ_ID")
				Me.OnOFF_REQ_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_REQ", DbType:="NVarChar(MAX)")>  _
	Public Property OFF_REQ() As String
		Get
			Return Me._OFF_REQ
		End Get
		Set
			If (String.Equals(Me._OFF_REQ, value) = false) Then
				Me.OnOFF_REQChanging(value)
				Me.SendPropertyChanging
				Me._OFF_REQ = value
				Me.SendPropertyChanged("OFF_REQ")
				Me.OnOFF_REQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_OFFER", DbType:="DateTime")>  _
	Public Property DATE_OFFER() As System.Nullable(Of Date)
		Get
			Return Me._DATE_OFFER
		End Get
		Set
			If (Me._DATE_OFFER.Equals(value) = false) Then
				Me.OnDATE_OFFERChanging(value)
				Me.SendPropertyChanging
				Me._DATE_OFFER = value
				Me.SendPropertyChanged("DATE_OFFER")
				Me.OnDATE_OFFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE_OFFER", DbType:="NVarChar(MAX)")>  _
	Public Property NOTE_OFFER() As String
		Get
			Return Me._NOTE_OFFER
		End Get
		Set
			If (String.Equals(Me._NOTE_OFFER, value) = false) Then
				Me.OnNOTE_OFFERChanging(value)
				Me.SendPropertyChanging
				Me._NOTE_OFFER = value
				Me.SendPropertyChanged("NOTE_OFFER")
				Me.OnNOTE_OFFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_OFFER_ID", DbType:="Int")>  _
	Public Property OFF_OFFER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._OFF_OFFER_ID
		End Get
		Set
			If (Me._OFF_OFFER_ID.Equals(value) = false) Then
				Me.OnOFF_OFFER_IDChanging(value)
				Me.SendPropertyChanging
				Me._OFF_OFFER_ID = value
				Me.SendPropertyChanged("OFF_OFFER_ID")
				Me.OnOFF_OFFER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_OFFER", DbType:="NVarChar(MAX)")>  _
	Public Property OFF_OFFER() As String
		Get
			Return Me._OFF_OFFER
		End Get
		Set
			If (String.Equals(Me._OFF_OFFER, value) = false) Then
				Me.OnOFF_OFFERChanging(value)
				Me.SendPropertyChanging
				Me._OFF_OFFER = value
				Me.SendPropertyChanged("OFF_OFFER")
				Me.OnOFF_OFFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_APP", DbType:="DateTime")>  _
	Public Property DATE_APP() As System.Nullable(Of Date)
		Get
			Return Me._DATE_APP
		End Get
		Set
			If (Me._DATE_APP.Equals(value) = false) Then
				Me.OnDATE_APPChanging(value)
				Me.SendPropertyChanging
				Me._DATE_APP = value
				Me.SendPropertyChanged("DATE_APP")
				Me.OnDATE_APPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE_APP", DbType:="NVarChar(MAX)")>  _
	Public Property NOTE_APP() As String
		Get
			Return Me._NOTE_APP
		End Get
		Set
			If (String.Equals(Me._NOTE_APP, value) = false) Then
				Me.OnNOTE_APPChanging(value)
				Me.SendPropertyChanging
				Me._NOTE_APP = value
				Me.SendPropertyChanged("NOTE_APP")
				Me.OnNOTE_APPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_APP_ID", DbType:="Int")>  _
	Public Property OFF_APP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._OFF_APP_ID
		End Get
		Set
			If (Me._OFF_APP_ID.Equals(value) = false) Then
				Me.OnOFF_APP_IDChanging(value)
				Me.SendPropertyChanging
				Me._OFF_APP_ID = value
				Me.SendPropertyChanged("OFF_APP_ID")
				Me.OnOFF_APP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_APP", DbType:="NVarChar(MAX)")>  _
	Public Property OFF_APP() As String
		Get
			Return Me._OFF_APP
		End Get
		Set
			If (String.Equals(Me._OFF_APP, value) = false) Then
				Me.OnOFF_APPChanging(value)
				Me.SendPropertyChanging
				Me._OFF_APP = value
				Me.SendPropertyChanged("OFF_APP")
				Me.OnOFF_APPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE_EDIT", DbType:="NVarChar(MAX)")>  _
	Public Property NOTE_EDIT() As String
		Get
			Return Me._NOTE_EDIT
		End Get
		Set
			If (String.Equals(Me._NOTE_EDIT, value) = false) Then
				Me.OnNOTE_EDITChanging(value)
				Me.SendPropertyChanging
				Me._NOTE_EDIT = value
				Me.SendPropertyChanged("NOTE_EDIT")
				Me.OnNOTE_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(13)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(13)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_GROUP", DbType:="Int")>  _
	Public Property MENU_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_GROUP
		End Get
		Set
			If (Me._MENU_GROUP.Equals(value) = false) Then
				Me.OnMENU_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._MENU_GROUP = value
				Me.SendPropertyChanged("MENU_GROUP")
				Me.OnMENU_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID_LCN", DbType:="Int")>  _
	Public Property TR_ID_LCN() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID_LCN
		End Get
		Set
			If (Me._TR_ID_LCN.Equals(value) = false) Then
				Me.OnTR_ID_LCNChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID_LCN = value
				Me.SendPropertyChanged("TR_ID_LCN")
				Me.OnTR_ID_LCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_LCN", DbType:="Int")>  _
	Public Property IDA_LCN() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_LCN
		End Get
		Set
			If (Me._IDA_LCN.Equals(value) = false) Then
				Me.OnIDA_LCNChanging(value)
				Me.SendPropertyChanging
				Me._IDA_LCN = value
				Me.SendPropertyChanged("IDA_LCN")
				Me.OnIDA_LCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_YEAR", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_YEAR() As String
		Get
			Return Me._DATE_YEAR
		End Get
		Set
			If (String.Equals(Me._DATE_YEAR, value) = false) Then
				Me.OnDATE_YEARChanging(value)
				Me.SendPropertyChanging
				Me._DATE_YEAR = value
				Me.SendPropertyChanged("DATE_YEAR")
				Me.OnDATE_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_CONFIRM", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_CONFIRM() As String
		Get
			Return Me._NAME_CONFIRM
		End Get
		Set
			If (String.Equals(Me._NAME_CONFIRM, value) = false) Then
				Me.OnNAME_CONFIRMChanging(value)
				Me.SendPropertyChanging
				Me._NAME_CONFIRM = value
				Me.SendPropertyChanged("NAME_CONFIRM")
				Me.OnNAME_CONFIRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CONFIRM", DbType:="DateTime")>  _
	Public Property DATE_CONFIRM() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CONFIRM
		End Get
		Set
			If (Me._DATE_CONFIRM.Equals(value) = false) Then
				Me.OnDATE_CONFIRMChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CONFIRM = value
				Me.SendPropertyChanged("DATE_CONFIRM")
				Me.OnDATE_CONFIRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_ID", DbType:="Int")>  _
	Public Property ML_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ML_ID
		End Get
		Set
			If (Me._ML_ID.Equals(value) = false) Then
				Me.OnML_IDChanging(value)
				Me.SendPropertyChanging
				Me._ML_ID = value
				Me.SendPropertyChanged("ML_ID")
				Me.OnML_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ML_NAME() As String
		Get
			Return Me._ML_NAME
		End Get
		Set
			If (String.Equals(Me._ML_NAME, value) = false) Then
				Me.OnML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ML_NAME = value
				Me.SendPropertyChanged("ML_NAME")
				Me.OnML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_PAY", DbType:="Decimal(18,2)")>  _
	Public Property ML_PAY() As System.Nullable(Of Decimal)
		Get
			Return Me._ML_PAY
		End Get
		Set
			If (Me._ML_PAY.Equals(value) = false) Then
				Me.OnML_PAYChanging(value)
				Me.SendPropertyChanging
				Me._ML_PAY = value
				Me.SendPropertyChanged("ML_PAY")
				Me.OnML_PAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_MINUS", DbType:="Int")>  _
	Public Property ML_MINUS() As System.Nullable(Of Integer)
		Get
			Return Me._ML_MINUS
		End Get
		Set
			If (Me._ML_MINUS.Equals(value) = false) Then
				Me.OnML_MINUSChanging(value)
				Me.SendPropertyChanging
				Me._ML_MINUS = value
				Me.SendPropertyChanged("ML_MINUS")
				Me.OnML_MINUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_SUM", DbType:="Decimal(18,2)")>  _
	Public Property ML_SUM() As System.Nullable(Of Decimal)
		Get
			Return Me._ML_SUM
		End Get
		Set
			If (Me._ML_SUM.Equals(value) = false) Then
				Me.OnML_SUMChanging(value)
				Me.SendPropertyChanging
				Me._ML_SUM = value
				Me.SendPropertyChanged("ML_SUM")
				Me.OnML_SUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_KEY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ML_KEY_NAME() As String
		Get
			Return Me._ML_KEY_NAME
		End Get
		Set
			If (String.Equals(Me._ML_KEY_NAME, value) = false) Then
				Me.OnML_KEY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ML_KEY_NAME = value
				Me.SendPropertyChanged("ML_KEY_NAME")
				Me.OnML_KEY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_KEY_DATE", DbType:="DateTime")>  _
	Public Property ML_KEY_DATE() As System.Nullable(Of Date)
		Get
			Return Me._ML_KEY_DATE
		End Get
		Set
			If (Me._ML_KEY_DATE.Equals(value) = false) Then
				Me.OnML_KEY_DATEChanging(value)
				Me.SendPropertyChanging
				Me._ML_KEY_DATE = value
				Me.SendPropertyChanged("ML_KEY_DATE")
				Me.OnML_KEY_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_PAY1", DbType:="DateTime")>  _
	Public Property DATE_PAY1() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PAY1
		End Get
		Set
			If (Me._DATE_PAY1.Equals(value) = false) Then
				Me.OnDATE_PAY1Changing(value)
				Me.SendPropertyChanging
				Me._DATE_PAY1 = value
				Me.SendPropertyChanged("DATE_PAY1")
				Me.OnDATE_PAY1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_PAY2", DbType:="DateTime")>  _
	Public Property DATE_PAY2() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PAY2
		End Get
		Set
			If (Me._DATE_PAY2.Equals(value) = false) Then
				Me.OnDATE_PAY2Changing(value)
				Me.SendPropertyChanging
				Me._DATE_PAY2 = value
				Me.SendPropertyChanged("DATE_PAY2")
				Me.OnDATE_PAY2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_DISCOUNT")>  _
Partial Public Class MAS_TABEAN_HERB_DISCOUNT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DISCOUNT As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDISCOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnDISCOUNTChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISCOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property DISCOUNT() As String
		Get
			Return Me._DISCOUNT
		End Get
		Set
			If (String.Equals(Me._DISCOUNT, value) = false) Then
				Me.OnDISCOUNTChanging(value)
				Me.SendPropertyChanging
				Me._DISCOUNT = value
				Me.SendPropertyChanged("DISCOUNT")
				Me.OnDISCOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TABEAN_JJ")>  _
Partial Public Class TABEAN_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _LCN_ID As String
	
	Private _LCNNO As String
	
	Private _LCN_ADDR As String
	
	Private _LCN_NAME As String
	
	Private _LCN_THANAMEPLACE As String
	
	Private _CUSTOMER_IDENTIFY As String
	
	Private _COMPANY_NAME As String
	
	Private _FOREIGN_NAME_ID As System.Nullable(Of Integer)
	
	Private _FOREIGN_NAME As String
	
	Private _FOREIGN_NAME_PLACE_ID As System.Nullable(Of Integer)
	
	Private _FOREIGN_NAME_PLACE As String
	
	Private _MAIN_PROCESS_ID As System.Nullable(Of Integer)
	
	Private _MAIN_PROCESS_NAME As String
	
	Private _TYPE_ID As System.Nullable(Of Integer)
	
	Private _TYPE_NAME As String
	
	Private _TYPE_SUB_ID As System.Nullable(Of Integer)
	
	Private _TYPE_SUB_NAME As String
	
	Private _CATEGORY_ID As System.Nullable(Of Integer)
	
	Private _CATEGORY_NAME As String
	
	Private _NAME_PLACE_JJ As String
	
	Private _NAME_JJ As String
	
	Private _NAME_THAI As String
	
	Private _NAME_ENG As String
	
	Private _NAME_OTHER As String
	
	Private _STYPE_ID As System.Nullable(Of Integer)
	
	Private _STYPE_NAME As String
	
	Private _RECIPE_NAME As String
	
	Private _ACCOUNT_NO As System.Nullable(Of Integer)
	
	Private _ARTICLE_NO As System.Nullable(Of Integer)
	
	Private _PRODUCT_JJ As String
	
	Private _NATURE_ID_EDIT As System.Nullable(Of Integer)
	
	Private _NATURE As String
	
	Private _MANUFAC_ID As System.Nullable(Of Integer)
	
	Private _MANUFAC_NAME As String
	
	Private _MANUFAC_NAME_DETAIL As String
	
	Private _PRODUCT_PROCESS As String
	
	Private _WEIGHT_TABLE_CAP As String
	
	Private _WEIGHT_TABLE_CAP_UNIT_ID As System.Nullable(Of Integer)
	
	Private _WEIGHT_TABLE_CAP_UNIT_NAME As String
	
	Private _SIZE_PACK As String
	
	Private _SYNDROME_ID As System.Nullable(Of Integer)
	
	Private _SYNDROME_NAME As String
	
	Private _SYNDROME_NAME_DETAIL As String
	
	Private _PROPERTIES As String
	
	Private _SIZE_USE As String
	
	Private _HOW_USE As String
	
	Private _EATTING_ID As System.Nullable(Of Integer)
	
	Private _EATTING_NAME As String
	
	Private _EATING_CONDITION_ID As System.Nullable(Of Integer)
	
	Private _EATING_CONDITION_NAME As String
	
	Private _STORAGE_ID As System.Nullable(Of Integer)
	
	Private _STORAGE_NAME As String
	
	Private _TREATMENT As String
	
	Private _TREATMENT_AGE As System.Nullable(Of Integer)
	
	Private _TREATMENT_AGE_ID As System.Nullable(Of Integer)
	
	Private _TREATMENT_AGE_NAME As String
	
	Private _TREATMENT_AGE_MONTH As String
	
	Private _CONTRAINDICATION_ID As System.Nullable(Of Integer)
	
	Private _CONTRAINDICATION_NAME As String
	
	Private _WARNING_ID As System.Nullable(Of Integer)
	
	Private _WARNING_NAME As String
	
	Private _CAUTION_ID As System.Nullable(Of Integer)
	
	Private _CAUTION_NAME As String
	
	Private _ADV_REACTIVETION_ID As System.Nullable(Of Integer)
	
	Private _ADV_REACTIVETION_NAME As String
	
	Private _SALE_CHANNEL_ID As System.Nullable(Of Integer)
	
	Private _SALE_CHANNEL_NAME As String
	
	Private _NOTE As String
	
	Private _DATE_CONFIRM As System.Nullable(Of Date)
	
	Private _ACCEPT_FORMULA_ID As System.Nullable(Of Integer)
	
	Private _ACCEPT_FORMULA As String
	
	Private _ACCEPT_FORMULA_NOTE As String
	
	Private _RGTTPCD_GROUP_ID As System.Nullable(Of Integer)
	
	Private _RGTTPCD_GROUP As String
	
	Private _RGTTPCD_GROUP_ENG As String
	
	Private _DATE_REQ As System.Nullable(Of Date)
	
	Private _OFF_REQ_ID As System.Nullable(Of Integer)
	
	Private _OFF_REQ As String
	
	Private _DATE_OFFER As System.Nullable(Of Date)
	
	Private _NOTE_OFFER As String
	
	Private _OFF_OFFER_ID As System.Nullable(Of Integer)
	
	Private _OFF_OFFER As String
	
	Private _DATE_APP As System.Nullable(Of Date)
	
	Private _NOTE_APP As String
	
	Private _OFF_APP_ID As System.Nullable(Of Integer)
	
	Private _OFF_APP As String
	
	Private _NOTE_EDIT As String
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _CITIZEN_ID As String
	
	Private _MENU_GROUP As System.Nullable(Of Integer)
	
	Private _IDA_LCT As System.Nullable(Of Integer)
	
	Private _TR_ID_LCN As System.Nullable(Of Integer)
	
	Private _IDA_LCN As System.Nullable(Of Integer)
	
	Private _DD_HERB_NAME_ID As System.Nullable(Of Integer)
	
	Private _DDHERB As System.Nullable(Of Integer)
	
	Private _RCVNO_FULL As String
	
	Private _TR_ID_JJ As System.Nullable(Of Integer)
	
	Private _RGTTPCD_ID As System.Nullable(Of Integer)
	
	Private _RGTTPCD As String
	
	Private _RGTNO_JJ As String
	
	Private _RGTNO_FULL As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _DATE_YEAR As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
	Private _NAME_CONFIRM As String
	
	Private _ML_ID As System.Nullable(Of Integer)
	
	Private _ML_NAME As String
	
	Private _ML_PAY As System.Nullable(Of Decimal)
	
	Private _ML_MINUS As System.Nullable(Of Integer)
	
	Private _ML_SUM As System.Nullable(Of Decimal)
	
	Private _ML_KEY_NAME As String
	
	Private _ML_KEY_DATE As System.Nullable(Of Date)
	
	Private _DATE_PAY1 As System.Nullable(Of Date)
	
	Private _DATE_PAY2 As System.Nullable(Of Date)
	
	Private _INOFFICE_STAFF_ID As System.Nullable(Of Integer)
	
	Private _INOFFICE_STAFF_CITIZEN_ID As String
	
	Private _VALIDATE_ID As System.Nullable(Of Integer)
	
	Private _VALIDATE_NAME As String
	
	Private _VALIDATE_DATE As System.Nullable(Of Date)
	
	Private _REF_NO As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnLCN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_IDChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnLCN_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_ADDRChanged()
    End Sub
    Partial Private Sub OnLCN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_NAMEChanged()
    End Sub
    Partial Private Sub OnLCN_THANAMEPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_THANAMEPLACEChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnCUSTOMER_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnFOREIGN_NAME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFOREIGN_NAME_IDChanged()
    End Sub
    Partial Private Sub OnFOREIGN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_NAMEChanged()
    End Sub
    Partial Private Sub OnFOREIGN_NAME_PLACE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFOREIGN_NAME_PLACE_IDChanged()
    End Sub
    Partial Private Sub OnFOREIGN_NAME_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_NAME_PLACEChanged()
    End Sub
    Partial Private Sub OnMAIN_PROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAIN_PROCESS_IDChanged()
    End Sub
    Partial Private Sub OnMAIN_PROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMAIN_PROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_SUB_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_SUB_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_SUB_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_SUB_NAMEChanged()
    End Sub
    Partial Private Sub OnCATEGORY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCATEGORY_IDChanged()
    End Sub
    Partial Private Sub OnCATEGORY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_NAMEChanged()
    End Sub
    Partial Private Sub OnNAME_PLACE_JJChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_PLACE_JJChanged()
    End Sub
    Partial Private Sub OnNAME_JJChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_JJChanged()
    End Sub
    Partial Private Sub OnNAME_THAIChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_THAIChanged()
    End Sub
    Partial Private Sub OnNAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ENGChanged()
    End Sub
    Partial Private Sub OnNAME_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OTHERChanged()
    End Sub
    Partial Private Sub OnSTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTYPE_IDChanged()
    End Sub
    Partial Private Sub OnSTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnRECIPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRECIPE_NAMEChanged()
    End Sub
    Partial Private Sub OnACCOUNT_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACCOUNT_NOChanged()
    End Sub
    Partial Private Sub OnARTICLE_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnARTICLE_NOChanged()
    End Sub
    Partial Private Sub OnPRODUCT_JJChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_JJChanged()
    End Sub
    Partial Private Sub OnNATURE_ID_EDITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNATURE_ID_EDITChanged()
    End Sub
    Partial Private Sub OnNATUREChanging(value As String)
    End Sub
    Partial Private Sub OnNATUREChanged()
    End Sub
    Partial Private Sub OnMANUFAC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMANUFAC_IDChanged()
    End Sub
    Partial Private Sub OnMANUFAC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFAC_NAMEChanged()
    End Sub
    Partial Private Sub OnMANUFAC_NAME_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFAC_NAME_DETAILChanged()
    End Sub
    Partial Private Sub OnPRODUCT_PROCESSChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_PROCESSChanged()
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAPChanging(value As String)
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAPChanged()
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_IDChanged()
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_NAMEChanged()
    End Sub
    Partial Private Sub OnSIZE_PACKChanging(value As String)
    End Sub
    Partial Private Sub OnSIZE_PACKChanged()
    End Sub
    Partial Private Sub OnSYNDROME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYNDROME_IDChanged()
    End Sub
    Partial Private Sub OnSYNDROME_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSYNDROME_NAMEChanged()
    End Sub
    Partial Private Sub OnSYNDROME_NAME_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnSYNDROME_NAME_DETAILChanged()
    End Sub
    Partial Private Sub OnPROPERTIESChanging(value As String)
    End Sub
    Partial Private Sub OnPROPERTIESChanged()
    End Sub
    Partial Private Sub OnSIZE_USEChanging(value As String)
    End Sub
    Partial Private Sub OnSIZE_USEChanged()
    End Sub
    Partial Private Sub OnHOW_USEChanging(value As String)
    End Sub
    Partial Private Sub OnHOW_USEChanged()
    End Sub
    Partial Private Sub OnEATTING_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEATTING_IDChanged()
    End Sub
    Partial Private Sub OnEATTING_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEATTING_NAMEChanged()
    End Sub
    Partial Private Sub OnEATING_CONDITION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEATING_CONDITION_IDChanged()
    End Sub
    Partial Private Sub OnEATING_CONDITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEATING_CONDITION_NAMEChanged()
    End Sub
    Partial Private Sub OnSTORAGE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTORAGE_IDChanged()
    End Sub
    Partial Private Sub OnSTORAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTORAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnTREATMENTChanging(value As String)
    End Sub
    Partial Private Sub OnTREATMENTChanged()
    End Sub
    Partial Private Sub OnTREATMENT_AGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTREATMENT_AGEChanged()
    End Sub
    Partial Private Sub OnTREATMENT_AGE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTREATMENT_AGE_IDChanged()
    End Sub
    Partial Private Sub OnTREATMENT_AGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTREATMENT_AGE_NAMEChanged()
    End Sub
    Partial Private Sub OnTREATMENT_AGE_MONTHChanging(value As String)
    End Sub
    Partial Private Sub OnTREATMENT_AGE_MONTHChanged()
    End Sub
    Partial Private Sub OnCONTRAINDICATION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCONTRAINDICATION_IDChanged()
    End Sub
    Partial Private Sub OnCONTRAINDICATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCONTRAINDICATION_NAMEChanged()
    End Sub
    Partial Private Sub OnWARNING_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWARNING_IDChanged()
    End Sub
    Partial Private Sub OnWARNING_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWARNING_NAMEChanged()
    End Sub
    Partial Private Sub OnCAUTION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAUTION_IDChanged()
    End Sub
    Partial Private Sub OnCAUTION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCAUTION_NAMEChanged()
    End Sub
    Partial Private Sub OnADV_REACTIVETION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnADV_REACTIVETION_IDChanged()
    End Sub
    Partial Private Sub OnADV_REACTIVETION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnADV_REACTIVETION_NAMEChanged()
    End Sub
    Partial Private Sub OnSALE_CHANNEL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSALE_CHANNEL_IDChanged()
    End Sub
    Partial Private Sub OnSALE_CHANNEL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSALE_CHANNEL_NAMEChanged()
    End Sub
    Partial Private Sub OnNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNOTEChanged()
    End Sub
    Partial Private Sub OnDATE_CONFIRMChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CONFIRMChanged()
    End Sub
    Partial Private Sub OnACCEPT_FORMULA_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACCEPT_FORMULA_IDChanged()
    End Sub
    Partial Private Sub OnACCEPT_FORMULAChanging(value As String)
    End Sub
    Partial Private Sub OnACCEPT_FORMULAChanged()
    End Sub
    Partial Private Sub OnACCEPT_FORMULA_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnACCEPT_FORMULA_NOTEChanged()
    End Sub
    Partial Private Sub OnRGTTPCD_GROUP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRGTTPCD_GROUP_IDChanged()
    End Sub
    Partial Private Sub OnRGTTPCD_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnRGTTPCD_GROUPChanged()
    End Sub
    Partial Private Sub OnRGTTPCD_GROUP_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnRGTTPCD_GROUP_ENGChanged()
    End Sub
    Partial Private Sub OnDATE_REQChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_REQChanged()
    End Sub
    Partial Private Sub OnOFF_REQ_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOFF_REQ_IDChanged()
    End Sub
    Partial Private Sub OnOFF_REQChanging(value As String)
    End Sub
    Partial Private Sub OnOFF_REQChanged()
    End Sub
    Partial Private Sub OnDATE_OFFERChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_OFFERChanged()
    End Sub
    Partial Private Sub OnNOTE_OFFERChanging(value As String)
    End Sub
    Partial Private Sub OnNOTE_OFFERChanged()
    End Sub
    Partial Private Sub OnOFF_OFFER_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOFF_OFFER_IDChanged()
    End Sub
    Partial Private Sub OnOFF_OFFERChanging(value As String)
    End Sub
    Partial Private Sub OnOFF_OFFERChanged()
    End Sub
    Partial Private Sub OnDATE_APPChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_APPChanged()
    End Sub
    Partial Private Sub OnNOTE_APPChanging(value As String)
    End Sub
    Partial Private Sub OnNOTE_APPChanged()
    End Sub
    Partial Private Sub OnOFF_APP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOFF_APP_IDChanged()
    End Sub
    Partial Private Sub OnOFF_APPChanging(value As String)
    End Sub
    Partial Private Sub OnOFF_APPChanged()
    End Sub
    Partial Private Sub OnNOTE_EDITChanging(value As String)
    End Sub
    Partial Private Sub OnNOTE_EDITChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnMENU_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMENU_GROUPChanged()
    End Sub
    Partial Private Sub OnIDA_LCTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_LCTChanged()
    End Sub
    Partial Private Sub OnTR_ID_LCNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_ID_LCNChanged()
    End Sub
    Partial Private Sub OnIDA_LCNChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_LCNChanged()
    End Sub
    Partial Private Sub OnDD_HERB_NAME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDD_HERB_NAME_IDChanged()
    End Sub
    Partial Private Sub OnDDHERBChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDDHERBChanged()
    End Sub
    Partial Private Sub OnRCVNO_FULLChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_FULLChanged()
    End Sub
    Partial Private Sub OnTR_ID_JJChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_ID_JJChanged()
    End Sub
    Partial Private Sub OnRGTTPCD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRGTTPCD_IDChanged()
    End Sub
    Partial Private Sub OnRGTTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnRGTTPCDChanged()
    End Sub
    Partial Private Sub OnRGTNO_JJChanging(value As String)
    End Sub
    Partial Private Sub OnRGTNO_JJChanged()
    End Sub
    Partial Private Sub OnRGTNO_FULLChanging(value As String)
    End Sub
    Partial Private Sub OnRGTNO_FULLChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnDATE_YEARChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_YEARChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    Partial Private Sub OnNAME_CONFIRMChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_CONFIRMChanged()
    End Sub
    Partial Private Sub OnML_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnML_IDChanged()
    End Sub
    Partial Private Sub OnML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnML_NAMEChanged()
    End Sub
    Partial Private Sub OnML_PAYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnML_PAYChanged()
    End Sub
    Partial Private Sub OnML_MINUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnML_MINUSChanged()
    End Sub
    Partial Private Sub OnML_SUMChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnML_SUMChanged()
    End Sub
    Partial Private Sub OnML_KEY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnML_KEY_NAMEChanged()
    End Sub
    Partial Private Sub OnML_KEY_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnML_KEY_DATEChanged()
    End Sub
    Partial Private Sub OnDATE_PAY1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PAY1Changed()
    End Sub
    Partial Private Sub OnDATE_PAY2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PAY2Changed()
    End Sub
    Partial Private Sub OnINOFFICE_STAFF_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnINOFFICE_STAFF_IDChanged()
    End Sub
    Partial Private Sub OnINOFFICE_STAFF_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnINOFFICE_STAFF_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnVALIDATE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVALIDATE_IDChanged()
    End Sub
    Partial Private Sub OnVALIDATE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnVALIDATE_NAMEChanged()
    End Sub
    Partial Private Sub OnVALIDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnVALIDATE_DATEChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_ID() As String
		Get
			Return Me._LCN_ID
		End Get
		Set
			If (String.Equals(Me._LCN_ID, value) = false) Then
				Me.OnLCN_IDChanging(value)
				Me.SendPropertyChanging
				Me._LCN_ID = value
				Me.SendPropertyChanged("LCN_ID")
				Me.OnLCN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_ADDR() As String
		Get
			Return Me._LCN_ADDR
		End Get
		Set
			If (String.Equals(Me._LCN_ADDR, value) = false) Then
				Me.OnLCN_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._LCN_ADDR = value
				Me.SendPropertyChanged("LCN_ADDR")
				Me.OnLCN_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_NAME() As String
		Get
			Return Me._LCN_NAME
		End Get
		Set
			If (String.Equals(Me._LCN_NAME, value) = false) Then
				Me.OnLCN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LCN_NAME = value
				Me.SendPropertyChanged("LCN_NAME")
				Me.OnLCN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_THANAMEPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_THANAMEPLACE() As String
		Get
			Return Me._LCN_THANAMEPLACE
		End Get
		Set
			If (String.Equals(Me._LCN_THANAMEPLACE, value) = false) Then
				Me.OnLCN_THANAMEPLACEChanging(value)
				Me.SendPropertyChanging
				Me._LCN_THANAMEPLACE = value
				Me.SendPropertyChanged("LCN_THANAMEPLACE")
				Me.OnLCN_THANAMEPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property CUSTOMER_IDENTIFY() As String
		Get
			Return Me._CUSTOMER_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._CUSTOMER_IDENTIFY, value) = false) Then
				Me.OnCUSTOMER_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_IDENTIFY = value
				Me.SendPropertyChanged("CUSTOMER_IDENTIFY")
				Me.OnCUSTOMER_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_NAME_ID", DbType:="Int")>  _
	Public Property FOREIGN_NAME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FOREIGN_NAME_ID
		End Get
		Set
			If (Me._FOREIGN_NAME_ID.Equals(value) = false) Then
				Me.OnFOREIGN_NAME_IDChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_NAME_ID = value
				Me.SendPropertyChanged("FOREIGN_NAME_ID")
				Me.OnFOREIGN_NAME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_NAME() As String
		Get
			Return Me._FOREIGN_NAME
		End Get
		Set
			If (String.Equals(Me._FOREIGN_NAME, value) = false) Then
				Me.OnFOREIGN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_NAME = value
				Me.SendPropertyChanged("FOREIGN_NAME")
				Me.OnFOREIGN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_NAME_PLACE_ID", DbType:="Int")>  _
	Public Property FOREIGN_NAME_PLACE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FOREIGN_NAME_PLACE_ID
		End Get
		Set
			If (Me._FOREIGN_NAME_PLACE_ID.Equals(value) = false) Then
				Me.OnFOREIGN_NAME_PLACE_IDChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_NAME_PLACE_ID = value
				Me.SendPropertyChanged("FOREIGN_NAME_PLACE_ID")
				Me.OnFOREIGN_NAME_PLACE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_NAME_PLACE", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_NAME_PLACE() As String
		Get
			Return Me._FOREIGN_NAME_PLACE
		End Get
		Set
			If (String.Equals(Me._FOREIGN_NAME_PLACE, value) = false) Then
				Me.OnFOREIGN_NAME_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_NAME_PLACE = value
				Me.SendPropertyChanged("FOREIGN_NAME_PLACE")
				Me.OnFOREIGN_NAME_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_PROCESS_ID", DbType:="Int")>  _
	Public Property MAIN_PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MAIN_PROCESS_ID
		End Get
		Set
			If (Me._MAIN_PROCESS_ID.Equals(value) = false) Then
				Me.OnMAIN_PROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_PROCESS_ID = value
				Me.SendPropertyChanged("MAIN_PROCESS_ID")
				Me.OnMAIN_PROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MAIN_PROCESS_NAME() As String
		Get
			Return Me._MAIN_PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._MAIN_PROCESS_NAME, value) = false) Then
				Me.OnMAIN_PROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_PROCESS_NAME = value
				Me.SendPropertyChanged("MAIN_PROCESS_NAME")
				Me.OnMAIN_PROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_ID", DbType:="Int")>  _
	Public Property TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_ID
		End Get
		Set
			If (Me._TYPE_ID.Equals(value) = false) Then
				Me.OnTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_ID = value
				Me.SendPropertyChanged("TYPE_ID")
				Me.OnTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_NAME() As String
		Get
			Return Me._TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_NAME, value) = false) Then
				Me.OnTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_NAME = value
				Me.SendPropertyChanged("TYPE_NAME")
				Me.OnTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SUB_ID", DbType:="Int")>  _
	Public Property TYPE_SUB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_SUB_ID
		End Get
		Set
			If (Me._TYPE_SUB_ID.Equals(value) = false) Then
				Me.OnTYPE_SUB_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SUB_ID = value
				Me.SendPropertyChanged("TYPE_SUB_ID")
				Me.OnTYPE_SUB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SUB_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_SUB_NAME() As String
		Get
			Return Me._TYPE_SUB_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_SUB_NAME, value) = false) Then
				Me.OnTYPE_SUB_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SUB_NAME = value
				Me.SendPropertyChanged("TYPE_SUB_NAME")
				Me.OnTYPE_SUB_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_ID", DbType:="Int")>  _
	Public Property CATEGORY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CATEGORY_ID
		End Get
		Set
			If (Me._CATEGORY_ID.Equals(value) = false) Then
				Me.OnCATEGORY_IDChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_ID = value
				Me.SendPropertyChanged("CATEGORY_ID")
				Me.OnCATEGORY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY_NAME() As String
		Get
			Return Me._CATEGORY_NAME
		End Get
		Set
			If (String.Equals(Me._CATEGORY_NAME, value) = false) Then
				Me.OnCATEGORY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_NAME = value
				Me.SendPropertyChanged("CATEGORY_NAME")
				Me.OnCATEGORY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_PLACE_JJ", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_PLACE_JJ() As String
		Get
			Return Me._NAME_PLACE_JJ
		End Get
		Set
			If (String.Equals(Me._NAME_PLACE_JJ, value) = false) Then
				Me.OnNAME_PLACE_JJChanging(value)
				Me.SendPropertyChanging
				Me._NAME_PLACE_JJ = value
				Me.SendPropertyChanged("NAME_PLACE_JJ")
				Me.OnNAME_PLACE_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_JJ", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_JJ() As String
		Get
			Return Me._NAME_JJ
		End Get
		Set
			If (String.Equals(Me._NAME_JJ, value) = false) Then
				Me.OnNAME_JJChanging(value)
				Me.SendPropertyChanging
				Me._NAME_JJ = value
				Me.SendPropertyChanged("NAME_JJ")
				Me.OnNAME_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_THAI", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_THAI() As String
		Get
			Return Me._NAME_THAI
		End Get
		Set
			If (String.Equals(Me._NAME_THAI, value) = false) Then
				Me.OnNAME_THAIChanging(value)
				Me.SendPropertyChanging
				Me._NAME_THAI = value
				Me.SendPropertyChanged("NAME_THAI")
				Me.OnNAME_THAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ENG() As String
		Get
			Return Me._NAME_ENG
		End Get
		Set
			If (String.Equals(Me._NAME_ENG, value) = false) Then
				Me.OnNAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ENG = value
				Me.SendPropertyChanged("NAME_ENG")
				Me.OnNAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OTHER() As String
		Get
			Return Me._NAME_OTHER
		End Get
		Set
			If (String.Equals(Me._NAME_OTHER, value) = false) Then
				Me.OnNAME_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OTHER = value
				Me.SendPropertyChanged("NAME_OTHER")
				Me.OnNAME_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYPE_ID", DbType:="Int")>  _
	Public Property STYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STYPE_ID
		End Get
		Set
			If (Me._STYPE_ID.Equals(value) = false) Then
				Me.OnSTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._STYPE_ID = value
				Me.SendPropertyChanged("STYPE_ID")
				Me.OnSTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STYPE_NAME() As String
		Get
			Return Me._STYPE_NAME
		End Get
		Set
			If (String.Equals(Me._STYPE_NAME, value) = false) Then
				Me.OnSTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STYPE_NAME = value
				Me.SendPropertyChanged("STYPE_NAME")
				Me.OnSTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECIPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property RECIPE_NAME() As String
		Get
			Return Me._RECIPE_NAME
		End Get
		Set
			If (String.Equals(Me._RECIPE_NAME, value) = false) Then
				Me.OnRECIPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._RECIPE_NAME = value
				Me.SendPropertyChanged("RECIPE_NAME")
				Me.OnRECIPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_NO", DbType:="Int")>  _
	Public Property ACCOUNT_NO() As System.Nullable(Of Integer)
		Get
			Return Me._ACCOUNT_NO
		End Get
		Set
			If (Me._ACCOUNT_NO.Equals(value) = false) Then
				Me.OnACCOUNT_NOChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_NO = value
				Me.SendPropertyChanged("ACCOUNT_NO")
				Me.OnACCOUNT_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARTICLE_NO", DbType:="Int")>  _
	Public Property ARTICLE_NO() As System.Nullable(Of Integer)
		Get
			Return Me._ARTICLE_NO
		End Get
		Set
			If (Me._ARTICLE_NO.Equals(value) = false) Then
				Me.OnARTICLE_NOChanging(value)
				Me.SendPropertyChanging
				Me._ARTICLE_NO = value
				Me.SendPropertyChanged("ARTICLE_NO")
				Me.OnARTICLE_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_JJ", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_JJ() As String
		Get
			Return Me._PRODUCT_JJ
		End Get
		Set
			If (String.Equals(Me._PRODUCT_JJ, value) = false) Then
				Me.OnPRODUCT_JJChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_JJ = value
				Me.SendPropertyChanged("PRODUCT_JJ")
				Me.OnPRODUCT_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATURE_ID_EDIT", DbType:="Int")>  _
	Public Property NATURE_ID_EDIT() As System.Nullable(Of Integer)
		Get
			Return Me._NATURE_ID_EDIT
		End Get
		Set
			If (Me._NATURE_ID_EDIT.Equals(value) = false) Then
				Me.OnNATURE_ID_EDITChanging(value)
				Me.SendPropertyChanging
				Me._NATURE_ID_EDIT = value
				Me.SendPropertyChanged("NATURE_ID_EDIT")
				Me.OnNATURE_ID_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATURE", DbType:="NVarChar(MAX)")>  _
	Public Property NATURE() As String
		Get
			Return Me._NATURE
		End Get
		Set
			If (String.Equals(Me._NATURE, value) = false) Then
				Me.OnNATUREChanging(value)
				Me.SendPropertyChanging
				Me._NATURE = value
				Me.SendPropertyChanged("NATURE")
				Me.OnNATUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFAC_ID", DbType:="Int")>  _
	Public Property MANUFAC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MANUFAC_ID
		End Get
		Set
			If (Me._MANUFAC_ID.Equals(value) = false) Then
				Me.OnMANUFAC_IDChanging(value)
				Me.SendPropertyChanging
				Me._MANUFAC_ID = value
				Me.SendPropertyChanged("MANUFAC_ID")
				Me.OnMANUFAC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFAC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFAC_NAME() As String
		Get
			Return Me._MANUFAC_NAME
		End Get
		Set
			If (String.Equals(Me._MANUFAC_NAME, value) = false) Then
				Me.OnMANUFAC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MANUFAC_NAME = value
				Me.SendPropertyChanged("MANUFAC_NAME")
				Me.OnMANUFAC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFAC_NAME_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFAC_NAME_DETAIL() As String
		Get
			Return Me._MANUFAC_NAME_DETAIL
		End Get
		Set
			If (String.Equals(Me._MANUFAC_NAME_DETAIL, value) = false) Then
				Me.OnMANUFAC_NAME_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._MANUFAC_NAME_DETAIL = value
				Me.SendPropertyChanged("MANUFAC_NAME_DETAIL")
				Me.OnMANUFAC_NAME_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_PROCESS", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_PROCESS() As String
		Get
			Return Me._PRODUCT_PROCESS
		End Get
		Set
			If (String.Equals(Me._PRODUCT_PROCESS, value) = false) Then
				Me.OnPRODUCT_PROCESSChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_PROCESS = value
				Me.SendPropertyChanged("PRODUCT_PROCESS")
				Me.OnPRODUCT_PROCESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_TABLE_CAP", DbType:="NVarChar(MAX)")>  _
	Public Property WEIGHT_TABLE_CAP() As String
		Get
			Return Me._WEIGHT_TABLE_CAP
		End Get
		Set
			If (String.Equals(Me._WEIGHT_TABLE_CAP, value) = false) Then
				Me.OnWEIGHT_TABLE_CAPChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_TABLE_CAP = value
				Me.SendPropertyChanged("WEIGHT_TABLE_CAP")
				Me.OnWEIGHT_TABLE_CAPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_TABLE_CAP_UNIT_ID", DbType:="Int")>  _
	Public Property WEIGHT_TABLE_CAP_UNIT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WEIGHT_TABLE_CAP_UNIT_ID
		End Get
		Set
			If (Me._WEIGHT_TABLE_CAP_UNIT_ID.Equals(value) = false) Then
				Me.OnWEIGHT_TABLE_CAP_UNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_TABLE_CAP_UNIT_ID = value
				Me.SendPropertyChanged("WEIGHT_TABLE_CAP_UNIT_ID")
				Me.OnWEIGHT_TABLE_CAP_UNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_TABLE_CAP_UNIT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WEIGHT_TABLE_CAP_UNIT_NAME() As String
		Get
			Return Me._WEIGHT_TABLE_CAP_UNIT_NAME
		End Get
		Set
			If (String.Equals(Me._WEIGHT_TABLE_CAP_UNIT_NAME, value) = false) Then
				Me.OnWEIGHT_TABLE_CAP_UNIT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_TABLE_CAP_UNIT_NAME = value
				Me.SendPropertyChanged("WEIGHT_TABLE_CAP_UNIT_NAME")
				Me.OnWEIGHT_TABLE_CAP_UNIT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_PACK", DbType:="NVarChar(MAX)")>  _
	Public Property SIZE_PACK() As String
		Get
			Return Me._SIZE_PACK
		End Get
		Set
			If (String.Equals(Me._SIZE_PACK, value) = false) Then
				Me.OnSIZE_PACKChanging(value)
				Me.SendPropertyChanging
				Me._SIZE_PACK = value
				Me.SendPropertyChanged("SIZE_PACK")
				Me.OnSIZE_PACKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYNDROME_ID", DbType:="Int")>  _
	Public Property SYNDROME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYNDROME_ID
		End Get
		Set
			If (Me._SYNDROME_ID.Equals(value) = false) Then
				Me.OnSYNDROME_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYNDROME_ID = value
				Me.SendPropertyChanged("SYNDROME_ID")
				Me.OnSYNDROME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYNDROME_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SYNDROME_NAME() As String
		Get
			Return Me._SYNDROME_NAME
		End Get
		Set
			If (String.Equals(Me._SYNDROME_NAME, value) = false) Then
				Me.OnSYNDROME_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SYNDROME_NAME = value
				Me.SendPropertyChanged("SYNDROME_NAME")
				Me.OnSYNDROME_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYNDROME_NAME_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property SYNDROME_NAME_DETAIL() As String
		Get
			Return Me._SYNDROME_NAME_DETAIL
		End Get
		Set
			If (String.Equals(Me._SYNDROME_NAME_DETAIL, value) = false) Then
				Me.OnSYNDROME_NAME_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._SYNDROME_NAME_DETAIL = value
				Me.SendPropertyChanged("SYNDROME_NAME_DETAIL")
				Me.OnSYNDROME_NAME_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROPERTIES", DbType:="NVarChar(MAX)")>  _
	Public Property PROPERTIES() As String
		Get
			Return Me._PROPERTIES
		End Get
		Set
			If (String.Equals(Me._PROPERTIES, value) = false) Then
				Me.OnPROPERTIESChanging(value)
				Me.SendPropertyChanging
				Me._PROPERTIES = value
				Me.SendPropertyChanged("PROPERTIES")
				Me.OnPROPERTIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_USE", DbType:="NVarChar(MAX)")>  _
	Public Property SIZE_USE() As String
		Get
			Return Me._SIZE_USE
		End Get
		Set
			If (String.Equals(Me._SIZE_USE, value) = false) Then
				Me.OnSIZE_USEChanging(value)
				Me.SendPropertyChanging
				Me._SIZE_USE = value
				Me.SendPropertyChanged("SIZE_USE")
				Me.OnSIZE_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOW_USE", DbType:="NVarChar(MAX)")>  _
	Public Property HOW_USE() As String
		Get
			Return Me._HOW_USE
		End Get
		Set
			If (String.Equals(Me._HOW_USE, value) = false) Then
				Me.OnHOW_USEChanging(value)
				Me.SendPropertyChanging
				Me._HOW_USE = value
				Me.SendPropertyChanged("HOW_USE")
				Me.OnHOW_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATTING_ID", DbType:="Int")>  _
	Public Property EATTING_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EATTING_ID
		End Get
		Set
			If (Me._EATTING_ID.Equals(value) = false) Then
				Me.OnEATTING_IDChanging(value)
				Me.SendPropertyChanging
				Me._EATTING_ID = value
				Me.SendPropertyChanged("EATTING_ID")
				Me.OnEATTING_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATTING_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property EATTING_NAME() As String
		Get
			Return Me._EATTING_NAME
		End Get
		Set
			If (String.Equals(Me._EATTING_NAME, value) = false) Then
				Me.OnEATTING_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._EATTING_NAME = value
				Me.SendPropertyChanged("EATTING_NAME")
				Me.OnEATTING_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATING_CONDITION_ID", DbType:="Int")>  _
	Public Property EATING_CONDITION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EATING_CONDITION_ID
		End Get
		Set
			If (Me._EATING_CONDITION_ID.Equals(value) = false) Then
				Me.OnEATING_CONDITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._EATING_CONDITION_ID = value
				Me.SendPropertyChanged("EATING_CONDITION_ID")
				Me.OnEATING_CONDITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATING_CONDITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property EATING_CONDITION_NAME() As String
		Get
			Return Me._EATING_CONDITION_NAME
		End Get
		Set
			If (String.Equals(Me._EATING_CONDITION_NAME, value) = false) Then
				Me.OnEATING_CONDITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._EATING_CONDITION_NAME = value
				Me.SendPropertyChanged("EATING_CONDITION_NAME")
				Me.OnEATING_CONDITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORAGE_ID", DbType:="Int")>  _
	Public Property STORAGE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STORAGE_ID
		End Get
		Set
			If (Me._STORAGE_ID.Equals(value) = false) Then
				Me.OnSTORAGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._STORAGE_ID = value
				Me.SendPropertyChanged("STORAGE_ID")
				Me.OnSTORAGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STORAGE_NAME() As String
		Get
			Return Me._STORAGE_NAME
		End Get
		Set
			If (String.Equals(Me._STORAGE_NAME, value) = false) Then
				Me.OnSTORAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STORAGE_NAME = value
				Me.SendPropertyChanged("STORAGE_NAME")
				Me.OnSTORAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT", DbType:="NVarChar(MAX)")>  _
	Public Property TREATMENT() As String
		Get
			Return Me._TREATMENT
		End Get
		Set
			If (String.Equals(Me._TREATMENT, value) = false) Then
				Me.OnTREATMENTChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT = value
				Me.SendPropertyChanged("TREATMENT")
				Me.OnTREATMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT_AGE", DbType:="Int")>  _
	Public Property TREATMENT_AGE() As System.Nullable(Of Integer)
		Get
			Return Me._TREATMENT_AGE
		End Get
		Set
			If (Me._TREATMENT_AGE.Equals(value) = false) Then
				Me.OnTREATMENT_AGEChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT_AGE = value
				Me.SendPropertyChanged("TREATMENT_AGE")
				Me.OnTREATMENT_AGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT_AGE_ID", DbType:="Int")>  _
	Public Property TREATMENT_AGE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TREATMENT_AGE_ID
		End Get
		Set
			If (Me._TREATMENT_AGE_ID.Equals(value) = false) Then
				Me.OnTREATMENT_AGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT_AGE_ID = value
				Me.SendPropertyChanged("TREATMENT_AGE_ID")
				Me.OnTREATMENT_AGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT_AGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TREATMENT_AGE_NAME() As String
		Get
			Return Me._TREATMENT_AGE_NAME
		End Get
		Set
			If (String.Equals(Me._TREATMENT_AGE_NAME, value) = false) Then
				Me.OnTREATMENT_AGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT_AGE_NAME = value
				Me.SendPropertyChanged("TREATMENT_AGE_NAME")
				Me.OnTREATMENT_AGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT_AGE_MONTH", DbType:="NVarChar(MAX)")>  _
	Public Property TREATMENT_AGE_MONTH() As String
		Get
			Return Me._TREATMENT_AGE_MONTH
		End Get
		Set
			If (String.Equals(Me._TREATMENT_AGE_MONTH, value) = false) Then
				Me.OnTREATMENT_AGE_MONTHChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT_AGE_MONTH = value
				Me.SendPropertyChanged("TREATMENT_AGE_MONTH")
				Me.OnTREATMENT_AGE_MONTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINDICATION_ID", DbType:="Int")>  _
	Public Property CONTRAINDICATION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CONTRAINDICATION_ID
		End Get
		Set
			If (Me._CONTRAINDICATION_ID.Equals(value) = false) Then
				Me.OnCONTRAINDICATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINDICATION_ID = value
				Me.SendPropertyChanged("CONTRAINDICATION_ID")
				Me.OnCONTRAINDICATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINDICATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CONTRAINDICATION_NAME() As String
		Get
			Return Me._CONTRAINDICATION_NAME
		End Get
		Set
			If (String.Equals(Me._CONTRAINDICATION_NAME, value) = false) Then
				Me.OnCONTRAINDICATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINDICATION_NAME = value
				Me.SendPropertyChanged("CONTRAINDICATION_NAME")
				Me.OnCONTRAINDICATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_ID", DbType:="Int")>  _
	Public Property WARNING_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WARNING_ID
		End Get
		Set
			If (Me._WARNING_ID.Equals(value) = false) Then
				Me.OnWARNING_IDChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_ID = value
				Me.SendPropertyChanged("WARNING_ID")
				Me.OnWARNING_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WARNING_NAME() As String
		Get
			Return Me._WARNING_NAME
		End Get
		Set
			If (String.Equals(Me._WARNING_NAME, value) = false) Then
				Me.OnWARNING_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_NAME = value
				Me.SendPropertyChanged("WARNING_NAME")
				Me.OnWARNING_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUTION_ID", DbType:="Int")>  _
	Public Property CAUTION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CAUTION_ID
		End Get
		Set
			If (Me._CAUTION_ID.Equals(value) = false) Then
				Me.OnCAUTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._CAUTION_ID = value
				Me.SendPropertyChanged("CAUTION_ID")
				Me.OnCAUTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUTION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CAUTION_NAME() As String
		Get
			Return Me._CAUTION_NAME
		End Get
		Set
			If (String.Equals(Me._CAUTION_NAME, value) = false) Then
				Me.OnCAUTION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CAUTION_NAME = value
				Me.SendPropertyChanged("CAUTION_NAME")
				Me.OnCAUTION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADV_REACTIVETION_ID", DbType:="Int")>  _
	Public Property ADV_REACTIVETION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ADV_REACTIVETION_ID
		End Get
		Set
			If (Me._ADV_REACTIVETION_ID.Equals(value) = false) Then
				Me.OnADV_REACTIVETION_IDChanging(value)
				Me.SendPropertyChanging
				Me._ADV_REACTIVETION_ID = value
				Me.SendPropertyChanged("ADV_REACTIVETION_ID")
				Me.OnADV_REACTIVETION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADV_REACTIVETION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ADV_REACTIVETION_NAME() As String
		Get
			Return Me._ADV_REACTIVETION_NAME
		End Get
		Set
			If (String.Equals(Me._ADV_REACTIVETION_NAME, value) = false) Then
				Me.OnADV_REACTIVETION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ADV_REACTIVETION_NAME = value
				Me.SendPropertyChanged("ADV_REACTIVETION_NAME")
				Me.OnADV_REACTIVETION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_CHANNEL_ID", DbType:="Int")>  _
	Public Property SALE_CHANNEL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SALE_CHANNEL_ID
		End Get
		Set
			If (Me._SALE_CHANNEL_ID.Equals(value) = false) Then
				Me.OnSALE_CHANNEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._SALE_CHANNEL_ID = value
				Me.SendPropertyChanged("SALE_CHANNEL_ID")
				Me.OnSALE_CHANNEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_CHANNEL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_CHANNEL_NAME() As String
		Get
			Return Me._SALE_CHANNEL_NAME
		End Get
		Set
			If (String.Equals(Me._SALE_CHANNEL_NAME, value) = false) Then
				Me.OnSALE_CHANNEL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_CHANNEL_NAME = value
				Me.SendPropertyChanged("SALE_CHANNEL_NAME")
				Me.OnSALE_CHANNEL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property NOTE() As String
		Get
			Return Me._NOTE
		End Get
		Set
			If (String.Equals(Me._NOTE, value) = false) Then
				Me.OnNOTEChanging(value)
				Me.SendPropertyChanging
				Me._NOTE = value
				Me.SendPropertyChanged("NOTE")
				Me.OnNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CONFIRM", DbType:="DateTime")>  _
	Public Property DATE_CONFIRM() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CONFIRM
		End Get
		Set
			If (Me._DATE_CONFIRM.Equals(value) = false) Then
				Me.OnDATE_CONFIRMChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CONFIRM = value
				Me.SendPropertyChanged("DATE_CONFIRM")
				Me.OnDATE_CONFIRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCEPT_FORMULA_ID", DbType:="Int")>  _
	Public Property ACCEPT_FORMULA_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ACCEPT_FORMULA_ID
		End Get
		Set
			If (Me._ACCEPT_FORMULA_ID.Equals(value) = false) Then
				Me.OnACCEPT_FORMULA_IDChanging(value)
				Me.SendPropertyChanging
				Me._ACCEPT_FORMULA_ID = value
				Me.SendPropertyChanged("ACCEPT_FORMULA_ID")
				Me.OnACCEPT_FORMULA_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCEPT_FORMULA", DbType:="NVarChar(MAX)")>  _
	Public Property ACCEPT_FORMULA() As String
		Get
			Return Me._ACCEPT_FORMULA
		End Get
		Set
			If (String.Equals(Me._ACCEPT_FORMULA, value) = false) Then
				Me.OnACCEPT_FORMULAChanging(value)
				Me.SendPropertyChanging
				Me._ACCEPT_FORMULA = value
				Me.SendPropertyChanged("ACCEPT_FORMULA")
				Me.OnACCEPT_FORMULAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCEPT_FORMULA_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property ACCEPT_FORMULA_NOTE() As String
		Get
			Return Me._ACCEPT_FORMULA_NOTE
		End Get
		Set
			If (String.Equals(Me._ACCEPT_FORMULA_NOTE, value) = false) Then
				Me.OnACCEPT_FORMULA_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._ACCEPT_FORMULA_NOTE = value
				Me.SendPropertyChanged("ACCEPT_FORMULA_NOTE")
				Me.OnACCEPT_FORMULA_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD_GROUP_ID", DbType:="Int")>  _
	Public Property RGTTPCD_GROUP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._RGTTPCD_GROUP_ID
		End Get
		Set
			If (Me._RGTTPCD_GROUP_ID.Equals(value) = false) Then
				Me.OnRGTTPCD_GROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD_GROUP_ID = value
				Me.SendPropertyChanged("RGTTPCD_GROUP_ID")
				Me.OnRGTTPCD_GROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD_GROUP", DbType:="NVarChar(MAX)")>  _
	Public Property RGTTPCD_GROUP() As String
		Get
			Return Me._RGTTPCD_GROUP
		End Get
		Set
			If (String.Equals(Me._RGTTPCD_GROUP, value) = false) Then
				Me.OnRGTTPCD_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD_GROUP = value
				Me.SendPropertyChanged("RGTTPCD_GROUP")
				Me.OnRGTTPCD_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD_GROUP_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property RGTTPCD_GROUP_ENG() As String
		Get
			Return Me._RGTTPCD_GROUP_ENG
		End Get
		Set
			If (String.Equals(Me._RGTTPCD_GROUP_ENG, value) = false) Then
				Me.OnRGTTPCD_GROUP_ENGChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD_GROUP_ENG = value
				Me.SendPropertyChanged("RGTTPCD_GROUP_ENG")
				Me.OnRGTTPCD_GROUP_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_REQ", DbType:="DateTime")>  _
	Public Property DATE_REQ() As System.Nullable(Of Date)
		Get
			Return Me._DATE_REQ
		End Get
		Set
			If (Me._DATE_REQ.Equals(value) = false) Then
				Me.OnDATE_REQChanging(value)
				Me.SendPropertyChanging
				Me._DATE_REQ = value
				Me.SendPropertyChanged("DATE_REQ")
				Me.OnDATE_REQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_REQ_ID", DbType:="Int")>  _
	Public Property OFF_REQ_ID() As System.Nullable(Of Integer)
		Get
			Return Me._OFF_REQ_ID
		End Get
		Set
			If (Me._OFF_REQ_ID.Equals(value) = false) Then
				Me.OnOFF_REQ_IDChanging(value)
				Me.SendPropertyChanging
				Me._OFF_REQ_ID = value
				Me.SendPropertyChanged("OFF_REQ_ID")
				Me.OnOFF_REQ_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_REQ", DbType:="NVarChar(MAX)")>  _
	Public Property OFF_REQ() As String
		Get
			Return Me._OFF_REQ
		End Get
		Set
			If (String.Equals(Me._OFF_REQ, value) = false) Then
				Me.OnOFF_REQChanging(value)
				Me.SendPropertyChanging
				Me._OFF_REQ = value
				Me.SendPropertyChanged("OFF_REQ")
				Me.OnOFF_REQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_OFFER", DbType:="DateTime")>  _
	Public Property DATE_OFFER() As System.Nullable(Of Date)
		Get
			Return Me._DATE_OFFER
		End Get
		Set
			If (Me._DATE_OFFER.Equals(value) = false) Then
				Me.OnDATE_OFFERChanging(value)
				Me.SendPropertyChanging
				Me._DATE_OFFER = value
				Me.SendPropertyChanged("DATE_OFFER")
				Me.OnDATE_OFFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE_OFFER", DbType:="NVarChar(MAX)")>  _
	Public Property NOTE_OFFER() As String
		Get
			Return Me._NOTE_OFFER
		End Get
		Set
			If (String.Equals(Me._NOTE_OFFER, value) = false) Then
				Me.OnNOTE_OFFERChanging(value)
				Me.SendPropertyChanging
				Me._NOTE_OFFER = value
				Me.SendPropertyChanged("NOTE_OFFER")
				Me.OnNOTE_OFFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_OFFER_ID", DbType:="Int")>  _
	Public Property OFF_OFFER_ID() As System.Nullable(Of Integer)
		Get
			Return Me._OFF_OFFER_ID
		End Get
		Set
			If (Me._OFF_OFFER_ID.Equals(value) = false) Then
				Me.OnOFF_OFFER_IDChanging(value)
				Me.SendPropertyChanging
				Me._OFF_OFFER_ID = value
				Me.SendPropertyChanged("OFF_OFFER_ID")
				Me.OnOFF_OFFER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_OFFER", DbType:="NVarChar(MAX)")>  _
	Public Property OFF_OFFER() As String
		Get
			Return Me._OFF_OFFER
		End Get
		Set
			If (String.Equals(Me._OFF_OFFER, value) = false) Then
				Me.OnOFF_OFFERChanging(value)
				Me.SendPropertyChanging
				Me._OFF_OFFER = value
				Me.SendPropertyChanged("OFF_OFFER")
				Me.OnOFF_OFFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_APP", DbType:="DateTime")>  _
	Public Property DATE_APP() As System.Nullable(Of Date)
		Get
			Return Me._DATE_APP
		End Get
		Set
			If (Me._DATE_APP.Equals(value) = false) Then
				Me.OnDATE_APPChanging(value)
				Me.SendPropertyChanging
				Me._DATE_APP = value
				Me.SendPropertyChanged("DATE_APP")
				Me.OnDATE_APPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE_APP", DbType:="NVarChar(MAX)")>  _
	Public Property NOTE_APP() As String
		Get
			Return Me._NOTE_APP
		End Get
		Set
			If (String.Equals(Me._NOTE_APP, value) = false) Then
				Me.OnNOTE_APPChanging(value)
				Me.SendPropertyChanging
				Me._NOTE_APP = value
				Me.SendPropertyChanged("NOTE_APP")
				Me.OnNOTE_APPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_APP_ID", DbType:="Int")>  _
	Public Property OFF_APP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._OFF_APP_ID
		End Get
		Set
			If (Me._OFF_APP_ID.Equals(value) = false) Then
				Me.OnOFF_APP_IDChanging(value)
				Me.SendPropertyChanging
				Me._OFF_APP_ID = value
				Me.SendPropertyChanged("OFF_APP_ID")
				Me.OnOFF_APP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_APP", DbType:="NVarChar(MAX)")>  _
	Public Property OFF_APP() As String
		Get
			Return Me._OFF_APP
		End Get
		Set
			If (String.Equals(Me._OFF_APP, value) = false) Then
				Me.OnOFF_APPChanging(value)
				Me.SendPropertyChanging
				Me._OFF_APP = value
				Me.SendPropertyChanged("OFF_APP")
				Me.OnOFF_APPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE_EDIT", DbType:="NVarChar(MAX)")>  _
	Public Property NOTE_EDIT() As String
		Get
			Return Me._NOTE_EDIT
		End Get
		Set
			If (String.Equals(Me._NOTE_EDIT, value) = false) Then
				Me.OnNOTE_EDITChanging(value)
				Me.SendPropertyChanging
				Me._NOTE_EDIT = value
				Me.SendPropertyChanged("NOTE_EDIT")
				Me.OnNOTE_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(13)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(13)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MENU_GROUP", DbType:="Int")>  _
	Public Property MENU_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._MENU_GROUP
		End Get
		Set
			If (Me._MENU_GROUP.Equals(value) = false) Then
				Me.OnMENU_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._MENU_GROUP = value
				Me.SendPropertyChanged("MENU_GROUP")
				Me.OnMENU_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_LCT", DbType:="Int")>  _
	Public Property IDA_LCT() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_LCT
		End Get
		Set
			If (Me._IDA_LCT.Equals(value) = false) Then
				Me.OnIDA_LCTChanging(value)
				Me.SendPropertyChanging
				Me._IDA_LCT = value
				Me.SendPropertyChanged("IDA_LCT")
				Me.OnIDA_LCTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID_LCN", DbType:="Int")>  _
	Public Property TR_ID_LCN() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID_LCN
		End Get
		Set
			If (Me._TR_ID_LCN.Equals(value) = false) Then
				Me.OnTR_ID_LCNChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID_LCN = value
				Me.SendPropertyChanged("TR_ID_LCN")
				Me.OnTR_ID_LCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_LCN", DbType:="Int")>  _
	Public Property IDA_LCN() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_LCN
		End Get
		Set
			If (Me._IDA_LCN.Equals(value) = false) Then
				Me.OnIDA_LCNChanging(value)
				Me.SendPropertyChanging
				Me._IDA_LCN = value
				Me.SendPropertyChanged("IDA_LCN")
				Me.OnIDA_LCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DD_HERB_NAME_ID", DbType:="Int")>  _
	Public Property DD_HERB_NAME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DD_HERB_NAME_ID
		End Get
		Set
			If (Me._DD_HERB_NAME_ID.Equals(value) = false) Then
				Me.OnDD_HERB_NAME_IDChanging(value)
				Me.SendPropertyChanging
				Me._DD_HERB_NAME_ID = value
				Me.SendPropertyChanged("DD_HERB_NAME_ID")
				Me.OnDD_HERB_NAME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DDHERB", DbType:="Int")>  _
	Public Property DDHERB() As System.Nullable(Of Integer)
		Get
			Return Me._DDHERB
		End Get
		Set
			If (Me._DDHERB.Equals(value) = false) Then
				Me.OnDDHERBChanging(value)
				Me.SendPropertyChanging
				Me._DDHERB = value
				Me.SendPropertyChanged("DDHERB")
				Me.OnDDHERBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_FULL", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_FULL() As String
		Get
			Return Me._RCVNO_FULL
		End Get
		Set
			If (String.Equals(Me._RCVNO_FULL, value) = false) Then
				Me.OnRCVNO_FULLChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_FULL = value
				Me.SendPropertyChanged("RCVNO_FULL")
				Me.OnRCVNO_FULLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID_JJ", DbType:="Int")>  _
	Public Property TR_ID_JJ() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID_JJ
		End Get
		Set
			If (Me._TR_ID_JJ.Equals(value) = false) Then
				Me.OnTR_ID_JJChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID_JJ = value
				Me.SendPropertyChanged("TR_ID_JJ")
				Me.OnTR_ID_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD_ID", DbType:="Int")>  _
	Public Property RGTTPCD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._RGTTPCD_ID
		End Get
		Set
			If (Me._RGTTPCD_ID.Equals(value) = false) Then
				Me.OnRGTTPCD_IDChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD_ID = value
				Me.SendPropertyChanged("RGTTPCD_ID")
				Me.OnRGTTPCD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD", DbType:="NVarChar(MAX)")>  _
	Public Property RGTTPCD() As String
		Get
			Return Me._RGTTPCD
		End Get
		Set
			If (String.Equals(Me._RGTTPCD, value) = false) Then
				Me.OnRGTTPCDChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD = value
				Me.SendPropertyChanged("RGTTPCD")
				Me.OnRGTTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTNO_JJ", DbType:="NVarChar(MAX)")>  _
	Public Property RGTNO_JJ() As String
		Get
			Return Me._RGTNO_JJ
		End Get
		Set
			If (String.Equals(Me._RGTNO_JJ, value) = false) Then
				Me.OnRGTNO_JJChanging(value)
				Me.SendPropertyChanging
				Me._RGTNO_JJ = value
				Me.SendPropertyChanged("RGTNO_JJ")
				Me.OnRGTNO_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTNO_FULL", DbType:="NVarChar(MAX)")>  _
	Public Property RGTNO_FULL() As String
		Get
			Return Me._RGTNO_FULL
		End Get
		Set
			If (String.Equals(Me._RGTNO_FULL, value) = false) Then
				Me.OnRGTNO_FULLChanging(value)
				Me.SendPropertyChanging
				Me._RGTNO_FULL = value
				Me.SendPropertyChanged("RGTNO_FULL")
				Me.OnRGTNO_FULLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_YEAR", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_YEAR() As String
		Get
			Return Me._DATE_YEAR
		End Get
		Set
			If (String.Equals(Me._DATE_YEAR, value) = false) Then
				Me.OnDATE_YEARChanging(value)
				Me.SendPropertyChanging
				Me._DATE_YEAR = value
				Me.SendPropertyChanged("DATE_YEAR")
				Me.OnDATE_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_CONFIRM", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_CONFIRM() As String
		Get
			Return Me._NAME_CONFIRM
		End Get
		Set
			If (String.Equals(Me._NAME_CONFIRM, value) = false) Then
				Me.OnNAME_CONFIRMChanging(value)
				Me.SendPropertyChanging
				Me._NAME_CONFIRM = value
				Me.SendPropertyChanged("NAME_CONFIRM")
				Me.OnNAME_CONFIRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_ID", DbType:="Int")>  _
	Public Property ML_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ML_ID
		End Get
		Set
			If (Me._ML_ID.Equals(value) = false) Then
				Me.OnML_IDChanging(value)
				Me.SendPropertyChanging
				Me._ML_ID = value
				Me.SendPropertyChanged("ML_ID")
				Me.OnML_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ML_NAME() As String
		Get
			Return Me._ML_NAME
		End Get
		Set
			If (String.Equals(Me._ML_NAME, value) = false) Then
				Me.OnML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ML_NAME = value
				Me.SendPropertyChanged("ML_NAME")
				Me.OnML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_PAY", DbType:="Decimal(18,2)")>  _
	Public Property ML_PAY() As System.Nullable(Of Decimal)
		Get
			Return Me._ML_PAY
		End Get
		Set
			If (Me._ML_PAY.Equals(value) = false) Then
				Me.OnML_PAYChanging(value)
				Me.SendPropertyChanging
				Me._ML_PAY = value
				Me.SendPropertyChanged("ML_PAY")
				Me.OnML_PAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_MINUS", DbType:="Int")>  _
	Public Property ML_MINUS() As System.Nullable(Of Integer)
		Get
			Return Me._ML_MINUS
		End Get
		Set
			If (Me._ML_MINUS.Equals(value) = false) Then
				Me.OnML_MINUSChanging(value)
				Me.SendPropertyChanging
				Me._ML_MINUS = value
				Me.SendPropertyChanged("ML_MINUS")
				Me.OnML_MINUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_SUM", DbType:="Decimal(18,2)")>  _
	Public Property ML_SUM() As System.Nullable(Of Decimal)
		Get
			Return Me._ML_SUM
		End Get
		Set
			If (Me._ML_SUM.Equals(value) = false) Then
				Me.OnML_SUMChanging(value)
				Me.SendPropertyChanging
				Me._ML_SUM = value
				Me.SendPropertyChanged("ML_SUM")
				Me.OnML_SUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_KEY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ML_KEY_NAME() As String
		Get
			Return Me._ML_KEY_NAME
		End Get
		Set
			If (String.Equals(Me._ML_KEY_NAME, value) = false) Then
				Me.OnML_KEY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ML_KEY_NAME = value
				Me.SendPropertyChanged("ML_KEY_NAME")
				Me.OnML_KEY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_KEY_DATE", DbType:="DateTime")>  _
	Public Property ML_KEY_DATE() As System.Nullable(Of Date)
		Get
			Return Me._ML_KEY_DATE
		End Get
		Set
			If (Me._ML_KEY_DATE.Equals(value) = false) Then
				Me.OnML_KEY_DATEChanging(value)
				Me.SendPropertyChanging
				Me._ML_KEY_DATE = value
				Me.SendPropertyChanged("ML_KEY_DATE")
				Me.OnML_KEY_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_PAY1", DbType:="DateTime")>  _
	Public Property DATE_PAY1() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PAY1
		End Get
		Set
			If (Me._DATE_PAY1.Equals(value) = false) Then
				Me.OnDATE_PAY1Changing(value)
				Me.SendPropertyChanging
				Me._DATE_PAY1 = value
				Me.SendPropertyChanged("DATE_PAY1")
				Me.OnDATE_PAY1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_PAY2", DbType:="DateTime")>  _
	Public Property DATE_PAY2() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PAY2
		End Get
		Set
			If (Me._DATE_PAY2.Equals(value) = false) Then
				Me.OnDATE_PAY2Changing(value)
				Me.SendPropertyChanging
				Me._DATE_PAY2 = value
				Me.SendPropertyChanged("DATE_PAY2")
				Me.OnDATE_PAY2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INOFFICE_STAFF_ID", DbType:="Int")>  _
	Public Property INOFFICE_STAFF_ID() As System.Nullable(Of Integer)
		Get
			Return Me._INOFFICE_STAFF_ID
		End Get
		Set
			If (Me._INOFFICE_STAFF_ID.Equals(value) = false) Then
				Me.OnINOFFICE_STAFF_IDChanging(value)
				Me.SendPropertyChanging
				Me._INOFFICE_STAFF_ID = value
				Me.SendPropertyChanged("INOFFICE_STAFF_ID")
				Me.OnINOFFICE_STAFF_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INOFFICE_STAFF_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property INOFFICE_STAFF_CITIZEN_ID() As String
		Get
			Return Me._INOFFICE_STAFF_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._INOFFICE_STAFF_CITIZEN_ID, value) = false) Then
				Me.OnINOFFICE_STAFF_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._INOFFICE_STAFF_CITIZEN_ID = value
				Me.SendPropertyChanged("INOFFICE_STAFF_CITIZEN_ID")
				Me.OnINOFFICE_STAFF_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VALIDATE_ID", DbType:="Int")>  _
	Public Property VALIDATE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._VALIDATE_ID
		End Get
		Set
			If (Me._VALIDATE_ID.Equals(value) = false) Then
				Me.OnVALIDATE_IDChanging(value)
				Me.SendPropertyChanging
				Me._VALIDATE_ID = value
				Me.SendPropertyChanged("VALIDATE_ID")
				Me.OnVALIDATE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VALIDATE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property VALIDATE_NAME() As String
		Get
			Return Me._VALIDATE_NAME
		End Get
		Set
			If (String.Equals(Me._VALIDATE_NAME, value) = false) Then
				Me.OnVALIDATE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._VALIDATE_NAME = value
				Me.SendPropertyChanged("VALIDATE_NAME")
				Me.OnVALIDATE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VALIDATE_DATE", DbType:="DateTime")>  _
	Public Property VALIDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._VALIDATE_DATE
		End Get
		Set
			If (Me._VALIDATE_DATE.Equals(value) = false) Then
				Me.OnVALIDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._VALIDATE_DATE = value
				Me.SendPropertyChanged("VALIDATE_DATE")
				Me.OnVALIDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_NAME_DETAIL_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_NAME_DETAIL_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DD_HERB_NAME_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _TYPE_ID As System.Nullable(Of Integer)
	
	Private _TYPE_NAME As String
	
	Private _TYPE_SUB_ID As System.Nullable(Of Integer)
	
	Private _TYPE_SUB_NAME As String
	
	Private _NAME_THAI As String
	
	Private _NAME_ENG As String
	
	Private _NAME_OTHER As String
	
	Private _STYPE_ID As System.Nullable(Of Integer)
	
	Private _STYPE_NAME As String
	
	Private _RECIPE_NAME As String
	
	Private _ACCOUNT_NO As System.Nullable(Of Integer)
	
	Private _ARTICLE_NO As System.Nullable(Of Integer)
	
	Private _PRODUCT_JJ As String
	
	Private _NATURE As String
	
	Private _MANUFAC_ID As System.Nullable(Of Integer)
	
	Private _MANUFAC_NAME As String
	
	Private _PRODUCT_PROCESS As String
	
	Private _WEIGHT_TABLE_CAP As String
	
	Private _WEIGHT_TABLE_CAP_UNIT_ID As System.Nullable(Of Integer)
	
	Private _WEIGHT_TABLE_CAP_UNIT_NAME As String
	
	Private _SIZE_PACK As String
	
	Private _SYNDROME_ID As System.Nullable(Of Integer)
	
	Private _SYNDROME_NAME As String
	
	Private _PROPERTIES As String
	
	Private _SIZE_USE As String
	
	Private _HOW_USE As String
	
	Private _EATTING_ID As System.Nullable(Of Integer)
	
	Private _EATTING_NAME As String
	
	Private _EATING_CONDITION_ID As System.Nullable(Of Integer)
	
	Private _EATING_CONDITION_NAME As String
	
	Private _STORAGE_ID As System.Nullable(Of Integer)
	
	Private _STORAGE_NAME As String
	
	Private _TREATMENT As String
	
	Private _TREATMENT_AGE As String
	
	Private _CONTRAINDICATION_ID As System.Nullable(Of Integer)
	
	Private _CONTRAINDICATION_NAME As String
	
	Private _WARNING_ID As System.Nullable(Of Integer)
	
	Private _WARNING_NAME As String
	
	Private _CAUTION_ID As System.Nullable(Of Integer)
	
	Private _CAUTION_NAME As String
	
	Private _ADV_REACTIVETION_ID As System.Nullable(Of Integer)
	
	Private _ADV_REACTIVETION_NAME As String
	
	Private _SALE_CHANNEL_ID As System.Nullable(Of Integer)
	
	Private _SALE_CHANNEL_NAME As String
	
	Private _NOTE As String
	
	Private _ACTIVEFACT As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDD_HERB_NAME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDD_HERB_NAME_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_SUB_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_SUB_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_SUB_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_SUB_NAMEChanged()
    End Sub
    Partial Private Sub OnNAME_THAIChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_THAIChanged()
    End Sub
    Partial Private Sub OnNAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ENGChanged()
    End Sub
    Partial Private Sub OnNAME_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_OTHERChanged()
    End Sub
    Partial Private Sub OnSTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTYPE_IDChanged()
    End Sub
    Partial Private Sub OnSTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTYPE_NAMEChanged()
    End Sub
    Partial Private Sub OnRECIPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRECIPE_NAMEChanged()
    End Sub
    Partial Private Sub OnACCOUNT_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACCOUNT_NOChanged()
    End Sub
    Partial Private Sub OnARTICLE_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnARTICLE_NOChanged()
    End Sub
    Partial Private Sub OnPRODUCT_JJChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_JJChanged()
    End Sub
    Partial Private Sub OnNATUREChanging(value As String)
    End Sub
    Partial Private Sub OnNATUREChanged()
    End Sub
    Partial Private Sub OnMANUFAC_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMANUFAC_IDChanged()
    End Sub
    Partial Private Sub OnMANUFAC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFAC_NAMEChanged()
    End Sub
    Partial Private Sub OnPRODUCT_PROCESSChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_PROCESSChanged()
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAPChanging(value As String)
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAPChanged()
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_IDChanged()
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWEIGHT_TABLE_CAP_UNIT_NAMEChanged()
    End Sub
    Partial Private Sub OnSIZE_PACKChanging(value As String)
    End Sub
    Partial Private Sub OnSIZE_PACKChanged()
    End Sub
    Partial Private Sub OnSYNDROME_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYNDROME_IDChanged()
    End Sub
    Partial Private Sub OnSYNDROME_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSYNDROME_NAMEChanged()
    End Sub
    Partial Private Sub OnPROPERTIESChanging(value As String)
    End Sub
    Partial Private Sub OnPROPERTIESChanged()
    End Sub
    Partial Private Sub OnSIZE_USEChanging(value As String)
    End Sub
    Partial Private Sub OnSIZE_USEChanged()
    End Sub
    Partial Private Sub OnHOW_USEChanging(value As String)
    End Sub
    Partial Private Sub OnHOW_USEChanged()
    End Sub
    Partial Private Sub OnEATTING_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEATTING_IDChanged()
    End Sub
    Partial Private Sub OnEATTING_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEATTING_NAMEChanged()
    End Sub
    Partial Private Sub OnEATING_CONDITION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEATING_CONDITION_IDChanged()
    End Sub
    Partial Private Sub OnEATING_CONDITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnEATING_CONDITION_NAMEChanged()
    End Sub
    Partial Private Sub OnSTORAGE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTORAGE_IDChanged()
    End Sub
    Partial Private Sub OnSTORAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTORAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnTREATMENTChanging(value As String)
    End Sub
    Partial Private Sub OnTREATMENTChanged()
    End Sub
    Partial Private Sub OnTREATMENT_AGEChanging(value As String)
    End Sub
    Partial Private Sub OnTREATMENT_AGEChanged()
    End Sub
    Partial Private Sub OnCONTRAINDICATION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCONTRAINDICATION_IDChanged()
    End Sub
    Partial Private Sub OnCONTRAINDICATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCONTRAINDICATION_NAMEChanged()
    End Sub
    Partial Private Sub OnWARNING_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWARNING_IDChanged()
    End Sub
    Partial Private Sub OnWARNING_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWARNING_NAMEChanged()
    End Sub
    Partial Private Sub OnCAUTION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAUTION_IDChanged()
    End Sub
    Partial Private Sub OnCAUTION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCAUTION_NAMEChanged()
    End Sub
    Partial Private Sub OnADV_REACTIVETION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnADV_REACTIVETION_IDChanged()
    End Sub
    Partial Private Sub OnADV_REACTIVETION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnADV_REACTIVETION_NAMEChanged()
    End Sub
    Partial Private Sub OnSALE_CHANNEL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSALE_CHANNEL_IDChanged()
    End Sub
    Partial Private Sub OnSALE_CHANNEL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSALE_CHANNEL_NAMEChanged()
    End Sub
    Partial Private Sub OnNOTEChanging(value As String)
    End Sub
    Partial Private Sub OnNOTEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DD_HERB_NAME_ID", DbType:="Int")>  _
	Public Property DD_HERB_NAME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DD_HERB_NAME_ID
		End Get
		Set
			If (Me._DD_HERB_NAME_ID.Equals(value) = false) Then
				Me.OnDD_HERB_NAME_IDChanging(value)
				Me.SendPropertyChanging
				Me._DD_HERB_NAME_ID = value
				Me.SendPropertyChanged("DD_HERB_NAME_ID")
				Me.OnDD_HERB_NAME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_ID", DbType:="Int")>  _
	Public Property TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_ID
		End Get
		Set
			If (Me._TYPE_ID.Equals(value) = false) Then
				Me.OnTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_ID = value
				Me.SendPropertyChanged("TYPE_ID")
				Me.OnTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_NAME() As String
		Get
			Return Me._TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_NAME, value) = false) Then
				Me.OnTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_NAME = value
				Me.SendPropertyChanged("TYPE_NAME")
				Me.OnTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SUB_ID", DbType:="Int")>  _
	Public Property TYPE_SUB_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_SUB_ID
		End Get
		Set
			If (Me._TYPE_SUB_ID.Equals(value) = false) Then
				Me.OnTYPE_SUB_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SUB_ID = value
				Me.SendPropertyChanged("TYPE_SUB_ID")
				Me.OnTYPE_SUB_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SUB_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_SUB_NAME() As String
		Get
			Return Me._TYPE_SUB_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_SUB_NAME, value) = false) Then
				Me.OnTYPE_SUB_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SUB_NAME = value
				Me.SendPropertyChanged("TYPE_SUB_NAME")
				Me.OnTYPE_SUB_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_THAI", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_THAI() As String
		Get
			Return Me._NAME_THAI
		End Get
		Set
			If (String.Equals(Me._NAME_THAI, value) = false) Then
				Me.OnNAME_THAIChanging(value)
				Me.SendPropertyChanging
				Me._NAME_THAI = value
				Me.SendPropertyChanged("NAME_THAI")
				Me.OnNAME_THAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ENG() As String
		Get
			Return Me._NAME_ENG
		End Get
		Set
			If (String.Equals(Me._NAME_ENG, value) = false) Then
				Me.OnNAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ENG = value
				Me.SendPropertyChanged("NAME_ENG")
				Me.OnNAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_OTHER() As String
		Get
			Return Me._NAME_OTHER
		End Get
		Set
			If (String.Equals(Me._NAME_OTHER, value) = false) Then
				Me.OnNAME_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._NAME_OTHER = value
				Me.SendPropertyChanged("NAME_OTHER")
				Me.OnNAME_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYPE_ID", DbType:="Int")>  _
	Public Property STYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STYPE_ID
		End Get
		Set
			If (Me._STYPE_ID.Equals(value) = false) Then
				Me.OnSTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._STYPE_ID = value
				Me.SendPropertyChanged("STYPE_ID")
				Me.OnSTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STYPE_NAME() As String
		Get
			Return Me._STYPE_NAME
		End Get
		Set
			If (String.Equals(Me._STYPE_NAME, value) = false) Then
				Me.OnSTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STYPE_NAME = value
				Me.SendPropertyChanged("STYPE_NAME")
				Me.OnSTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECIPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property RECIPE_NAME() As String
		Get
			Return Me._RECIPE_NAME
		End Get
		Set
			If (String.Equals(Me._RECIPE_NAME, value) = false) Then
				Me.OnRECIPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._RECIPE_NAME = value
				Me.SendPropertyChanged("RECIPE_NAME")
				Me.OnRECIPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_NO", DbType:="Int")>  _
	Public Property ACCOUNT_NO() As System.Nullable(Of Integer)
		Get
			Return Me._ACCOUNT_NO
		End Get
		Set
			If (Me._ACCOUNT_NO.Equals(value) = false) Then
				Me.OnACCOUNT_NOChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_NO = value
				Me.SendPropertyChanged("ACCOUNT_NO")
				Me.OnACCOUNT_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ARTICLE_NO", DbType:="Int")>  _
	Public Property ARTICLE_NO() As System.Nullable(Of Integer)
		Get
			Return Me._ARTICLE_NO
		End Get
		Set
			If (Me._ARTICLE_NO.Equals(value) = false) Then
				Me.OnARTICLE_NOChanging(value)
				Me.SendPropertyChanging
				Me._ARTICLE_NO = value
				Me.SendPropertyChanged("ARTICLE_NO")
				Me.OnARTICLE_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_JJ", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_JJ() As String
		Get
			Return Me._PRODUCT_JJ
		End Get
		Set
			If (String.Equals(Me._PRODUCT_JJ, value) = false) Then
				Me.OnPRODUCT_JJChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_JJ = value
				Me.SendPropertyChanged("PRODUCT_JJ")
				Me.OnPRODUCT_JJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATURE", DbType:="NVarChar(MAX)")>  _
	Public Property NATURE() As String
		Get
			Return Me._NATURE
		End Get
		Set
			If (String.Equals(Me._NATURE, value) = false) Then
				Me.OnNATUREChanging(value)
				Me.SendPropertyChanging
				Me._NATURE = value
				Me.SendPropertyChanged("NATURE")
				Me.OnNATUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFAC_ID", DbType:="Int")>  _
	Public Property MANUFAC_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MANUFAC_ID
		End Get
		Set
			If (Me._MANUFAC_ID.Equals(value) = false) Then
				Me.OnMANUFAC_IDChanging(value)
				Me.SendPropertyChanging
				Me._MANUFAC_ID = value
				Me.SendPropertyChanged("MANUFAC_ID")
				Me.OnMANUFAC_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFAC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFAC_NAME() As String
		Get
			Return Me._MANUFAC_NAME
		End Get
		Set
			If (String.Equals(Me._MANUFAC_NAME, value) = false) Then
				Me.OnMANUFAC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MANUFAC_NAME = value
				Me.SendPropertyChanged("MANUFAC_NAME")
				Me.OnMANUFAC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_PROCESS", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_PROCESS() As String
		Get
			Return Me._PRODUCT_PROCESS
		End Get
		Set
			If (String.Equals(Me._PRODUCT_PROCESS, value) = false) Then
				Me.OnPRODUCT_PROCESSChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_PROCESS = value
				Me.SendPropertyChanged("PRODUCT_PROCESS")
				Me.OnPRODUCT_PROCESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_TABLE_CAP", DbType:="NVarChar(MAX)")>  _
	Public Property WEIGHT_TABLE_CAP() As String
		Get
			Return Me._WEIGHT_TABLE_CAP
		End Get
		Set
			If (String.Equals(Me._WEIGHT_TABLE_CAP, value) = false) Then
				Me.OnWEIGHT_TABLE_CAPChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_TABLE_CAP = value
				Me.SendPropertyChanged("WEIGHT_TABLE_CAP")
				Me.OnWEIGHT_TABLE_CAPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_TABLE_CAP_UNIT_ID", DbType:="Int")>  _
	Public Property WEIGHT_TABLE_CAP_UNIT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WEIGHT_TABLE_CAP_UNIT_ID
		End Get
		Set
			If (Me._WEIGHT_TABLE_CAP_UNIT_ID.Equals(value) = false) Then
				Me.OnWEIGHT_TABLE_CAP_UNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_TABLE_CAP_UNIT_ID = value
				Me.SendPropertyChanged("WEIGHT_TABLE_CAP_UNIT_ID")
				Me.OnWEIGHT_TABLE_CAP_UNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_TABLE_CAP_UNIT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WEIGHT_TABLE_CAP_UNIT_NAME() As String
		Get
			Return Me._WEIGHT_TABLE_CAP_UNIT_NAME
		End Get
		Set
			If (String.Equals(Me._WEIGHT_TABLE_CAP_UNIT_NAME, value) = false) Then
				Me.OnWEIGHT_TABLE_CAP_UNIT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_TABLE_CAP_UNIT_NAME = value
				Me.SendPropertyChanged("WEIGHT_TABLE_CAP_UNIT_NAME")
				Me.OnWEIGHT_TABLE_CAP_UNIT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_PACK", DbType:="NVarChar(MAX)")>  _
	Public Property SIZE_PACK() As String
		Get
			Return Me._SIZE_PACK
		End Get
		Set
			If (String.Equals(Me._SIZE_PACK, value) = false) Then
				Me.OnSIZE_PACKChanging(value)
				Me.SendPropertyChanging
				Me._SIZE_PACK = value
				Me.SendPropertyChanged("SIZE_PACK")
				Me.OnSIZE_PACKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYNDROME_ID", DbType:="Int")>  _
	Public Property SYNDROME_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYNDROME_ID
		End Get
		Set
			If (Me._SYNDROME_ID.Equals(value) = false) Then
				Me.OnSYNDROME_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYNDROME_ID = value
				Me.SendPropertyChanged("SYNDROME_ID")
				Me.OnSYNDROME_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYNDROME_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SYNDROME_NAME() As String
		Get
			Return Me._SYNDROME_NAME
		End Get
		Set
			If (String.Equals(Me._SYNDROME_NAME, value) = false) Then
				Me.OnSYNDROME_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SYNDROME_NAME = value
				Me.SendPropertyChanged("SYNDROME_NAME")
				Me.OnSYNDROME_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROPERTIES", DbType:="NVarChar(MAX)")>  _
	Public Property PROPERTIES() As String
		Get
			Return Me._PROPERTIES
		End Get
		Set
			If (String.Equals(Me._PROPERTIES, value) = false) Then
				Me.OnPROPERTIESChanging(value)
				Me.SendPropertyChanging
				Me._PROPERTIES = value
				Me.SendPropertyChanged("PROPERTIES")
				Me.OnPROPERTIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_USE", DbType:="NVarChar(MAX)")>  _
	Public Property SIZE_USE() As String
		Get
			Return Me._SIZE_USE
		End Get
		Set
			If (String.Equals(Me._SIZE_USE, value) = false) Then
				Me.OnSIZE_USEChanging(value)
				Me.SendPropertyChanging
				Me._SIZE_USE = value
				Me.SendPropertyChanged("SIZE_USE")
				Me.OnSIZE_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOW_USE", DbType:="NVarChar(MAX)")>  _
	Public Property HOW_USE() As String
		Get
			Return Me._HOW_USE
		End Get
		Set
			If (String.Equals(Me._HOW_USE, value) = false) Then
				Me.OnHOW_USEChanging(value)
				Me.SendPropertyChanging
				Me._HOW_USE = value
				Me.SendPropertyChanged("HOW_USE")
				Me.OnHOW_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATTING_ID", DbType:="Int")>  _
	Public Property EATTING_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EATTING_ID
		End Get
		Set
			If (Me._EATTING_ID.Equals(value) = false) Then
				Me.OnEATTING_IDChanging(value)
				Me.SendPropertyChanging
				Me._EATTING_ID = value
				Me.SendPropertyChanged("EATTING_ID")
				Me.OnEATTING_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATTING_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property EATTING_NAME() As String
		Get
			Return Me._EATTING_NAME
		End Get
		Set
			If (String.Equals(Me._EATTING_NAME, value) = false) Then
				Me.OnEATTING_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._EATTING_NAME = value
				Me.SendPropertyChanged("EATTING_NAME")
				Me.OnEATTING_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATING_CONDITION_ID", DbType:="Int")>  _
	Public Property EATING_CONDITION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EATING_CONDITION_ID
		End Get
		Set
			If (Me._EATING_CONDITION_ID.Equals(value) = false) Then
				Me.OnEATING_CONDITION_IDChanging(value)
				Me.SendPropertyChanging
				Me._EATING_CONDITION_ID = value
				Me.SendPropertyChanged("EATING_CONDITION_ID")
				Me.OnEATING_CONDITION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EATING_CONDITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property EATING_CONDITION_NAME() As String
		Get
			Return Me._EATING_CONDITION_NAME
		End Get
		Set
			If (String.Equals(Me._EATING_CONDITION_NAME, value) = false) Then
				Me.OnEATING_CONDITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._EATING_CONDITION_NAME = value
				Me.SendPropertyChanged("EATING_CONDITION_NAME")
				Me.OnEATING_CONDITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORAGE_ID", DbType:="Int")>  _
	Public Property STORAGE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STORAGE_ID
		End Get
		Set
			If (Me._STORAGE_ID.Equals(value) = false) Then
				Me.OnSTORAGE_IDChanging(value)
				Me.SendPropertyChanging
				Me._STORAGE_ID = value
				Me.SendPropertyChanged("STORAGE_ID")
				Me.OnSTORAGE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STORAGE_NAME() As String
		Get
			Return Me._STORAGE_NAME
		End Get
		Set
			If (String.Equals(Me._STORAGE_NAME, value) = false) Then
				Me.OnSTORAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STORAGE_NAME = value
				Me.SendPropertyChanged("STORAGE_NAME")
				Me.OnSTORAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT", DbType:="NVarChar(MAX)")>  _
	Public Property TREATMENT() As String
		Get
			Return Me._TREATMENT
		End Get
		Set
			If (String.Equals(Me._TREATMENT, value) = false) Then
				Me.OnTREATMENTChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT = value
				Me.SendPropertyChanged("TREATMENT")
				Me.OnTREATMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TREATMENT_AGE", DbType:="NVarChar(MAX)")>  _
	Public Property TREATMENT_AGE() As String
		Get
			Return Me._TREATMENT_AGE
		End Get
		Set
			If (String.Equals(Me._TREATMENT_AGE, value) = false) Then
				Me.OnTREATMENT_AGEChanging(value)
				Me.SendPropertyChanging
				Me._TREATMENT_AGE = value
				Me.SendPropertyChanged("TREATMENT_AGE")
				Me.OnTREATMENT_AGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINDICATION_ID", DbType:="Int")>  _
	Public Property CONTRAINDICATION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CONTRAINDICATION_ID
		End Get
		Set
			If (Me._CONTRAINDICATION_ID.Equals(value) = false) Then
				Me.OnCONTRAINDICATION_IDChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINDICATION_ID = value
				Me.SendPropertyChanged("CONTRAINDICATION_ID")
				Me.OnCONTRAINDICATION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTRAINDICATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CONTRAINDICATION_NAME() As String
		Get
			Return Me._CONTRAINDICATION_NAME
		End Get
		Set
			If (String.Equals(Me._CONTRAINDICATION_NAME, value) = false) Then
				Me.OnCONTRAINDICATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CONTRAINDICATION_NAME = value
				Me.SendPropertyChanged("CONTRAINDICATION_NAME")
				Me.OnCONTRAINDICATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_ID", DbType:="Int")>  _
	Public Property WARNING_ID() As System.Nullable(Of Integer)
		Get
			Return Me._WARNING_ID
		End Get
		Set
			If (Me._WARNING_ID.Equals(value) = false) Then
				Me.OnWARNING_IDChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_ID = value
				Me.SendPropertyChanged("WARNING_ID")
				Me.OnWARNING_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WARNING_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WARNING_NAME() As String
		Get
			Return Me._WARNING_NAME
		End Get
		Set
			If (String.Equals(Me._WARNING_NAME, value) = false) Then
				Me.OnWARNING_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WARNING_NAME = value
				Me.SendPropertyChanged("WARNING_NAME")
				Me.OnWARNING_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUTION_ID", DbType:="Int")>  _
	Public Property CAUTION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CAUTION_ID
		End Get
		Set
			If (Me._CAUTION_ID.Equals(value) = false) Then
				Me.OnCAUTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._CAUTION_ID = value
				Me.SendPropertyChanged("CAUTION_ID")
				Me.OnCAUTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAUTION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CAUTION_NAME() As String
		Get
			Return Me._CAUTION_NAME
		End Get
		Set
			If (String.Equals(Me._CAUTION_NAME, value) = false) Then
				Me.OnCAUTION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CAUTION_NAME = value
				Me.SendPropertyChanged("CAUTION_NAME")
				Me.OnCAUTION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADV_REACTIVETION_ID", DbType:="Int")>  _
	Public Property ADV_REACTIVETION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._ADV_REACTIVETION_ID
		End Get
		Set
			If (Me._ADV_REACTIVETION_ID.Equals(value) = false) Then
				Me.OnADV_REACTIVETION_IDChanging(value)
				Me.SendPropertyChanging
				Me._ADV_REACTIVETION_ID = value
				Me.SendPropertyChanged("ADV_REACTIVETION_ID")
				Me.OnADV_REACTIVETION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADV_REACTIVETION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ADV_REACTIVETION_NAME() As String
		Get
			Return Me._ADV_REACTIVETION_NAME
		End Get
		Set
			If (String.Equals(Me._ADV_REACTIVETION_NAME, value) = false) Then
				Me.OnADV_REACTIVETION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ADV_REACTIVETION_NAME = value
				Me.SendPropertyChanged("ADV_REACTIVETION_NAME")
				Me.OnADV_REACTIVETION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_CHANNEL_ID", DbType:="Int")>  _
	Public Property SALE_CHANNEL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SALE_CHANNEL_ID
		End Get
		Set
			If (Me._SALE_CHANNEL_ID.Equals(value) = false) Then
				Me.OnSALE_CHANNEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._SALE_CHANNEL_ID = value
				Me.SendPropertyChanged("SALE_CHANNEL_ID")
				Me.OnSALE_CHANNEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_CHANNEL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_CHANNEL_NAME() As String
		Get
			Return Me._SALE_CHANNEL_NAME
		End Get
		Set
			If (String.Equals(Me._SALE_CHANNEL_NAME, value) = false) Then
				Me.OnSALE_CHANNEL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_CHANNEL_NAME = value
				Me.SendPropertyChanged("SALE_CHANNEL_NAME")
				Me.OnSALE_CHANNEL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property NOTE() As String
		Get
			Return Me._NOTE
		End Get
		Set
			If (String.Equals(Me._NOTE, value) = false) Then
				Me.OnNOTEChanging(value)
				Me.SendPropertyChanging
				Me._NOTE = value
				Me.SendPropertyChanged("NOTE")
				Me.OnNOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Bit")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_HERB_RECIPE_PRODUCT_JJ")>  _
Partial Public Class MAS_TABEAN_HERB_RECIPE_PRODUCT_JJ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DD_HERB_NAME_PRODUCT_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _NAME_FAKE As String
	
	Private _NAME_REAL As String
	
	Private _TYPE As String
	
	Private _TYPE_PERSON As System.Nullable(Of Integer)
	
	Private _DUCUMENT_NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ACTIVE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDD_HERB_NAME_PRODUCT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDD_HERB_NAME_PRODUCT_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnNAME_FAKEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_FAKEChanged()
    End Sub
    Partial Private Sub OnNAME_REALChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_REALChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnTYPE_PERSONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PERSONChanged()
    End Sub
    Partial Private Sub OnDUCUMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDUCUMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DD_HERB_NAME_PRODUCT_ID", DbType:="Int")>  _
	Public Property DD_HERB_NAME_PRODUCT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DD_HERB_NAME_PRODUCT_ID
		End Get
		Set
			If (Me._DD_HERB_NAME_PRODUCT_ID.Equals(value) = false) Then
				Me.OnDD_HERB_NAME_PRODUCT_IDChanging(value)
				Me.SendPropertyChanging
				Me._DD_HERB_NAME_PRODUCT_ID = value
				Me.SendPropertyChanged("DD_HERB_NAME_PRODUCT_ID")
				Me.OnDD_HERB_NAME_PRODUCT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_FAKE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_FAKE() As String
		Get
			Return Me._NAME_FAKE
		End Get
		Set
			If (String.Equals(Me._NAME_FAKE, value) = false) Then
				Me.OnNAME_FAKEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_FAKE = value
				Me.SendPropertyChanged("NAME_FAKE")
				Me.OnNAME_FAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_REAL", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_REAL() As String
		Get
			Return Me._NAME_REAL
		End Get
		Set
			If (String.Equals(Me._NAME_REAL, value) = false) Then
				Me.OnNAME_REALChanging(value)
				Me.SendPropertyChanging
				Me._NAME_REAL = value
				Me.SendPropertyChanged("NAME_REAL")
				Me.OnNAME_REALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NChar(10)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PERSON", DbType:="Int")>  _
	Public Property TYPE_PERSON() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PERSON
		End Get
		Set
			If (Me._TYPE_PERSON.Equals(value) = false) Then
				Me.OnTYPE_PERSONChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PERSON = value
				Me.SendPropertyChanged("TYPE_PERSON")
				Me.OnTYPE_PERSONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUCUMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DUCUMENT_NAME() As String
		Get
			Return Me._DUCUMENT_NAME
		End Get
		Set
			If (String.Equals(Me._DUCUMENT_NAME, value) = false) Then
				Me.OnDUCUMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DUCUMENT_NAME = value
				Me.SendPropertyChanged("DUCUMENT_NAME")
				Me.OnDUCUMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Bit")>  _
	Public Property ACTIVE() As System.Nullable(Of Boolean)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TABEAN_JJ_SUB_PACKSIZE")>  _
Partial Public Class TABEAN_JJ_SUB_PACKSIZE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _PACK_FSIZE_VOLUME As System.Nullable(Of Decimal)
	
	Private _PACK_FSIZE_ID As System.Nullable(Of Integer)
	
	Private _PACK_FSIZE_NAME As String
	
	Private _PACK_FSIZE_UNIT_ID As System.Nullable(Of Integer)
	
	Private _PACK_FSIZE_UNIT_NAME As String
	
	Private _PACK_SECSIZE_VOLUME As System.Nullable(Of Decimal)
	
	Private _PACK_SECSIZE_ID As System.Nullable(Of Integer)
	
	Private _PACK_SECSIZE_NAME As String
	
	Private _PACK_SECSIZE_UNIT_ID As System.Nullable(Of Integer)
	
	Private _PACK_SECSIZE_UNIT_NAME As String
	
	Private _PACK_THSSIZE_VOLUME As System.Nullable(Of Decimal)
	
	Private _PACK_THSIZE_ID As System.Nullable(Of Integer)
	
	Private _PACK_THSIZE_NAME As String
	
	Private _PACK_THSIZE_UNIT_ID As System.Nullable(Of Integer)
	
	Private _PACK_THSIZE_UNIT_NAME As String
	
	Private _PACK_NOTE As String
	
	Private _ACTIVEFACT As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CREATE_BY As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_BY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPACK_FSIZE_VOLUMEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPACK_FSIZE_VOLUMEChanged()
    End Sub
    Partial Private Sub OnPACK_FSIZE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPACK_FSIZE_IDChanged()
    End Sub
    Partial Private Sub OnPACK_FSIZE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_FSIZE_NAMEChanged()
    End Sub
    Partial Private Sub OnPACK_FSIZE_UNIT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPACK_FSIZE_UNIT_IDChanged()
    End Sub
    Partial Private Sub OnPACK_FSIZE_UNIT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_FSIZE_UNIT_NAMEChanged()
    End Sub
    Partial Private Sub OnPACK_SECSIZE_VOLUMEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPACK_SECSIZE_VOLUMEChanged()
    End Sub
    Partial Private Sub OnPACK_SECSIZE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPACK_SECSIZE_IDChanged()
    End Sub
    Partial Private Sub OnPACK_SECSIZE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_SECSIZE_NAMEChanged()
    End Sub
    Partial Private Sub OnPACK_SECSIZE_UNIT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPACK_SECSIZE_UNIT_IDChanged()
    End Sub
    Partial Private Sub OnPACK_SECSIZE_UNIT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_SECSIZE_UNIT_NAMEChanged()
    End Sub
    Partial Private Sub OnPACK_THSSIZE_VOLUMEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPACK_THSSIZE_VOLUMEChanged()
    End Sub
    Partial Private Sub OnPACK_THSIZE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPACK_THSIZE_IDChanged()
    End Sub
    Partial Private Sub OnPACK_THSIZE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_THSIZE_NAMEChanged()
    End Sub
    Partial Private Sub OnPACK_THSIZE_UNIT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPACK_THSIZE_UNIT_IDChanged()
    End Sub
    Partial Private Sub OnPACK_THSIZE_UNIT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_THSIZE_UNIT_NAMEChanged()
    End Sub
    Partial Private Sub OnPACK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnPACK_NOTEChanged()
    End Sub
    Partial Private Sub OnACTIVEFACTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEFACTChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_BYChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_BYChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_BYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_FSIZE_VOLUME", DbType:="Decimal(18,2)")>  _
	Public Property PACK_FSIZE_VOLUME() As System.Nullable(Of Decimal)
		Get
			Return Me._PACK_FSIZE_VOLUME
		End Get
		Set
			If (Me._PACK_FSIZE_VOLUME.Equals(value) = false) Then
				Me.OnPACK_FSIZE_VOLUMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_FSIZE_VOLUME = value
				Me.SendPropertyChanged("PACK_FSIZE_VOLUME")
				Me.OnPACK_FSIZE_VOLUMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_FSIZE_ID", DbType:="Int")>  _
	Public Property PACK_FSIZE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PACK_FSIZE_ID
		End Get
		Set
			If (Me._PACK_FSIZE_ID.Equals(value) = false) Then
				Me.OnPACK_FSIZE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PACK_FSIZE_ID = value
				Me.SendPropertyChanged("PACK_FSIZE_ID")
				Me.OnPACK_FSIZE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_FSIZE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_FSIZE_NAME() As String
		Get
			Return Me._PACK_FSIZE_NAME
		End Get
		Set
			If (String.Equals(Me._PACK_FSIZE_NAME, value) = false) Then
				Me.OnPACK_FSIZE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_FSIZE_NAME = value
				Me.SendPropertyChanged("PACK_FSIZE_NAME")
				Me.OnPACK_FSIZE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_FSIZE_UNIT_ID", DbType:="Int")>  _
	Public Property PACK_FSIZE_UNIT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PACK_FSIZE_UNIT_ID
		End Get
		Set
			If (Me._PACK_FSIZE_UNIT_ID.Equals(value) = false) Then
				Me.OnPACK_FSIZE_UNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._PACK_FSIZE_UNIT_ID = value
				Me.SendPropertyChanged("PACK_FSIZE_UNIT_ID")
				Me.OnPACK_FSIZE_UNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_FSIZE_UNIT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_FSIZE_UNIT_NAME() As String
		Get
			Return Me._PACK_FSIZE_UNIT_NAME
		End Get
		Set
			If (String.Equals(Me._PACK_FSIZE_UNIT_NAME, value) = false) Then
				Me.OnPACK_FSIZE_UNIT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_FSIZE_UNIT_NAME = value
				Me.SendPropertyChanged("PACK_FSIZE_UNIT_NAME")
				Me.OnPACK_FSIZE_UNIT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_SECSIZE_VOLUME", DbType:="Decimal(18,2)")>  _
	Public Property PACK_SECSIZE_VOLUME() As System.Nullable(Of Decimal)
		Get
			Return Me._PACK_SECSIZE_VOLUME
		End Get
		Set
			If (Me._PACK_SECSIZE_VOLUME.Equals(value) = false) Then
				Me.OnPACK_SECSIZE_VOLUMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_SECSIZE_VOLUME = value
				Me.SendPropertyChanged("PACK_SECSIZE_VOLUME")
				Me.OnPACK_SECSIZE_VOLUMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_SECSIZE_ID", DbType:="Int")>  _
	Public Property PACK_SECSIZE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PACK_SECSIZE_ID
		End Get
		Set
			If (Me._PACK_SECSIZE_ID.Equals(value) = false) Then
				Me.OnPACK_SECSIZE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PACK_SECSIZE_ID = value
				Me.SendPropertyChanged("PACK_SECSIZE_ID")
				Me.OnPACK_SECSIZE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_SECSIZE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_SECSIZE_NAME() As String
		Get
			Return Me._PACK_SECSIZE_NAME
		End Get
		Set
			If (String.Equals(Me._PACK_SECSIZE_NAME, value) = false) Then
				Me.OnPACK_SECSIZE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_SECSIZE_NAME = value
				Me.SendPropertyChanged("PACK_SECSIZE_NAME")
				Me.OnPACK_SECSIZE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_SECSIZE_UNIT_ID", DbType:="Int")>  _
	Public Property PACK_SECSIZE_UNIT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PACK_SECSIZE_UNIT_ID
		End Get
		Set
			If (Me._PACK_SECSIZE_UNIT_ID.Equals(value) = false) Then
				Me.OnPACK_SECSIZE_UNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._PACK_SECSIZE_UNIT_ID = value
				Me.SendPropertyChanged("PACK_SECSIZE_UNIT_ID")
				Me.OnPACK_SECSIZE_UNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_SECSIZE_UNIT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_SECSIZE_UNIT_NAME() As String
		Get
			Return Me._PACK_SECSIZE_UNIT_NAME
		End Get
		Set
			If (String.Equals(Me._PACK_SECSIZE_UNIT_NAME, value) = false) Then
				Me.OnPACK_SECSIZE_UNIT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_SECSIZE_UNIT_NAME = value
				Me.SendPropertyChanged("PACK_SECSIZE_UNIT_NAME")
				Me.OnPACK_SECSIZE_UNIT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_THSSIZE_VOLUME", DbType:="Decimal(18,2)")>  _
	Public Property PACK_THSSIZE_VOLUME() As System.Nullable(Of Decimal)
		Get
			Return Me._PACK_THSSIZE_VOLUME
		End Get
		Set
			If (Me._PACK_THSSIZE_VOLUME.Equals(value) = false) Then
				Me.OnPACK_THSSIZE_VOLUMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_THSSIZE_VOLUME = value
				Me.SendPropertyChanged("PACK_THSSIZE_VOLUME")
				Me.OnPACK_THSSIZE_VOLUMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_THSIZE_ID", DbType:="Int")>  _
	Public Property PACK_THSIZE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PACK_THSIZE_ID
		End Get
		Set
			If (Me._PACK_THSIZE_ID.Equals(value) = false) Then
				Me.OnPACK_THSIZE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PACK_THSIZE_ID = value
				Me.SendPropertyChanged("PACK_THSIZE_ID")
				Me.OnPACK_THSIZE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_THSIZE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_THSIZE_NAME() As String
		Get
			Return Me._PACK_THSIZE_NAME
		End Get
		Set
			If (String.Equals(Me._PACK_THSIZE_NAME, value) = false) Then
				Me.OnPACK_THSIZE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_THSIZE_NAME = value
				Me.SendPropertyChanged("PACK_THSIZE_NAME")
				Me.OnPACK_THSIZE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_THSIZE_UNIT_ID", DbType:="Int")>  _
	Public Property PACK_THSIZE_UNIT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PACK_THSIZE_UNIT_ID
		End Get
		Set
			If (Me._PACK_THSIZE_UNIT_ID.Equals(value) = false) Then
				Me.OnPACK_THSIZE_UNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._PACK_THSIZE_UNIT_ID = value
				Me.SendPropertyChanged("PACK_THSIZE_UNIT_ID")
				Me.OnPACK_THSIZE_UNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_THSIZE_UNIT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_THSIZE_UNIT_NAME() As String
		Get
			Return Me._PACK_THSIZE_UNIT_NAME
		End Get
		Set
			If (String.Equals(Me._PACK_THSIZE_UNIT_NAME, value) = false) Then
				Me.OnPACK_THSIZE_UNIT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_THSIZE_UNIT_NAME = value
				Me.SendPropertyChanged("PACK_THSIZE_UNIT_NAME")
				Me.OnPACK_THSIZE_UNIT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACK_NOTE", DbType:="NVarChar(MAX)")>  _
	Public Property PACK_NOTE() As String
		Get
			Return Me._PACK_NOTE
		End Get
		Set
			If (String.Equals(Me._PACK_NOTE, value) = false) Then
				Me.OnPACK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._PACK_NOTE = value
				Me.SendPropertyChanged("PACK_NOTE")
				Me.OnPACK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVEFACT", DbType:="Int")>  _
	Public Property ACTIVEFACT() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVEFACT
		End Get
		Set
			If (Me._ACTIVEFACT.Equals(value) = false) Then
				Me.OnACTIVEFACTChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVEFACT = value
				Me.SendPropertyChanged("ACTIVEFACT")
				Me.OnACTIVEFACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property CREATE_BY() As String
		Get
			Return Me._CREATE_BY
		End Get
		Set
			If (String.Equals(Me._CREATE_BY, value) = false) Then
				Me.OnCREATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_BY = value
				Me.SendPropertyChanged("CREATE_BY")
				Me.OnCREATE_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_BY", DbType:="NVarChar(MAX)")>  _
	Public Property UPDATE_BY() As String
		Get
			Return Me._UPDATE_BY
		End Get
		Set
			If (String.Equals(Me._UPDATE_BY, value) = false) Then
				Me.OnUPDATE_BYChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_BY = value
				Me.SendPropertyChanged("UPDATE_BY")
				Me.OnUPDATE_BYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
