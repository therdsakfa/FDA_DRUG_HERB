'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="LGT_PERMISSION")>  _
Partial Public Class LINQ_PERMISSIONDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertnamesystem(instance As namesystem)
    End Sub
  Partial Private Sub Updatenamesystem(instance As namesystem)
    End Sub
  Partial Private Sub Deletenamesystem(instance As namesystem)
    End Sub
  Partial Private Sub Inserttaxnogrouppermission(instance As taxnogrouppermission)
    End Sub
  Partial Private Sub Updatetaxnogrouppermission(instance As taxnogrouppermission)
    End Sub
  Partial Private Sub Deletetaxnogrouppermission(instance As taxnogrouppermission)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("LGT_PERMISSIONConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property namemenus() As System.Data.Linq.Table(Of namemenu)
		Get
			Return Me.GetTable(Of namemenu)
		End Get
	End Property
	
	Public ReadOnly Property namesystems() As System.Data.Linq.Table(Of namesystem)
		Get
			Return Me.GetTable(Of namesystem)
		End Get
	End Property
	
	Public ReadOnly Property grouppermissions() As System.Data.Linq.Table(Of grouppermission)
		Get
			Return Me.GetTable(Of grouppermission)
		End Get
	End Property
	
	Public ReadOnly Property taxnogrouppermissions() As System.Data.Linq.Table(Of taxnogrouppermission)
		Get
			Return Me.GetTable(Of taxnogrouppermission)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.namemenu")>  _
Partial Public Class namemenu
	
	Private _IDmenu As Integer
	
	Private _menu As String
	
	Private _IDnamesys As System.Nullable(Of Integer)
	
	Private _date As System.Nullable(Of Date)
	
	Private _Title As String
	
	Private _Margin As System.Nullable(Of Double)
	
	Private _SEQ As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDmenu", DbType:="Int NOT NULL")>  _
	Public Property IDmenu() As Integer
		Get
			Return Me._IDmenu
		End Get
		Set
			If ((Me._IDmenu = value)  _
						= false) Then
				Me._IDmenu = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_menu", DbType:="VarChar(MAX)")>  _
	Public Property menu() As String
		Get
			Return Me._menu
		End Get
		Set
			If (String.Equals(Me._menu, value) = false) Then
				Me._menu = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDnamesys", DbType:="Int")>  _
	Public Property IDnamesys() As System.Nullable(Of Integer)
		Get
			Return Me._IDnamesys
		End Get
		Set
			If (Me._IDnamesys.Equals(value) = false) Then
				Me._IDnamesys = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="date", Storage:="_date", DbType:="DateTime2")>  _
	Public Property [date]() As System.Nullable(Of Date)
		Get
			Return Me._date
		End Get
		Set
			If (Me._date.Equals(value) = false) Then
				Me._date = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="VarChar(MAX)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Margin", DbType:="Float")>  _
	Public Property Margin() As System.Nullable(Of Double)
		Get
			Return Me._Margin
		End Get
		Set
			If (Me._Margin.Equals(value) = false) Then
				Me._Margin = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Float")>  _
	Public Property SEQ() As System.Nullable(Of Double)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me._SEQ = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.namesystem")>  _
Partial Public Class namesystem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDnamesys As Integer
	
	Private _namesystem As String
	
	Private _type As System.Nullable(Of Integer)
	
	Private _date As System.Nullable(Of Date)
	
	Private _path_image As String
	
	Private _url As String
	
	Private _groupdavision As System.Nullable(Of Integer)
	
	Private _groupdavision_type As System.Nullable(Of Integer)
	
	Private _type_admin As System.Nullable(Of Integer)
	
	Private _status_permission As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDnamesysChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDnamesysChanged()
    End Sub
    Partial Private Sub OnnamesystemChanging(value As String)
    End Sub
    Partial Private Sub OnnamesystemChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub OndateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateChanged()
    End Sub
    Partial Private Sub Onpath_imageChanging(value As String)
    End Sub
    Partial Private Sub Onpath_imageChanged()
    End Sub
    Partial Private Sub OnurlChanging(value As String)
    End Sub
    Partial Private Sub OnurlChanged()
    End Sub
    Partial Private Sub OngroupdavisionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngroupdavisionChanged()
    End Sub
    Partial Private Sub Ongroupdavision_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongroupdavision_typeChanged()
    End Sub
    Partial Private Sub Ontype_adminChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontype_adminChanged()
    End Sub
    Partial Private Sub Onstatus_permissionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onstatus_permissionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDnamesys", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDnamesys() As Integer
		Get
			Return Me._IDnamesys
		End Get
		Set
			If ((Me._IDnamesys = value)  _
						= false) Then
				Me.OnIDnamesysChanging(value)
				Me.SendPropertyChanging
				Me._IDnamesys = value
				Me.SendPropertyChanged("IDnamesys")
				Me.OnIDnamesysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_namesystem", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property namesystem() As String
		Get
			Return Me._namesystem
		End Get
		Set
			If (String.Equals(Me._namesystem, value) = false) Then
				Me.OnnamesystemChanging(value)
				Me.SendPropertyChanging
				Me._namesystem = value
				Me.SendPropertyChanged("namesystem")
				Me.OnnamesystemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="Int")>  _
	Public Property type() As System.Nullable(Of Integer)
		Get
			Return Me._type
		End Get
		Set
			If (Me._type.Equals(value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="date", Storage:="_date", DbType:="DateTime2")>  _
	Public Property [date]() As System.Nullable(Of Date)
		Get
			Return Me._date
		End Get
		Set
			If (Me._date.Equals(value) = false) Then
				Me.OndateChanging(value)
				Me.SendPropertyChanging
				Me._date = value
				Me.SendPropertyChanged("[date]")
				Me.OndateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_path_image", DbType:="NVarChar(MAX)")>  _
	Public Property path_image() As String
		Get
			Return Me._path_image
		End Get
		Set
			If (String.Equals(Me._path_image, value) = false) Then
				Me.Onpath_imageChanging(value)
				Me.SendPropertyChanging
				Me._path_image = value
				Me.SendPropertyChanged("path_image")
				Me.Onpath_imageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_url", DbType:="NVarChar(MAX)")>  _
	Public Property url() As String
		Get
			Return Me._url
		End Get
		Set
			If (String.Equals(Me._url, value) = false) Then
				Me.OnurlChanging(value)
				Me.SendPropertyChanging
				Me._url = value
				Me.SendPropertyChanged("url")
				Me.OnurlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupdavision", DbType:="Int")>  _
	Public Property groupdavision() As System.Nullable(Of Integer)
		Get
			Return Me._groupdavision
		End Get
		Set
			If (Me._groupdavision.Equals(value) = false) Then
				Me.OngroupdavisionChanging(value)
				Me.SendPropertyChanging
				Me._groupdavision = value
				Me.SendPropertyChanged("groupdavision")
				Me.OngroupdavisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupdavision_type", DbType:="Int")>  _
	Public Property groupdavision_type() As System.Nullable(Of Integer)
		Get
			Return Me._groupdavision_type
		End Get
		Set
			If (Me._groupdavision_type.Equals(value) = false) Then
				Me.Ongroupdavision_typeChanging(value)
				Me.SendPropertyChanging
				Me._groupdavision_type = value
				Me.SendPropertyChanged("groupdavision_type")
				Me.Ongroupdavision_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type_admin", DbType:="Int")>  _
	Public Property type_admin() As System.Nullable(Of Integer)
		Get
			Return Me._type_admin
		End Get
		Set
			If (Me._type_admin.Equals(value) = false) Then
				Me.Ontype_adminChanging(value)
				Me.SendPropertyChanging
				Me._type_admin = value
				Me.SendPropertyChanged("type_admin")
				Me.Ontype_adminChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_permission", DbType:="Int")>  _
	Public Property status_permission() As System.Nullable(Of Integer)
		Get
			Return Me._status_permission
		End Get
		Set
			If (Me._status_permission.Equals(value) = false) Then
				Me.Onstatus_permissionChanging(value)
				Me.SendPropertyChanging
				Me._status_permission = value
				Me.SendPropertyChanged("status_permission")
				Me.Onstatus_permissionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.grouppermission")>  _
Partial Public Class grouppermission
	
	Private _IDgroup As Integer
	
	Private _grouppermission As String
	
	Private _date As System.Nullable(Of Date)
	
	Private _grouptype As System.Nullable(Of Integer)
	
	Private _type As System.Nullable(Of Integer)
	
	Private _taxno As String
	
	Private _taxno_authorize As String
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _thachngwtnm As String
	
	Private _type_admin As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_CODE As String
	
	Private _groupdavision As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDgroup", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDgroup() As Integer
		Get
			Return Me._IDgroup
		End Get
		Set
			If ((Me._IDgroup = value)  _
						= false) Then
				Me._IDgroup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grouppermission", DbType:="VarChar(MAX)")>  _
	Public Property grouppermission() As String
		Get
			Return Me._grouppermission
		End Get
		Set
			If (String.Equals(Me._grouppermission, value) = false) Then
				Me._grouppermission = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="date", Storage:="_date", DbType:="DateTime2")>  _
	Public Property [date]() As System.Nullable(Of Date)
		Get
			Return Me._date
		End Get
		Set
			If (Me._date.Equals(value) = false) Then
				Me._date = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grouptype", DbType:="Int")>  _
	Public Property grouptype() As System.Nullable(Of Integer)
		Get
			Return Me._grouptype
		End Get
		Set
			If (Me._grouptype.Equals(value) = false) Then
				Me._grouptype = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="Int")>  _
	Public Property type() As System.Nullable(Of Integer)
		Get
			Return Me._type
		End Get
		Set
			If (Me._type.Equals(value) = false) Then
				Me._type = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_taxno", DbType:="VarChar(20)")>  _
	Public Property taxno() As String
		Get
			Return Me._taxno
		End Get
		Set
			If (String.Equals(Me._taxno, value) = false) Then
				Me._taxno = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_taxno_authorize", DbType:="VarChar(MAX)")>  _
	Public Property taxno_authorize() As String
		Get
			Return Me._taxno_authorize
		End Get
		Set
			If (String.Equals(Me._taxno_authorize, value) = false) Then
				Me._taxno_authorize = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me._chngwtcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="VarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me._thachngwtnm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type_admin", DbType:="Int")>  _
	Public Property type_admin() As System.Nullable(Of Integer)
		Get
			Return Me._type_admin
		End Get
		Set
			If (Me._type_admin.Equals(value) = false) Then
				Me._type_admin = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_CODE", DbType:="VarChar(MAX)")>  _
	Public Property DEPARTMENT_CODE() As String
		Get
			Return Me._DEPARTMENT_CODE
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_CODE, value) = false) Then
				Me._DEPARTMENT_CODE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupdavision", DbType:="Int")>  _
	Public Property groupdavision() As System.Nullable(Of Integer)
		Get
			Return Me._groupdavision
		End Get
		Set
			If (Me._groupdavision.Equals(value) = false) Then
				Me._groupdavision = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.taxnogrouppermission")>  _
Partial Public Class taxnogrouppermission
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDpimary As Integer
	
	Private _IDgroup As System.Nullable(Of Integer)
	
	Private _create_date As System.Nullable(Of Date)
	
	Private _taxno As String
	
	Private _type As System.Nullable(Of Integer)
	
	Private _grouppermission As String
	
	Private _taxno_authorize As String
	
	Private _explair_date As System.Nullable(Of Date)
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _thachngwtnm As String
	
	Private _groupdavision As System.Nullable(Of Integer)
	
	Private _staff_id As String
	
	Private _staff_pvncd As System.Nullable(Of Integer)
	
	Private _staff_name As String
	
	Private _staff_province_name As String
	
	Private _status_active As System.Nullable(Of Integer)
	
	Private _permission_description As String
	
	Private _FDA_code As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDpimaryChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDpimaryChanged()
    End Sub
    Partial Private Sub OnIDgroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDgroupChanged()
    End Sub
    Partial Private Sub Oncreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreate_dateChanged()
    End Sub
    Partial Private Sub OntaxnoChanging(value As String)
    End Sub
    Partial Private Sub OntaxnoChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub OngrouppermissionChanging(value As String)
    End Sub
    Partial Private Sub OngrouppermissionChanged()
    End Sub
    Partial Private Sub Ontaxno_authorizeChanging(value As String)
    End Sub
    Partial Private Sub Ontaxno_authorizeChanged()
    End Sub
    Partial Private Sub Onexplair_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onexplair_dateChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OngroupdavisionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngroupdavisionChanged()
    End Sub
    Partial Private Sub Onstaff_idChanging(value As String)
    End Sub
    Partial Private Sub Onstaff_idChanged()
    End Sub
    Partial Private Sub Onstaff_pvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onstaff_pvncdChanged()
    End Sub
    Partial Private Sub Onstaff_nameChanging(value As String)
    End Sub
    Partial Private Sub Onstaff_nameChanged()
    End Sub
    Partial Private Sub Onstaff_province_nameChanging(value As String)
    End Sub
    Partial Private Sub Onstaff_province_nameChanged()
    End Sub
    Partial Private Sub Onstatus_activeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onstatus_activeChanged()
    End Sub
    Partial Private Sub Onpermission_descriptionChanging(value As String)
    End Sub
    Partial Private Sub Onpermission_descriptionChanged()
    End Sub
    Partial Private Sub OnFDA_codeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFDA_codeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDpimary", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDpimary() As Integer
		Get
			Return Me._IDpimary
		End Get
		Set
			If ((Me._IDpimary = value)  _
						= false) Then
				Me.OnIDpimaryChanging(value)
				Me.SendPropertyChanging
				Me._IDpimary = value
				Me.SendPropertyChanged("IDpimary")
				Me.OnIDpimaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDgroup", DbType:="Int")>  _
	Public Property IDgroup() As System.Nullable(Of Integer)
		Get
			Return Me._IDgroup
		End Get
		Set
			If (Me._IDgroup.Equals(value) = false) Then
				Me.OnIDgroupChanging(value)
				Me.SendPropertyChanging
				Me._IDgroup = value
				Me.SendPropertyChanged("IDgroup")
				Me.OnIDgroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_create_date", DbType:="DateTime")>  _
	Public Property create_date() As System.Nullable(Of Date)
		Get
			Return Me._create_date
		End Get
		Set
			If (Me._create_date.Equals(value) = false) Then
				Me.Oncreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._create_date = value
				Me.SendPropertyChanged("create_date")
				Me.Oncreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_taxno", DbType:="VarChar(20)")>  _
	Public Property taxno() As String
		Get
			Return Me._taxno
		End Get
		Set
			If (String.Equals(Me._taxno, value) = false) Then
				Me.OntaxnoChanging(value)
				Me.SendPropertyChanging
				Me._taxno = value
				Me.SendPropertyChanged("taxno")
				Me.OntaxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="Int")>  _
	Public Property type() As System.Nullable(Of Integer)
		Get
			Return Me._type
		End Get
		Set
			If (Me._type.Equals(value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grouppermission", DbType:="VarChar(MAX)")>  _
	Public Property grouppermission() As String
		Get
			Return Me._grouppermission
		End Get
		Set
			If (String.Equals(Me._grouppermission, value) = false) Then
				Me.OngrouppermissionChanging(value)
				Me.SendPropertyChanging
				Me._grouppermission = value
				Me.SendPropertyChanged("grouppermission")
				Me.OngrouppermissionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_taxno_authorize", DbType:="VarChar(MAX)")>  _
	Public Property taxno_authorize() As String
		Get
			Return Me._taxno_authorize
		End Get
		Set
			If (String.Equals(Me._taxno_authorize, value) = false) Then
				Me.Ontaxno_authorizeChanging(value)
				Me.SendPropertyChanging
				Me._taxno_authorize = value
				Me.SendPropertyChanged("taxno_authorize")
				Me.Ontaxno_authorizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_explair_date", DbType:="DateTime")>  _
	Public Property explair_date() As System.Nullable(Of Date)
		Get
			Return Me._explair_date
		End Get
		Set
			If (Me._explair_date.Equals(value) = false) Then
				Me.Onexplair_dateChanging(value)
				Me.SendPropertyChanging
				Me._explair_date = value
				Me.SendPropertyChanged("explair_date")
				Me.Onexplair_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="VarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupdavision", DbType:="Int")>  _
	Public Property groupdavision() As System.Nullable(Of Integer)
		Get
			Return Me._groupdavision
		End Get
		Set
			If (Me._groupdavision.Equals(value) = false) Then
				Me.OngroupdavisionChanging(value)
				Me.SendPropertyChanging
				Me._groupdavision = value
				Me.SendPropertyChanged("groupdavision")
				Me.OngroupdavisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staff_id", DbType:="VarChar(MAX)")>  _
	Public Property staff_id() As String
		Get
			Return Me._staff_id
		End Get
		Set
			If (String.Equals(Me._staff_id, value) = false) Then
				Me.Onstaff_idChanging(value)
				Me.SendPropertyChanging
				Me._staff_id = value
				Me.SendPropertyChanged("staff_id")
				Me.Onstaff_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staff_pvncd", DbType:="Int")>  _
	Public Property staff_pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._staff_pvncd
		End Get
		Set
			If (Me._staff_pvncd.Equals(value) = false) Then
				Me.Onstaff_pvncdChanging(value)
				Me.SendPropertyChanging
				Me._staff_pvncd = value
				Me.SendPropertyChanged("staff_pvncd")
				Me.Onstaff_pvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staff_name", DbType:="VarChar(MAX)")>  _
	Public Property staff_name() As String
		Get
			Return Me._staff_name
		End Get
		Set
			If (String.Equals(Me._staff_name, value) = false) Then
				Me.Onstaff_nameChanging(value)
				Me.SendPropertyChanging
				Me._staff_name = value
				Me.SendPropertyChanged("staff_name")
				Me.Onstaff_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staff_province_name", DbType:="VarChar(MAX)")>  _
	Public Property staff_province_name() As String
		Get
			Return Me._staff_province_name
		End Get
		Set
			If (String.Equals(Me._staff_province_name, value) = false) Then
				Me.Onstaff_province_nameChanging(value)
				Me.SendPropertyChanging
				Me._staff_province_name = value
				Me.SendPropertyChanged("staff_province_name")
				Me.Onstaff_province_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_active", DbType:="Int")>  _
	Public Property status_active() As System.Nullable(Of Integer)
		Get
			Return Me._status_active
		End Get
		Set
			If (Me._status_active.Equals(value) = false) Then
				Me.Onstatus_activeChanging(value)
				Me.SendPropertyChanging
				Me._status_active = value
				Me.SendPropertyChanged("status_active")
				Me.Onstatus_activeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_permission_description", DbType:="VarChar(MAX)")>  _
	Public Property permission_description() As String
		Get
			Return Me._permission_description
		End Get
		Set
			If (String.Equals(Me._permission_description, value) = false) Then
				Me.Onpermission_descriptionChanging(value)
				Me.SendPropertyChanging
				Me._permission_description = value
				Me.SendPropertyChanged("permission_description")
				Me.Onpermission_descriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FDA_code", DbType:="Int")>  _
	Public Property FDA_code() As System.Nullable(Of Integer)
		Get
			Return Me._FDA_code
		End Get
		Set
			If (Me._FDA_code.Equals(value) = false) Then
				Me.OnFDA_codeChanging(value)
				Me.SendPropertyChanging
				Me._FDA_code = value
				Me.SendPropertyChanged("FDA_code")
				Me.OnFDA_codeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
