'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FDA_XML_DRUG_ESUB")>  _
Partial Public Class LINQ_FDA_XML_DRUG_ESUBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertXML_SEARCH_DRUG_LCN_ESUB(instance As XML_SEARCH_DRUG_LCN_ESUB)
    End Sub
  Partial Private Sub UpdateXML_SEARCH_DRUG_LCN_ESUB(instance As XML_SEARCH_DRUG_LCN_ESUB)
    End Sub
  Partial Private Sub DeleteXML_SEARCH_DRUG_LCN_ESUB(instance As XML_SEARCH_DRUG_LCN_ESUB)
    End Sub
  Partial Private Sub InsertXML_DRUG_CONTAIN(instance As XML_DRUG_CONTAIN)
    End Sub
  Partial Private Sub UpdateXML_DRUG_CONTAIN(instance As XML_DRUG_CONTAIN)
    End Sub
  Partial Private Sub DeleteXML_DRUG_CONTAIN(instance As XML_DRUG_CONTAIN)
    End Sub
  Partial Private Sub InsertXML_DRUG_CODE(instance As XML_DRUG_CODE)
    End Sub
  Partial Private Sub UpdateXML_DRUG_CODE(instance As XML_DRUG_CODE)
    End Sub
  Partial Private Sub DeleteXML_DRUG_CODE(instance As XML_DRUG_CODE)
    End Sub
  Partial Private Sub InsertXML_DRUG_COLOR(instance As XML_DRUG_COLOR)
    End Sub
  Partial Private Sub UpdateXML_DRUG_COLOR(instance As XML_DRUG_COLOR)
    End Sub
  Partial Private Sub DeleteXML_DRUG_COLOR(instance As XML_DRUG_COLOR)
    End Sub
  Partial Private Sub InsertXML_DRUG_RECIPE_GROUP(instance As XML_DRUG_RECIPE_GROUP)
    End Sub
  Partial Private Sub UpdateXML_DRUG_RECIPE_GROUP(instance As XML_DRUG_RECIPE_GROUP)
    End Sub
  Partial Private Sub DeleteXML_DRUG_RECIPE_GROUP(instance As XML_DRUG_RECIPE_GROUP)
    End Sub
  Partial Private Sub InsertXML_DRUG_STOWAGR(instance As XML_DRUG_STOWAGR)
    End Sub
  Partial Private Sub UpdateXML_DRUG_STOWAGR(instance As XML_DRUG_STOWAGR)
    End Sub
  Partial Private Sub DeleteXML_DRUG_STOWAGR(instance As XML_DRUG_STOWAGR)
    End Sub
  Partial Private Sub InsertXML_DRUG_ANIMAL(instance As XML_DRUG_ANIMAL)
    End Sub
  Partial Private Sub UpdateXML_DRUG_ANIMAL(instance As XML_DRUG_ANIMAL)
    End Sub
  Partial Private Sub DeleteXML_DRUG_ANIMAL(instance As XML_DRUG_ANIMAL)
    End Sub
  Partial Private Sub InsertXML_DRUG_SOURCE_OF_RM(instance As XML_DRUG_SOURCE_OF_RM)
    End Sub
  Partial Private Sub UpdateXML_DRUG_SOURCE_OF_RM(instance As XML_DRUG_SOURCE_OF_RM)
    End Sub
  Partial Private Sub DeleteXML_DRUG_SOURCE_OF_RM(instance As XML_DRUG_SOURCE_OF_RM)
    End Sub
  Partial Private Sub InsertXML_DRUG_AGENT(instance As XML_DRUG_AGENT)
    End Sub
  Partial Private Sub UpdateXML_DRUG_AGENT(instance As XML_DRUG_AGENT)
    End Sub
  Partial Private Sub DeleteXML_DRUG_AGENT(instance As XML_DRUG_AGENT)
    End Sub
  Partial Private Sub InsertXML_DRUG_CONTROL_ANALYZE(instance As XML_DRUG_CONTROL_ANALYZE)
    End Sub
  Partial Private Sub UpdateXML_DRUG_CONTROL_ANALYZE(instance As XML_DRUG_CONTROL_ANALYZE)
    End Sub
  Partial Private Sub DeleteXML_DRUG_CONTROL_ANALYZE(instance As XML_DRUG_CONTROL_ANALYZE)
    End Sub
  Partial Private Sub InsertXML_DRUG_CONDITION_TABEAN(instance As XML_DRUG_CONDITION_TABEAN)
    End Sub
  Partial Private Sub UpdateXML_DRUG_CONDITION_TABEAN(instance As XML_DRUG_CONDITION_TABEAN)
    End Sub
  Partial Private Sub DeleteXML_DRUG_CONDITION_TABEAN(instance As XML_DRUG_CONDITION_TABEAN)
    End Sub
  Partial Private Sub InsertXML_DRUG_STORY_EDIT_HISTORY(instance As XML_DRUG_STORY_EDIT_HISTORY)
    End Sub
  Partial Private Sub UpdateXML_DRUG_STORY_EDIT_HISTORY(instance As XML_DRUG_STORY_EDIT_HISTORY)
    End Sub
  Partial Private Sub DeleteXML_DRUG_STORY_EDIT_HISTORY(instance As XML_DRUG_STORY_EDIT_HISTORY)
    End Sub
  Partial Private Sub InsertXML_DRUG_ANIMAL_CONSUME(instance As XML_DRUG_ANIMAL_CONSUME)
    End Sub
  Partial Private Sub UpdateXML_DRUG_ANIMAL_CONSUME(instance As XML_DRUG_ANIMAL_CONSUME)
    End Sub
  Partial Private Sub DeleteXML_DRUG_ANIMAL_CONSUME(instance As XML_DRUG_ANIMAL_CONSUME)
    End Sub
  Partial Private Sub InsertXML_DRUG_DOC_PDF(instance As XML_DRUG_DOC_PDF)
    End Sub
  Partial Private Sub UpdateXML_DRUG_DOC_PDF(instance As XML_DRUG_DOC_PDF)
    End Sub
  Partial Private Sub DeleteXML_DRUG_DOC_PDF(instance As XML_DRUG_DOC_PDF)
    End Sub
  Partial Private Sub InsertXML_DRUG_EXPORT(instance As XML_DRUG_EXPORT)
    End Sub
  Partial Private Sub UpdateXML_DRUG_EXPORT(instance As XML_DRUG_EXPORT)
    End Sub
  Partial Private Sub DeleteXML_DRUG_EXPORT(instance As XML_DRUG_EXPORT)
    End Sub
  Partial Private Sub InsertXML_DRUG_PI(instance As XML_DRUG_PI)
    End Sub
  Partial Private Sub UpdateXML_DRUG_PI(instance As XML_DRUG_PI)
    End Sub
  Partial Private Sub DeleteXML_DRUG_PI(instance As XML_DRUG_PI)
    End Sub
  Partial Private Sub InsertXML_DRUG_PIL(instance As XML_DRUG_PIL)
    End Sub
  Partial Private Sub UpdateXML_DRUG_PIL(instance As XML_DRUG_PIL)
    End Sub
  Partial Private Sub DeleteXML_DRUG_PIL(instance As XML_DRUG_PIL)
    End Sub
  Partial Private Sub InsertXML_DRUG_SPC(instance As XML_DRUG_SPC)
    End Sub
  Partial Private Sub UpdateXML_DRUG_SPC(instance As XML_DRUG_SPC)
    End Sub
  Partial Private Sub DeleteXML_DRUG_SPC(instance As XML_DRUG_SPC)
    End Sub
  Partial Private Sub InsertXML_DRUG_IOW(instance As XML_DRUG_IOW)
    End Sub
  Partial Private Sub UpdateXML_DRUG_IOW(instance As XML_DRUG_IOW)
    End Sub
  Partial Private Sub DeleteXML_DRUG_IOW(instance As XML_DRUG_IOW)
    End Sub
  Partial Private Sub InsertXML_DRUG_IOW_EQ(instance As XML_DRUG_IOW_EQ)
    End Sub
  Partial Private Sub UpdateXML_DRUG_IOW_EQ(instance As XML_DRUG_IOW_EQ)
    End Sub
  Partial Private Sub DeleteXML_DRUG_IOW_EQ(instance As XML_DRUG_IOW_EQ)
    End Sub
  Partial Private Sub InsertXML_SEARCH_PRODUCT_GROUP_ESUB(instance As XML_SEARCH_PRODUCT_GROUP_ESUB)
    End Sub
  Partial Private Sub UpdateXML_SEARCH_PRODUCT_GROUP_ESUB(instance As XML_SEARCH_PRODUCT_GROUP_ESUB)
    End Sub
  Partial Private Sub DeleteXML_SEARCH_PRODUCT_GROUP_ESUB(instance As XML_SEARCH_PRODUCT_GROUP_ESUB)
    End Sub
  Partial Private Sub InsertXML_DRUG_FRGN(instance As XML_DRUG_FRGN)
    End Sub
  Partial Private Sub UpdateXML_DRUG_FRGN(instance As XML_DRUG_FRGN)
    End Sub
  Partial Private Sub DeleteXML_DRUG_FRGN(instance As XML_DRUG_FRGN)
    End Sub
  Partial Private Sub InsertXML_DRUG_NO_USE(instance As XML_DRUG_NO_USE)
    End Sub
  Partial Private Sub UpdateXML_DRUG_NO_USE(instance As XML_DRUG_NO_USE)
    End Sub
  Partial Private Sub DeleteXML_DRUG_NO_USE(instance As XML_DRUG_NO_USE)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("FDA_XML_DRUG_ESUBConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property XML_SEARCH_DRUG_LCN_ESUBs() As System.Data.Linq.Table(Of XML_SEARCH_DRUG_LCN_ESUB)
		Get
			Return Me.GetTable(Of XML_SEARCH_DRUG_LCN_ESUB)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_CONTAINs() As System.Data.Linq.Table(Of XML_DRUG_CONTAIN)
		Get
			Return Me.GetTable(Of XML_DRUG_CONTAIN)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_CODEs() As System.Data.Linq.Table(Of XML_DRUG_CODE)
		Get
			Return Me.GetTable(Of XML_DRUG_CODE)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_COLORs() As System.Data.Linq.Table(Of XML_DRUG_COLOR)
		Get
			Return Me.GetTable(Of XML_DRUG_COLOR)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_RECIPE_GROUPs() As System.Data.Linq.Table(Of XML_DRUG_RECIPE_GROUP)
		Get
			Return Me.GetTable(Of XML_DRUG_RECIPE_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_STOWAGRs() As System.Data.Linq.Table(Of XML_DRUG_STOWAGR)
		Get
			Return Me.GetTable(Of XML_DRUG_STOWAGR)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_ANIMALs() As System.Data.Linq.Table(Of XML_DRUG_ANIMAL)
		Get
			Return Me.GetTable(Of XML_DRUG_ANIMAL)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_SOURCE_OF_RMs() As System.Data.Linq.Table(Of XML_DRUG_SOURCE_OF_RM)
		Get
			Return Me.GetTable(Of XML_DRUG_SOURCE_OF_RM)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_AGENTs() As System.Data.Linq.Table(Of XML_DRUG_AGENT)
		Get
			Return Me.GetTable(Of XML_DRUG_AGENT)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_CONTROL_ANALYZEs() As System.Data.Linq.Table(Of XML_DRUG_CONTROL_ANALYZE)
		Get
			Return Me.GetTable(Of XML_DRUG_CONTROL_ANALYZE)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_CONDITION_TABEANs() As System.Data.Linq.Table(Of XML_DRUG_CONDITION_TABEAN)
		Get
			Return Me.GetTable(Of XML_DRUG_CONDITION_TABEAN)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_STORY_EDIT_HISTORies() As System.Data.Linq.Table(Of XML_DRUG_STORY_EDIT_HISTORY)
		Get
			Return Me.GetTable(Of XML_DRUG_STORY_EDIT_HISTORY)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_ANIMAL_CONSUMEs() As System.Data.Linq.Table(Of XML_DRUG_ANIMAL_CONSUME)
		Get
			Return Me.GetTable(Of XML_DRUG_ANIMAL_CONSUME)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_DOC_PDFs() As System.Data.Linq.Table(Of XML_DRUG_DOC_PDF)
		Get
			Return Me.GetTable(Of XML_DRUG_DOC_PDF)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_EXPORTs() As System.Data.Linq.Table(Of XML_DRUG_EXPORT)
		Get
			Return Me.GetTable(Of XML_DRUG_EXPORT)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_PIs() As System.Data.Linq.Table(Of XML_DRUG_PI)
		Get
			Return Me.GetTable(Of XML_DRUG_PI)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_PILs() As System.Data.Linq.Table(Of XML_DRUG_PIL)
		Get
			Return Me.GetTable(Of XML_DRUG_PIL)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_SPCs() As System.Data.Linq.Table(Of XML_DRUG_SPC)
		Get
			Return Me.GetTable(Of XML_DRUG_SPC)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_IOWs() As System.Data.Linq.Table(Of XML_DRUG_IOW)
		Get
			Return Me.GetTable(Of XML_DRUG_IOW)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_IOW_EQs() As System.Data.Linq.Table(Of XML_DRUG_IOW_EQ)
		Get
			Return Me.GetTable(Of XML_DRUG_IOW_EQ)
		End Get
	End Property
	
	Public ReadOnly Property XML_SEARCH_PRODUCT_GROUP_ESUBs() As System.Data.Linq.Table(Of XML_SEARCH_PRODUCT_GROUP_ESUB)
		Get
			Return Me.GetTable(Of XML_SEARCH_PRODUCT_GROUP_ESUB)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_FRGNs() As System.Data.Linq.Table(Of XML_DRUG_FRGN)
		Get
			Return Me.GetTable(Of XML_DRUG_FRGN)
		End Get
	End Property
	
	Public ReadOnly Property XML_DRUG_NO_USEs() As System.Data.Linq.Table(Of XML_DRUG_NO_USE)
		Get
			Return Me.GetTable(Of XML_DRUG_NO_USE)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_SEARCH_DRUG_LCN_ESUB")>  _
Partial Public Class XML_SEARCH_DRUG_LCN_ESUB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _lcnno As String
	
	Private _pvncd As String
	
	Private _lcntpcd As String
	
	Private _lcnsid As String
	
	Private _GROUPNAME As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _Identify As String
	
	Private _lcnno_no As String
	
	Private _lcnno_noo As String
	
	Private _lcnno_not_pvnabbr As String
	
	Private _typee As String
	
	Private _licen As String
	
	Private _licen_addr As String
	
	Private _licen_address As String
	
	Private _licen_time As String
	
	Private _grannm_lo As String
	
	Private _grannm_addr As String
	
	Private _grannm_address As String
	
	Private _thanm As String
	
	Private _thaaddr As String
	
	Private _tharoom As String
	
	Private _thafloor As String
	
	Private _thabuilding As String
	
	Private _thasoi As String
	
	Private _tharoad As String
	
	Private _thamu As String
	
	Private _thathmblnm As String
	
	Private _zipcode As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _thanm_addr As String
	
	Private _thanm_address As String
	
	Private _thaamphrnm As String
	
	Private _thachngwtnm As String
	
	Private _cncnm As String
	
	Private _appdate As String
	
	Private _expyear As String
	
	Private _lmdfdate As String
	
	Private _grouptype As String
	
	Private _Newcode_not As String
	
	Private _LICENSE_NO_SEARCH As String
	
	Private _LICENSE_NO_SEARCH2 As String
	
	Private _IDA_dalcn As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _pvnabbr As String
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _cnccd As System.Nullable(Of Integer)
	
	Private _CER_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnGROUPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPNAMEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnIdentifyChanging(value As String)
    End Sub
    Partial Private Sub OnIdentifyChanged()
    End Sub
    Partial Private Sub Onlcnno_noChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_noChanged()
    End Sub
    Partial Private Sub Onlcnno_nooChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_nooChanged()
    End Sub
    Partial Private Sub Onlcnno_not_pvnabbrChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_not_pvnabbrChanged()
    End Sub
    Partial Private Sub OntypeeChanging(value As String)
    End Sub
    Partial Private Sub OntypeeChanged()
    End Sub
    Partial Private Sub OnlicenChanging(value As String)
    End Sub
    Partial Private Sub OnlicenChanged()
    End Sub
    Partial Private Sub Onlicen_addrChanging(value As String)
    End Sub
    Partial Private Sub Onlicen_addrChanged()
    End Sub
    Partial Private Sub Onlicen_addressChanging(value As String)
    End Sub
    Partial Private Sub Onlicen_addressChanged()
    End Sub
    Partial Private Sub Onlicen_timeChanging(value As String)
    End Sub
    Partial Private Sub Onlicen_timeChanged()
    End Sub
    Partial Private Sub Ongrannm_loChanging(value As String)
    End Sub
    Partial Private Sub Ongrannm_loChanged()
    End Sub
    Partial Private Sub Ongrannm_addrChanging(value As String)
    End Sub
    Partial Private Sub Ongrannm_addrChanged()
    End Sub
    Partial Private Sub Ongrannm_addressChanging(value As String)
    End Sub
    Partial Private Sub Ongrannm_addressChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OntharoomChanging(value As String)
    End Sub
    Partial Private Sub OntharoomChanged()
    End Sub
    Partial Private Sub OnthafloorChanging(value As String)
    End Sub
    Partial Private Sub OnthafloorChanged()
    End Sub
    Partial Private Sub OnthabuildingChanging(value As String)
    End Sub
    Partial Private Sub OnthabuildingChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnthamuChanging(value As String)
    End Sub
    Partial Private Sub OnthamuChanged()
    End Sub
    Partial Private Sub OnthathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthathmblnmChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub Onthanm_addrChanging(value As String)
    End Sub
    Partial Private Sub Onthanm_addrChanged()
    End Sub
    Partial Private Sub Onthanm_addressChanging(value As String)
    End Sub
    Partial Private Sub Onthanm_addressChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OncncnmChanging(value As String)
    End Sub
    Partial Private Sub OncncnmChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As String)
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnexpyearChanging(value As String)
    End Sub
    Partial Private Sub OnexpyearChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As String)
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OngrouptypeChanging(value As String)
    End Sub
    Partial Private Sub OngrouptypeChanged()
    End Sub
    Partial Private Sub OnNewcode_notChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_notChanged()
    End Sub
    Partial Private Sub OnLICENSE_NO_SEARCHChanging(value As String)
    End Sub
    Partial Private Sub OnLICENSE_NO_SEARCHChanged()
    End Sub
    Partial Private Sub OnLICENSE_NO_SEARCH2Changing(value As String)
    End Sub
    Partial Private Sub OnLICENSE_NO_SEARCH2Changed()
    End Sub
    Partial Private Sub OnIDA_dalcnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_dalcnChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="VarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="VarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="VarChar(MAX)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPNAME", DbType:="VarChar(MAX)")>  _
	Public Property GROUPNAME() As String
		Get
			Return Me._GROUPNAME
		End Get
		Set
			If (String.Equals(Me._GROUPNAME, value) = false) Then
				Me.OnGROUPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPNAME = value
				Me.SendPropertyChanged("GROUPNAME")
				Me.OnGROUPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="VarChar(MAX)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identify", DbType:="VarChar(MAX)")>  _
	Public Property Identify() As String
		Get
			Return Me._Identify
		End Get
		Set
			If (String.Equals(Me._Identify, value) = false) Then
				Me.OnIdentifyChanging(value)
				Me.SendPropertyChanging
				Me._Identify = value
				Me.SendPropertyChanged("Identify")
				Me.OnIdentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_no", DbType:="VarChar(MAX)")>  _
	Public Property lcnno_no() As String
		Get
			Return Me._lcnno_no
		End Get
		Set
			If (String.Equals(Me._lcnno_no, value) = false) Then
				Me.Onlcnno_noChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_no = value
				Me.SendPropertyChanged("lcnno_no")
				Me.Onlcnno_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_noo", DbType:="VarChar(MAX)")>  _
	Public Property lcnno_noo() As String
		Get
			Return Me._lcnno_noo
		End Get
		Set
			If (String.Equals(Me._lcnno_noo, value) = false) Then
				Me.Onlcnno_nooChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_noo = value
				Me.SendPropertyChanged("lcnno_noo")
				Me.Onlcnno_nooChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_not_pvnabbr", DbType:="VarChar(MAX)")>  _
	Public Property lcnno_not_pvnabbr() As String
		Get
			Return Me._lcnno_not_pvnabbr
		End Get
		Set
			If (String.Equals(Me._lcnno_not_pvnabbr, value) = false) Then
				Me.Onlcnno_not_pvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_not_pvnabbr = value
				Me.SendPropertyChanged("lcnno_not_pvnabbr")
				Me.Onlcnno_not_pvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typee", DbType:="VarChar(MAX)")>  _
	Public Property typee() As String
		Get
			Return Me._typee
		End Get
		Set
			If (String.Equals(Me._typee, value) = false) Then
				Me.OntypeeChanging(value)
				Me.SendPropertyChanging
				Me._typee = value
				Me.SendPropertyChanged("typee")
				Me.OntypeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen", DbType:="VarChar(MAX)")>  _
	Public Property licen() As String
		Get
			Return Me._licen
		End Get
		Set
			If (String.Equals(Me._licen, value) = false) Then
				Me.OnlicenChanging(value)
				Me.SendPropertyChanging
				Me._licen = value
				Me.SendPropertyChanged("licen")
				Me.OnlicenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen_addr", DbType:="VarChar(MAX)")>  _
	Public Property licen_addr() As String
		Get
			Return Me._licen_addr
		End Get
		Set
			If (String.Equals(Me._licen_addr, value) = false) Then
				Me.Onlicen_addrChanging(value)
				Me.SendPropertyChanging
				Me._licen_addr = value
				Me.SendPropertyChanged("licen_addr")
				Me.Onlicen_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen_address", DbType:="VarChar(MAX)")>  _
	Public Property licen_address() As String
		Get
			Return Me._licen_address
		End Get
		Set
			If (String.Equals(Me._licen_address, value) = false) Then
				Me.Onlicen_addressChanging(value)
				Me.SendPropertyChanging
				Me._licen_address = value
				Me.SendPropertyChanged("licen_address")
				Me.Onlicen_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen_time", DbType:="VarChar(MAX)")>  _
	Public Property licen_time() As String
		Get
			Return Me._licen_time
		End Get
		Set
			If (String.Equals(Me._licen_time, value) = false) Then
				Me.Onlicen_timeChanging(value)
				Me.SendPropertyChanging
				Me._licen_time = value
				Me.SendPropertyChanged("licen_time")
				Me.Onlicen_timeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grannm_lo", DbType:="VarChar(MAX)")>  _
	Public Property grannm_lo() As String
		Get
			Return Me._grannm_lo
		End Get
		Set
			If (String.Equals(Me._grannm_lo, value) = false) Then
				Me.Ongrannm_loChanging(value)
				Me.SendPropertyChanging
				Me._grannm_lo = value
				Me.SendPropertyChanged("grannm_lo")
				Me.Ongrannm_loChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grannm_addr", DbType:="VarChar(MAX)")>  _
	Public Property grannm_addr() As String
		Get
			Return Me._grannm_addr
		End Get
		Set
			If (String.Equals(Me._grannm_addr, value) = false) Then
				Me.Ongrannm_addrChanging(value)
				Me.SendPropertyChanging
				Me._grannm_addr = value
				Me.SendPropertyChanged("grannm_addr")
				Me.Ongrannm_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grannm_address", DbType:="VarChar(MAX)")>  _
	Public Property grannm_address() As String
		Get
			Return Me._grannm_address
		End Get
		Set
			If (String.Equals(Me._grannm_address, value) = false) Then
				Me.Ongrannm_addressChanging(value)
				Me.SendPropertyChanging
				Me._grannm_address = value
				Me.SendPropertyChanged("grannm_address")
				Me.Ongrannm_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="VarChar(MAX)")>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoom", DbType:="NVarChar(MAX)")>  _
	Public Property tharoom() As String
		Get
			Return Me._tharoom
		End Get
		Set
			If (String.Equals(Me._tharoom, value) = false) Then
				Me.OntharoomChanging(value)
				Me.SendPropertyChanging
				Me._tharoom = value
				Me.SendPropertyChanged("tharoom")
				Me.OntharoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafloor", DbType:="NVarChar(MAX)")>  _
	Public Property thafloor() As String
		Get
			Return Me._thafloor
		End Get
		Set
			If (String.Equals(Me._thafloor, value) = false) Then
				Me.OnthafloorChanging(value)
				Me.SendPropertyChanging
				Me._thafloor = value
				Me.SendPropertyChanged("thafloor")
				Me.OnthafloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thabuilding", DbType:="NVarChar(MAX)")>  _
	Public Property thabuilding() As String
		Get
			Return Me._thabuilding
		End Get
		Set
			If (String.Equals(Me._thabuilding, value) = false) Then
				Me.OnthabuildingChanging(value)
				Me.SendPropertyChanging
				Me._thabuilding = value
				Me.SendPropertyChanged("thabuilding")
				Me.OnthabuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property thamu() As String
		Get
			Return Me._thamu
		End Get
		Set
			If (String.Equals(Me._thamu, value) = false) Then
				Me.OnthamuChanging(value)
				Me.SendPropertyChanging
				Me._thamu = value
				Me.SendPropertyChanged("thamu")
				Me.OnthamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm() As String
		Get
			Return Me._thathmblnm
		End Get
		Set
			If (String.Equals(Me._thathmblnm, value) = false) Then
				Me.OnthathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm = value
				Me.SendPropertyChanged("thathmblnm")
				Me.OnthathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="NVarChar(MAX)")>  _
	Public Property zipcode() As String
		Get
			Return Me._zipcode
		End Get
		Set
			If (String.Equals(Me._zipcode, value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm_addr", DbType:="VarChar(MAX)")>  _
	Public Property thanm_addr() As String
		Get
			Return Me._thanm_addr
		End Get
		Set
			If (String.Equals(Me._thanm_addr, value) = false) Then
				Me.Onthanm_addrChanging(value)
				Me.SendPropertyChanging
				Me._thanm_addr = value
				Me.SendPropertyChanged("thanm_addr")
				Me.Onthanm_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm_address", DbType:="VarChar(MAX)")>  _
	Public Property thanm_address() As String
		Get
			Return Me._thanm_address
		End Get
		Set
			If (String.Equals(Me._thanm_address, value) = false) Then
				Me.Onthanm_addressChanging(value)
				Me.SendPropertyChanging
				Me._thanm_address = value
				Me.SendPropertyChanged("thanm_address")
				Me.Onthanm_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="VarChar(MAX)")>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="VarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnm", DbType:="VarChar(MAX)")>  _
	Public Property cncnm() As String
		Get
			Return Me._cncnm
		End Get
		Set
			If (String.Equals(Me._cncnm, value) = false) Then
				Me.OncncnmChanging(value)
				Me.SendPropertyChanging
				Me._cncnm = value
				Me.SendPropertyChanged("cncnm")
				Me.OncncnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="VarChar(MAX)")>  _
	Public Property appdate() As String
		Get
			Return Me._appdate
		End Get
		Set
			If (String.Equals(Me._appdate, value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expyear", DbType:="VarChar(MAX)")>  _
	Public Property expyear() As String
		Get
			Return Me._expyear
		End Get
		Set
			If (String.Equals(Me._expyear, value) = false) Then
				Me.OnexpyearChanging(value)
				Me.SendPropertyChanging
				Me._expyear = value
				Me.SendPropertyChanged("expyear")
				Me.OnexpyearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="VarChar(MAX)")>  _
	Public Property lmdfdate() As String
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (String.Equals(Me._lmdfdate, value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grouptype", DbType:="NChar(10)")>  _
	Public Property grouptype() As String
		Get
			Return Me._grouptype
		End Get
		Set
			If (String.Equals(Me._grouptype, value) = false) Then
				Me.OngrouptypeChanging(value)
				Me.SendPropertyChanging
				Me._grouptype = value
				Me.SendPropertyChanged("grouptype")
				Me.OngrouptypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_not", DbType:="VarChar(MAX)")>  _
	Public Property Newcode_not() As String
		Get
			Return Me._Newcode_not
		End Get
		Set
			If (String.Equals(Me._Newcode_not, value) = false) Then
				Me.OnNewcode_notChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_not = value
				Me.SendPropertyChanged("Newcode_not")
				Me.OnNewcode_notChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICENSE_NO_SEARCH", DbType:="NVarChar(MAX)")>  _
	Public Property LICENSE_NO_SEARCH() As String
		Get
			Return Me._LICENSE_NO_SEARCH
		End Get
		Set
			If (String.Equals(Me._LICENSE_NO_SEARCH, value) = false) Then
				Me.OnLICENSE_NO_SEARCHChanging(value)
				Me.SendPropertyChanging
				Me._LICENSE_NO_SEARCH = value
				Me.SendPropertyChanged("LICENSE_NO_SEARCH")
				Me.OnLICENSE_NO_SEARCHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICENSE_NO_SEARCH2", DbType:="NVarChar(MAX)")>  _
	Public Property LICENSE_NO_SEARCH2() As String
		Get
			Return Me._LICENSE_NO_SEARCH2
		End Get
		Set
			If (String.Equals(Me._LICENSE_NO_SEARCH2, value) = false) Then
				Me.OnLICENSE_NO_SEARCH2Changing(value)
				Me.SendPropertyChanging
				Me._LICENSE_NO_SEARCH2 = value
				Me.SendPropertyChanged("LICENSE_NO_SEARCH2")
				Me.OnLICENSE_NO_SEARCH2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_dalcn", DbType:="Int")>  _
	Public Property IDA_dalcn() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_dalcn
		End Get
		Set
			If (Me._IDA_dalcn.Equals(value) = false) Then
				Me.OnIDA_dalcnChanging(value)
				Me.SendPropertyChanging
				Me._IDA_dalcn = value
				Me.SendPropertyChanged("IDA_dalcn")
				Me.OnIDA_dalcnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="NVarChar(MAX)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="Int")>  _
	Public Property cnccd() As System.Nullable(Of Integer)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_CONTAIN")>  _
Partial Public Class XML_DRUG_CONTAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _SUBTITLE_SIZE_DRUG As String
	
	Private _SMALL_AMOUNT As String
	
	Private _SMALL_UNIT As String
	
	Private _BIG_UNIT As String
	
	Private _BIG_AMOUNT As System.Nullable(Of Double)
	
	Private _MEDIUM_AMOUNT As String
	
	Private _MEDIUM_UNIT As String
	
	Private _BARCODE As String
	
	Private _SUM As String
	
	Private _CONRAIN As String
	
	Private _STATUS_CONRAIN As String
	
	Private _updateDate As System.Nullable(Of Date)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _Newcode As String
	
	Private _IDA_DRRGT_PACKAGE_DETAIL As System.Nullable(Of Integer)
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnSUBTITLE_SIZE_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnSUBTITLE_SIZE_DRUGChanged()
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub OnBIG_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnBIG_UNITChanged()
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanged()
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanged()
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanged()
    End Sub
    Partial Private Sub OnBARCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBARCODEChanged()
    End Sub
    Partial Private Sub OnSUMChanging(value As String)
    End Sub
    Partial Private Sub OnSUMChanged()
    End Sub
    Partial Private Sub OnCONRAINChanging(value As String)
    End Sub
    Partial Private Sub OnCONRAINChanged()
    End Sub
    Partial Private Sub OnSTATUS_CONRAINChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_CONRAINChanged()
    End Sub
    Partial Private Sub OnupdateDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnupdateDateChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnIDA_DRRGT_PACKAGE_DETAILChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_DRRGT_PACKAGE_DETAILChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUBTITLE_SIZE_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property SUBTITLE_SIZE_DRUG() As String
		Get
			Return Me._SUBTITLE_SIZE_DRUG
		End Get
		Set
			If (String.Equals(Me._SUBTITLE_SIZE_DRUG, value) = false) Then
				Me.OnSUBTITLE_SIZE_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._SUBTITLE_SIZE_DRUG = value
				Me.SendPropertyChanged("SUBTITLE_SIZE_DRUG")
				Me.OnSUBTITLE_SIZE_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_AMOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property SMALL_AMOUNT() As String
		Get
			Return Me._SMALL_AMOUNT
		End Get
		Set
			If (String.Equals(Me._SMALL_AMOUNT, value) = false) Then
				Me.OnSMALL_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_AMOUNT = value
				Me.SendPropertyChanged("SMALL_AMOUNT")
				Me.OnSMALL_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property SMALL_UNIT() As String
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (String.Equals(Me._SMALL_UNIT, value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property BIG_UNIT() As String
		Get
			Return Me._BIG_UNIT
		End Get
		Set
			If (String.Equals(Me._BIG_UNIT, value) = false) Then
				Me.OnBIG_UNITChanging(value)
				Me.SendPropertyChanging
				Me._BIG_UNIT = value
				Me.SendPropertyChanged("BIG_UNIT")
				Me.OnBIG_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_AMOUNT", DbType:="Float")>  _
	Public Property BIG_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._BIG_AMOUNT
		End Get
		Set
			If (Me._BIG_AMOUNT.Equals(value) = false) Then
				Me.OnBIG_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BIG_AMOUNT = value
				Me.SendPropertyChanged("BIG_AMOUNT")
				Me.OnBIG_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_AMOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property MEDIUM_AMOUNT() As String
		Get
			Return Me._MEDIUM_AMOUNT
		End Get
		Set
			If (String.Equals(Me._MEDIUM_AMOUNT, value) = false) Then
				Me.OnMEDIUM_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_AMOUNT = value
				Me.SendPropertyChanged("MEDIUM_AMOUNT")
				Me.OnMEDIUM_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property MEDIUM_UNIT() As String
		Get
			Return Me._MEDIUM_UNIT
		End Get
		Set
			If (String.Equals(Me._MEDIUM_UNIT, value) = false) Then
				Me.OnMEDIUM_UNITChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_UNIT = value
				Me.SendPropertyChanged("MEDIUM_UNIT")
				Me.OnMEDIUM_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BARCODE", DbType:="NVarChar(MAX)")>  _
	Public Property BARCODE() As String
		Get
			Return Me._BARCODE
		End Get
		Set
			If (String.Equals(Me._BARCODE, value) = false) Then
				Me.OnBARCODEChanging(value)
				Me.SendPropertyChanging
				Me._BARCODE = value
				Me.SendPropertyChanged("BARCODE")
				Me.OnBARCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM", DbType:="NVarChar(MAX)")>  _
	Public Property SUM() As String
		Get
			Return Me._SUM
		End Get
		Set
			If (String.Equals(Me._SUM, value) = false) Then
				Me.OnSUMChanging(value)
				Me.SendPropertyChanging
				Me._SUM = value
				Me.SendPropertyChanged("SUM")
				Me.OnSUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONRAIN", DbType:="NVarChar(MAX)")>  _
	Public Property CONRAIN() As String
		Get
			Return Me._CONRAIN
		End Get
		Set
			If (String.Equals(Me._CONRAIN, value) = false) Then
				Me.OnCONRAINChanging(value)
				Me.SendPropertyChanging
				Me._CONRAIN = value
				Me.SendPropertyChanged("CONRAIN")
				Me.OnCONRAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_CONRAIN", DbType:="NChar(10)")>  _
	Public Property STATUS_CONRAIN() As String
		Get
			Return Me._STATUS_CONRAIN
		End Get
		Set
			If (String.Equals(Me._STATUS_CONRAIN, value) = false) Then
				Me.OnSTATUS_CONRAINChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_CONRAIN = value
				Me.SendPropertyChanged("STATUS_CONRAIN")
				Me.OnSTATUS_CONRAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_updateDate", DbType:="Date")>  _
	Public Property updateDate() As System.Nullable(Of Date)
		Get
			Return Me._updateDate
		End Get
		Set
			If (Me._updateDate.Equals(value) = false) Then
				Me.OnupdateDateChanging(value)
				Me.SendPropertyChanging
				Me._updateDate = value
				Me.SendPropertyChanged("updateDate")
				Me.OnupdateDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_DRRGT_PACKAGE_DETAIL", DbType:="Int")>  _
	Public Property IDA_DRRGT_PACKAGE_DETAIL() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_DRRGT_PACKAGE_DETAIL
		End Get
		Set
			If (Me._IDA_DRRGT_PACKAGE_DETAIL.Equals(value) = false) Then
				Me.OnIDA_DRRGT_PACKAGE_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._IDA_DRRGT_PACKAGE_DETAIL = value
				Me.SendPropertyChanged("IDA_DRRGT_PACKAGE_DETAIL")
				Me.OnIDA_DRRGT_PACKAGE_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(255)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_CODE")>  _
Partial Public Class XML_DRUG_CODE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _CODE_DL As String
	
	Private _CODE_ECTD_IDENIFIER As String
	
	Private _TMT_VTM As String
	
	Private _TMT_GP As String
	
	Private _TMT_GPU As String
	
	Private _TMT_TPU As String
	
	Private _GTIN As String
	
	Private _UNII As String
	
	Private _DC24 As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnCODE_DLChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_DLChanged()
    End Sub
    Partial Private Sub OnCODE_ECTD_IDENIFIERChanging(value As String)
    End Sub
    Partial Private Sub OnCODE_ECTD_IDENIFIERChanged()
    End Sub
    Partial Private Sub OnTMT_VTMChanging(value As String)
    End Sub
    Partial Private Sub OnTMT_VTMChanged()
    End Sub
    Partial Private Sub OnTMT_GPChanging(value As String)
    End Sub
    Partial Private Sub OnTMT_GPChanged()
    End Sub
    Partial Private Sub OnTMT_GPUChanging(value As String)
    End Sub
    Partial Private Sub OnTMT_GPUChanged()
    End Sub
    Partial Private Sub OnTMT_TPUChanging(value As String)
    End Sub
    Partial Private Sub OnTMT_TPUChanged()
    End Sub
    Partial Private Sub OnGTINChanging(value As String)
    End Sub
    Partial Private Sub OnGTINChanged()
    End Sub
    Partial Private Sub OnUNIIChanging(value As String)
    End Sub
    Partial Private Sub OnUNIIChanged()
    End Sub
    Partial Private Sub OnDC24Changing(value As String)
    End Sub
    Partial Private Sub OnDC24Changed()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_DL", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_DL() As String
		Get
			Return Me._CODE_DL
		End Get
		Set
			If (String.Equals(Me._CODE_DL, value) = false) Then
				Me.OnCODE_DLChanging(value)
				Me.SendPropertyChanging
				Me._CODE_DL = value
				Me.SendPropertyChanged("CODE_DL")
				Me.OnCODE_DLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE_ECTD_IDENIFIER", DbType:="NVarChar(MAX)")>  _
	Public Property CODE_ECTD_IDENIFIER() As String
		Get
			Return Me._CODE_ECTD_IDENIFIER
		End Get
		Set
			If (String.Equals(Me._CODE_ECTD_IDENIFIER, value) = false) Then
				Me.OnCODE_ECTD_IDENIFIERChanging(value)
				Me.SendPropertyChanging
				Me._CODE_ECTD_IDENIFIER = value
				Me.SendPropertyChanged("CODE_ECTD_IDENIFIER")
				Me.OnCODE_ECTD_IDENIFIERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMT_VTM", DbType:="NVarChar(MAX)")>  _
	Public Property TMT_VTM() As String
		Get
			Return Me._TMT_VTM
		End Get
		Set
			If (String.Equals(Me._TMT_VTM, value) = false) Then
				Me.OnTMT_VTMChanging(value)
				Me.SendPropertyChanging
				Me._TMT_VTM = value
				Me.SendPropertyChanged("TMT_VTM")
				Me.OnTMT_VTMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMT_GP", DbType:="NVarChar(MAX)")>  _
	Public Property TMT_GP() As String
		Get
			Return Me._TMT_GP
		End Get
		Set
			If (String.Equals(Me._TMT_GP, value) = false) Then
				Me.OnTMT_GPChanging(value)
				Me.SendPropertyChanging
				Me._TMT_GP = value
				Me.SendPropertyChanged("TMT_GP")
				Me.OnTMT_GPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMT_GPU", DbType:="NVarChar(MAX)")>  _
	Public Property TMT_GPU() As String
		Get
			Return Me._TMT_GPU
		End Get
		Set
			If (String.Equals(Me._TMT_GPU, value) = false) Then
				Me.OnTMT_GPUChanging(value)
				Me.SendPropertyChanging
				Me._TMT_GPU = value
				Me.SendPropertyChanged("TMT_GPU")
				Me.OnTMT_GPUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TMT_TPU", DbType:="NVarChar(MAX)")>  _
	Public Property TMT_TPU() As String
		Get
			Return Me._TMT_TPU
		End Get
		Set
			If (String.Equals(Me._TMT_TPU, value) = false) Then
				Me.OnTMT_TPUChanging(value)
				Me.SendPropertyChanging
				Me._TMT_TPU = value
				Me.SendPropertyChanged("TMT_TPU")
				Me.OnTMT_TPUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GTIN", DbType:="NVarChar(MAX)")>  _
	Public Property GTIN() As String
		Get
			Return Me._GTIN
		End Get
		Set
			If (String.Equals(Me._GTIN, value) = false) Then
				Me.OnGTINChanging(value)
				Me.SendPropertyChanging
				Me._GTIN = value
				Me.SendPropertyChanged("GTIN")
				Me.OnGTINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNII", DbType:="NVarChar(MAX)")>  _
	Public Property UNII() As String
		Get
			Return Me._UNII
		End Get
		Set
			If (String.Equals(Me._UNII, value) = false) Then
				Me.OnUNIIChanging(value)
				Me.SendPropertyChanging
				Me._UNII = value
				Me.SendPropertyChanged("UNII")
				Me.OnUNIIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DC24", DbType:="NVarChar(MAX)")>  _
	Public Property DC24() As String
		Get
			Return Me._DC24
		End Get
		Set
			If (String.Equals(Me._DC24, value) = false) Then
				Me.OnDC24Changing(value)
				Me.SendPropertyChanging
				Me._DC24 = value
				Me.SendPropertyChanged("DC24")
				Me.OnDC24Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_COLOR")>  _
Partial Public Class XML_DRUG_COLOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _seqno As String
	
	Private _drgchrtha As String
	
	Private _drgchreng As String
	
	Private _Newcode As String
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnseqnoChanging(value As String)
    End Sub
    Partial Private Sub OnseqnoChanged()
    End Sub
    Partial Private Sub OndrgchrthaChanging(value As String)
    End Sub
    Partial Private Sub OndrgchrthaChanged()
    End Sub
    Partial Private Sub OndrgchrengChanging(value As String)
    End Sub
    Partial Private Sub OndrgchrengChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_seqno", DbType:="NVarChar(10)")>  _
	Public Property seqno() As String
		Get
			Return Me._seqno
		End Get
		Set
			If (String.Equals(Me._seqno, value) = false) Then
				Me.OnseqnoChanging(value)
				Me.SendPropertyChanging
				Me._seqno = value
				Me.SendPropertyChanged("seqno")
				Me.OnseqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgchrtha", DbType:="NVarChar(MAX)")>  _
	Public Property drgchrtha() As String
		Get
			Return Me._drgchrtha
		End Get
		Set
			If (String.Equals(Me._drgchrtha, value) = false) Then
				Me.OndrgchrthaChanging(value)
				Me.SendPropertyChanging
				Me._drgchrtha = value
				Me.SendPropertyChanged("drgchrtha")
				Me.OndrgchrthaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgchreng", DbType:="NVarChar(MAX)")>  _
	Public Property drgchreng() As String
		Get
			Return Me._drgchreng
		End Get
		Set
			If (String.Equals(Me._drgchreng, value) = false) Then
				Me.OndrgchrengChanging(value)
				Me.SendPropertyChanging
				Me._drgchreng = value
				Me.SendPropertyChanged("drgchreng")
				Me.OndrgchrengChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_RECIPE_GROUP")>  _
Partial Public Class XML_DRUG_RECIPE_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _lcnno As String
	
	Private _lcnsid As String
	
	Private _rgtno As String
	
	Private _version As String
	
	Private _register As String
	
	Private _rid As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _atccd As String
	
	Private _atcnm As String
	
	Private _Newcode As String
	
	Private _ATCCDL1 As String
	
	Private _ATCCDL2 As String
	
	Private _ATCCDL3 As String
	
	Private _ATCCDL4 As String
	
	Private _ATCCDL5 As String
	
	Private _ATCCDL6 As String
	
	Private _ATCNML1 As String
	
	Private _ATCNML2 As String
	
	Private _ATCNML3 As String
	
	Private _ATCNML4 As String
	
	Private _ATCNML5 As String
	
	Private _ATCNML6 As String
	
	Private _WHODDDAmount As String
	
	Private _WHODDDUnit As String
	
	Private _DDD As String
	
	Private _UNIT_CD As String
	
	Private _Adm_R As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnversionChanging(value As String)
    End Sub
    Partial Private Sub OnversionChanged()
    End Sub
    Partial Private Sub OnregisterChanging(value As String)
    End Sub
    Partial Private Sub OnregisterChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnatccdChanging(value As String)
    End Sub
    Partial Private Sub OnatccdChanged()
    End Sub
    Partial Private Sub OnatcnmChanging(value As String)
    End Sub
    Partial Private Sub OnatcnmChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnATCCDL1Changing(value As String)
    End Sub
    Partial Private Sub OnATCCDL1Changed()
    End Sub
    Partial Private Sub OnATCCDL2Changing(value As String)
    End Sub
    Partial Private Sub OnATCCDL2Changed()
    End Sub
    Partial Private Sub OnATCCDL3Changing(value As String)
    End Sub
    Partial Private Sub OnATCCDL3Changed()
    End Sub
    Partial Private Sub OnATCCDL4Changing(value As String)
    End Sub
    Partial Private Sub OnATCCDL4Changed()
    End Sub
    Partial Private Sub OnATCCDL5Changing(value As String)
    End Sub
    Partial Private Sub OnATCCDL5Changed()
    End Sub
    Partial Private Sub OnATCCDL6Changing(value As String)
    End Sub
    Partial Private Sub OnATCCDL6Changed()
    End Sub
    Partial Private Sub OnATCNML1Changing(value As String)
    End Sub
    Partial Private Sub OnATCNML1Changed()
    End Sub
    Partial Private Sub OnATCNML2Changing(value As String)
    End Sub
    Partial Private Sub OnATCNML2Changed()
    End Sub
    Partial Private Sub OnATCNML3Changing(value As String)
    End Sub
    Partial Private Sub OnATCNML3Changed()
    End Sub
    Partial Private Sub OnATCNML4Changing(value As String)
    End Sub
    Partial Private Sub OnATCNML4Changed()
    End Sub
    Partial Private Sub OnATCNML5Changing(value As String)
    End Sub
    Partial Private Sub OnATCNML5Changed()
    End Sub
    Partial Private Sub OnATCNML6Changing(value As String)
    End Sub
    Partial Private Sub OnATCNML6Changed()
    End Sub
    Partial Private Sub OnWHODDDAmountChanging(value As String)
    End Sub
    Partial Private Sub OnWHODDDAmountChanged()
    End Sub
    Partial Private Sub OnWHODDDUnitChanging(value As String)
    End Sub
    Partial Private Sub OnWHODDDUnitChanged()
    End Sub
    Partial Private Sub OnDDDChanging(value As String)
    End Sub
    Partial Private Sub OnDDDChanged()
    End Sub
    Partial Private Sub OnUNIT_CDChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_CDChanged()
    End Sub
    Partial Private Sub OnAdm_RChanging(value As String)
    End Sub
    Partial Private Sub OnAdm_RChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(10)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(10)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(10)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(10)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_version", DbType:="NVarChar(10)")>  _
	Public Property version() As String
		Get
			Return Me._version
		End Get
		Set
			If (String.Equals(Me._version, value) = false) Then
				Me.OnversionChanging(value)
				Me.SendPropertyChanging
				Me._version = value
				Me.SendPropertyChanged("version")
				Me.OnversionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_register", DbType:="NVarChar(MAX)")>  _
	Public Property register() As String
		Get
			Return Me._register
		End Get
		Set
			If (String.Equals(Me._register, value) = false) Then
				Me.OnregisterChanging(value)
				Me.SendPropertyChanging
				Me._register = value
				Me.SendPropertyChanged("register")
				Me.OnregisterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_atccd", DbType:="NVarChar(10)")>  _
	Public Property atccd() As String
		Get
			Return Me._atccd
		End Get
		Set
			If (String.Equals(Me._atccd, value) = false) Then
				Me.OnatccdChanging(value)
				Me.SendPropertyChanging
				Me._atccd = value
				Me.SendPropertyChanged("atccd")
				Me.OnatccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_atcnm", DbType:="NVarChar(MAX)")>  _
	Public Property atcnm() As String
		Get
			Return Me._atcnm
		End Get
		Set
			If (String.Equals(Me._atcnm, value) = false) Then
				Me.OnatcnmChanging(value)
				Me.SendPropertyChanging
				Me._atcnm = value
				Me.SendPropertyChanged("atcnm")
				Me.OnatcnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCCDL1", DbType:="NVarChar(50)")>  _
	Public Property ATCCDL1() As String
		Get
			Return Me._ATCCDL1
		End Get
		Set
			If (String.Equals(Me._ATCCDL1, value) = false) Then
				Me.OnATCCDL1Changing(value)
				Me.SendPropertyChanging
				Me._ATCCDL1 = value
				Me.SendPropertyChanged("ATCCDL1")
				Me.OnATCCDL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCCDL2", DbType:="NVarChar(50)")>  _
	Public Property ATCCDL2() As String
		Get
			Return Me._ATCCDL2
		End Get
		Set
			If (String.Equals(Me._ATCCDL2, value) = false) Then
				Me.OnATCCDL2Changing(value)
				Me.SendPropertyChanging
				Me._ATCCDL2 = value
				Me.SendPropertyChanged("ATCCDL2")
				Me.OnATCCDL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCCDL3", DbType:="NVarChar(50)")>  _
	Public Property ATCCDL3() As String
		Get
			Return Me._ATCCDL3
		End Get
		Set
			If (String.Equals(Me._ATCCDL3, value) = false) Then
				Me.OnATCCDL3Changing(value)
				Me.SendPropertyChanging
				Me._ATCCDL3 = value
				Me.SendPropertyChanged("ATCCDL3")
				Me.OnATCCDL3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCCDL4", DbType:="NVarChar(50)")>  _
	Public Property ATCCDL4() As String
		Get
			Return Me._ATCCDL4
		End Get
		Set
			If (String.Equals(Me._ATCCDL4, value) = false) Then
				Me.OnATCCDL4Changing(value)
				Me.SendPropertyChanging
				Me._ATCCDL4 = value
				Me.SendPropertyChanged("ATCCDL4")
				Me.OnATCCDL4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCCDL5", DbType:="NVarChar(50)")>  _
	Public Property ATCCDL5() As String
		Get
			Return Me._ATCCDL5
		End Get
		Set
			If (String.Equals(Me._ATCCDL5, value) = false) Then
				Me.OnATCCDL5Changing(value)
				Me.SendPropertyChanging
				Me._ATCCDL5 = value
				Me.SendPropertyChanged("ATCCDL5")
				Me.OnATCCDL5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCCDL6", DbType:="NVarChar(50)")>  _
	Public Property ATCCDL6() As String
		Get
			Return Me._ATCCDL6
		End Get
		Set
			If (String.Equals(Me._ATCCDL6, value) = false) Then
				Me.OnATCCDL6Changing(value)
				Me.SendPropertyChanging
				Me._ATCCDL6 = value
				Me.SendPropertyChanged("ATCCDL6")
				Me.OnATCCDL6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCNML1", DbType:="NVarChar(50)")>  _
	Public Property ATCNML1() As String
		Get
			Return Me._ATCNML1
		End Get
		Set
			If (String.Equals(Me._ATCNML1, value) = false) Then
				Me.OnATCNML1Changing(value)
				Me.SendPropertyChanging
				Me._ATCNML1 = value
				Me.SendPropertyChanged("ATCNML1")
				Me.OnATCNML1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCNML2", DbType:="NVarChar(50)")>  _
	Public Property ATCNML2() As String
		Get
			Return Me._ATCNML2
		End Get
		Set
			If (String.Equals(Me._ATCNML2, value) = false) Then
				Me.OnATCNML2Changing(value)
				Me.SendPropertyChanging
				Me._ATCNML2 = value
				Me.SendPropertyChanged("ATCNML2")
				Me.OnATCNML2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCNML3", DbType:="NVarChar(50)")>  _
	Public Property ATCNML3() As String
		Get
			Return Me._ATCNML3
		End Get
		Set
			If (String.Equals(Me._ATCNML3, value) = false) Then
				Me.OnATCNML3Changing(value)
				Me.SendPropertyChanging
				Me._ATCNML3 = value
				Me.SendPropertyChanged("ATCNML3")
				Me.OnATCNML3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCNML4", DbType:="NVarChar(50)")>  _
	Public Property ATCNML4() As String
		Get
			Return Me._ATCNML4
		End Get
		Set
			If (String.Equals(Me._ATCNML4, value) = false) Then
				Me.OnATCNML4Changing(value)
				Me.SendPropertyChanging
				Me._ATCNML4 = value
				Me.SendPropertyChanged("ATCNML4")
				Me.OnATCNML4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCNML5", DbType:="NVarChar(50)")>  _
	Public Property ATCNML5() As String
		Get
			Return Me._ATCNML5
		End Get
		Set
			If (String.Equals(Me._ATCNML5, value) = false) Then
				Me.OnATCNML5Changing(value)
				Me.SendPropertyChanging
				Me._ATCNML5 = value
				Me.SendPropertyChanged("ATCNML5")
				Me.OnATCNML5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATCNML6", DbType:="NVarChar(50)")>  _
	Public Property ATCNML6() As String
		Get
			Return Me._ATCNML6
		End Get
		Set
			If (String.Equals(Me._ATCNML6, value) = false) Then
				Me.OnATCNML6Changing(value)
				Me.SendPropertyChanging
				Me._ATCNML6 = value
				Me.SendPropertyChanged("ATCNML6")
				Me.OnATCNML6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHODDDAmount", DbType:="NVarChar(50)")>  _
	Public Property WHODDDAmount() As String
		Get
			Return Me._WHODDDAmount
		End Get
		Set
			If (String.Equals(Me._WHODDDAmount, value) = false) Then
				Me.OnWHODDDAmountChanging(value)
				Me.SendPropertyChanging
				Me._WHODDDAmount = value
				Me.SendPropertyChanged("WHODDDAmount")
				Me.OnWHODDDAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WHODDDUnit", DbType:="NVarChar(50)")>  _
	Public Property WHODDDUnit() As String
		Get
			Return Me._WHODDDUnit
		End Get
		Set
			If (String.Equals(Me._WHODDDUnit, value) = false) Then
				Me.OnWHODDDUnitChanging(value)
				Me.SendPropertyChanging
				Me._WHODDDUnit = value
				Me.SendPropertyChanged("WHODDDUnit")
				Me.OnWHODDDUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DDD", DbType:="NVarChar(MAX)")>  _
	Public Property DDD() As String
		Get
			Return Me._DDD
		End Get
		Set
			If (String.Equals(Me._DDD, value) = false) Then
				Me.OnDDDChanging(value)
				Me.SendPropertyChanging
				Me._DDD = value
				Me.SendPropertyChanged("DDD")
				Me.OnDDDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_CD", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_CD() As String
		Get
			Return Me._UNIT_CD
		End Get
		Set
			If (String.Equals(Me._UNIT_CD, value) = false) Then
				Me.OnUNIT_CDChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_CD = value
				Me.SendPropertyChanged("UNIT_CD")
				Me.OnUNIT_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Adm_R", DbType:="NVarChar(MAX)")>  _
	Public Property Adm_R() As String
		Get
			Return Me._Adm_R
		End Get
		Set
			If (String.Equals(Me._Adm_R, value) = false) Then
				Me.OnAdm_RChanging(value)
				Me.SendPropertyChanging
				Me._Adm_R = value
				Me.SendPropertyChanged("Adm_R")
				Me.OnAdm_RChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_STOWAGR")>  _
Partial Public Class XML_DRUG_STOWAGR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _lcnno As String
	
	Private _lcnsid As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _keepdesc As String
	
	Private _drgchrtha As String
	
	Private _useage As String
	
	Private _tplow As String
	
	Private _tphigh As String
	
	Private _drug_age_days As String
	
	Private _drug_age_month As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnkeepdescChanging(value As String)
    End Sub
    Partial Private Sub OnkeepdescChanged()
    End Sub
    Partial Private Sub OndrgchrthaChanging(value As String)
    End Sub
    Partial Private Sub OndrgchrthaChanged()
    End Sub
    Partial Private Sub OnuseageChanging(value As String)
    End Sub
    Partial Private Sub OnuseageChanged()
    End Sub
    Partial Private Sub OntplowChanging(value As String)
    End Sub
    Partial Private Sub OntplowChanged()
    End Sub
    Partial Private Sub OntphighChanging(value As String)
    End Sub
    Partial Private Sub OntphighChanged()
    End Sub
    Partial Private Sub Ondrug_age_daysChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_age_daysChanged()
    End Sub
    Partial Private Sub Ondrug_age_monthChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_age_monthChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(50)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_keepdesc", DbType:="NVarChar(MAX)")>  _
	Public Property keepdesc() As String
		Get
			Return Me._keepdesc
		End Get
		Set
			If (String.Equals(Me._keepdesc, value) = false) Then
				Me.OnkeepdescChanging(value)
				Me.SendPropertyChanging
				Me._keepdesc = value
				Me.SendPropertyChanged("keepdesc")
				Me.OnkeepdescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgchrtha", DbType:="NVarChar(MAX)")>  _
	Public Property drgchrtha() As String
		Get
			Return Me._drgchrtha
		End Get
		Set
			If (String.Equals(Me._drgchrtha, value) = false) Then
				Me.OndrgchrthaChanging(value)
				Me.SendPropertyChanging
				Me._drgchrtha = value
				Me.SendPropertyChanged("drgchrtha")
				Me.OndrgchrthaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_useage", DbType:="NVarChar(50)")>  _
	Public Property useage() As String
		Get
			Return Me._useage
		End Get
		Set
			If (String.Equals(Me._useage, value) = false) Then
				Me.OnuseageChanging(value)
				Me.SendPropertyChanging
				Me._useage = value
				Me.SendPropertyChanged("useage")
				Me.OnuseageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tplow", DbType:="NVarChar(50)")>  _
	Public Property tplow() As String
		Get
			Return Me._tplow
		End Get
		Set
			If (String.Equals(Me._tplow, value) = false) Then
				Me.OntplowChanging(value)
				Me.SendPropertyChanging
				Me._tplow = value
				Me.SendPropertyChanged("tplow")
				Me.OntplowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tphigh", DbType:="NVarChar(50)")>  _
	Public Property tphigh() As String
		Get
			Return Me._tphigh
		End Get
		Set
			If (String.Equals(Me._tphigh, value) = false) Then
				Me.OntphighChanging(value)
				Me.SendPropertyChanging
				Me._tphigh = value
				Me.SendPropertyChanged("tphigh")
				Me.OntphighChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_age_days", DbType:="NVarChar(50)")>  _
	Public Property drug_age_days() As String
		Get
			Return Me._drug_age_days
		End Get
		Set
			If (String.Equals(Me._drug_age_days, value) = false) Then
				Me.Ondrug_age_daysChanging(value)
				Me.SendPropertyChanging
				Me._drug_age_days = value
				Me.SendPropertyChanged("drug_age_days")
				Me.Ondrug_age_daysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_age_month", DbType:="NVarChar(50)")>  _
	Public Property drug_age_month() As String
		Get
			Return Me._drug_age_month
		End Get
		Set
			If (String.Equals(Me._drug_age_month, value) = false) Then
				Me.Ondrug_age_monthChanging(value)
				Me.SendPropertyChanging
				Me._drug_age_month = value
				Me.SendPropertyChanged("drug_age_month")
				Me.Ondrug_age_monthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_ANIMAL")>  _
Partial Public Class XML_DRUG_ANIMAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _lcnno As String
	
	Private _lcnsid As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _ampartnm As String
	
	Private _amlsubnm As String
	
	Private _amltpnm As String
	
	Private _usetpnm As String
	
	Private _stpdrg As String
	
	Private _rid As String
	
	Private _Newcode As String
	
	Private _register As String
	
	Private _licen_loca As String
	
	Private _thaclassnm As String
	
	Private _cncnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnampartnmChanging(value As String)
    End Sub
    Partial Private Sub OnampartnmChanged()
    End Sub
    Partial Private Sub OnamlsubnmChanging(value As String)
    End Sub
    Partial Private Sub OnamlsubnmChanged()
    End Sub
    Partial Private Sub OnamltpnmChanging(value As String)
    End Sub
    Partial Private Sub OnamltpnmChanged()
    End Sub
    Partial Private Sub OnusetpnmChanging(value As String)
    End Sub
    Partial Private Sub OnusetpnmChanged()
    End Sub
    Partial Private Sub OnstpdrgChanging(value As String)
    End Sub
    Partial Private Sub OnstpdrgChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnregisterChanging(value As String)
    End Sub
    Partial Private Sub OnregisterChanged()
    End Sub
    Partial Private Sub Onlicen_locaChanging(value As String)
    End Sub
    Partial Private Sub Onlicen_locaChanged()
    End Sub
    Partial Private Sub OnthaclassnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaclassnmChanged()
    End Sub
    Partial Private Sub OncncnmChanging(value As String)
    End Sub
    Partial Private Sub OncncnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(50)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ampartnm", DbType:="NVarChar(MAX)")>  _
	Public Property ampartnm() As String
		Get
			Return Me._ampartnm
		End Get
		Set
			If (String.Equals(Me._ampartnm, value) = false) Then
				Me.OnampartnmChanging(value)
				Me.SendPropertyChanging
				Me._ampartnm = value
				Me.SendPropertyChanged("ampartnm")
				Me.OnampartnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubnm", DbType:="NVarChar(MAX)")>  _
	Public Property amlsubnm() As String
		Get
			Return Me._amlsubnm
		End Get
		Set
			If (String.Equals(Me._amlsubnm, value) = false) Then
				Me.OnamlsubnmChanging(value)
				Me.SendPropertyChanging
				Me._amlsubnm = value
				Me.SendPropertyChanged("amlsubnm")
				Me.OnamlsubnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpnm", DbType:="NVarChar(MAX)")>  _
	Public Property amltpnm() As String
		Get
			Return Me._amltpnm
		End Get
		Set
			If (String.Equals(Me._amltpnm, value) = false) Then
				Me.OnamltpnmChanging(value)
				Me.SendPropertyChanging
				Me._amltpnm = value
				Me.SendPropertyChanged("amltpnm")
				Me.OnamltpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpnm", DbType:="NVarChar(MAX)")>  _
	Public Property usetpnm() As String
		Get
			Return Me._usetpnm
		End Get
		Set
			If (String.Equals(Me._usetpnm, value) = false) Then
				Me.OnusetpnmChanging(value)
				Me.SendPropertyChanging
				Me._usetpnm = value
				Me.SendPropertyChanged("usetpnm")
				Me.OnusetpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stpdrg", DbType:="NVarChar(50)")>  _
	Public Property stpdrg() As String
		Get
			Return Me._stpdrg
		End Get
		Set
			If (String.Equals(Me._stpdrg, value) = false) Then
				Me.OnstpdrgChanging(value)
				Me.SendPropertyChanging
				Me._stpdrg = value
				Me.SendPropertyChanged("stpdrg")
				Me.OnstpdrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(50)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_register", DbType:="NVarChar(50)")>  _
	Public Property register() As String
		Get
			Return Me._register
		End Get
		Set
			If (String.Equals(Me._register, value) = false) Then
				Me.OnregisterChanging(value)
				Me.SendPropertyChanging
				Me._register = value
				Me.SendPropertyChanged("register")
				Me.OnregisterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen_loca", DbType:="NVarChar(MAX)")>  _
	Public Property licen_loca() As String
		Get
			Return Me._licen_loca
		End Get
		Set
			If (String.Equals(Me._licen_loca, value) = false) Then
				Me.Onlicen_locaChanging(value)
				Me.SendPropertyChanging
				Me._licen_loca = value
				Me.SendPropertyChanged("licen_loca")
				Me.Onlicen_locaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaclassnm", DbType:="NVarChar(50)")>  _
	Public Property thaclassnm() As String
		Get
			Return Me._thaclassnm
		End Get
		Set
			If (String.Equals(Me._thaclassnm, value) = false) Then
				Me.OnthaclassnmChanging(value)
				Me.SendPropertyChanging
				Me._thaclassnm = value
				Me.SendPropertyChanged("thaclassnm")
				Me.OnthaclassnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnm", DbType:="NVarChar(50)")>  _
	Public Property cncnm() As String
		Get
			Return Me._cncnm
		End Get
		Set
			If (String.Equals(Me._cncnm, value) = false) Then
				Me.OncncnmChanging(value)
				Me.SendPropertyChanging
				Me._cncnm = value
				Me.SendPropertyChanged("cncnm")
				Me.OncncnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_SOURCE_OF_RM")>  _
Partial Public Class XML_DRUG_SOURCE_OF_RM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _iowacd As String
	
	Private _iowanm As String
	
	Private _phm15dgt As String
	
	Private _engdrgnm As String
	
	Private _engfrgnnm As String
	
	Private _engfrgnnm_addr As String
	
	Private _engcntnm As String
	
	Private _LICEN_PHM15DGT As String
	
	Private _STANDARD_PLACE_STAPLE As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OniowanmChanging(value As String)
    End Sub
    Partial Private Sub OniowanmChanged()
    End Sub
    Partial Private Sub Onphm15dgtChanging(value As String)
    End Sub
    Partial Private Sub Onphm15dgtChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnengfrgnnmChanging(value As String)
    End Sub
    Partial Private Sub OnengfrgnnmChanged()
    End Sub
    Partial Private Sub Onengfrgnnm_addrChanging(value As String)
    End Sub
    Partial Private Sub Onengfrgnnm_addrChanged()
    End Sub
    Partial Private Sub OnengcntnmChanging(value As String)
    End Sub
    Partial Private Sub OnengcntnmChanged()
    End Sub
    Partial Private Sub OnLICEN_PHM15DGTChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_PHM15DGTChanged()
    End Sub
    Partial Private Sub OnSTANDARD_PLACE_STAPLEChanging(value As String)
    End Sub
    Partial Private Sub OnSTANDARD_PLACE_STAPLEChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="NVarChar(MAX)")>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm", DbType:="NVarChar(MAX)")>  _
	Public Property iowanm() As String
		Get
			Return Me._iowanm
		End Get
		Set
			If (String.Equals(Me._iowanm, value) = false) Then
				Me.OniowanmChanging(value)
				Me.SendPropertyChanging
				Me._iowanm = value
				Me.SendPropertyChanged("iowanm")
				Me.OniowanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phm15dgt", DbType:="NVarChar(MAX)")>  _
	Public Property phm15dgt() As String
		Get
			Return Me._phm15dgt
		End Get
		Set
			If (String.Equals(Me._phm15dgt, value) = false) Then
				Me.Onphm15dgtChanging(value)
				Me.SendPropertyChanging
				Me._phm15dgt = value
				Me.SendPropertyChanged("phm15dgt")
				Me.Onphm15dgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm", DbType:="NVarChar(MAX)")>  _
	Public Property engfrgnnm() As String
		Get
			Return Me._engfrgnnm
		End Get
		Set
			If (String.Equals(Me._engfrgnnm, value) = false) Then
				Me.OnengfrgnnmChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm = value
				Me.SendPropertyChanged("engfrgnnm")
				Me.OnengfrgnnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm_addr", DbType:="NVarChar(MAX)")>  _
	Public Property engfrgnnm_addr() As String
		Get
			Return Me._engfrgnnm_addr
		End Get
		Set
			If (String.Equals(Me._engfrgnnm_addr, value) = false) Then
				Me.Onengfrgnnm_addrChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm_addr = value
				Me.SendPropertyChanged("engfrgnnm_addr")
				Me.Onengfrgnnm_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engcntnm", DbType:="NVarChar(MAX)")>  _
	Public Property engcntnm() As String
		Get
			Return Me._engcntnm
		End Get
		Set
			If (String.Equals(Me._engcntnm, value) = false) Then
				Me.OnengcntnmChanging(value)
				Me.SendPropertyChanging
				Me._engcntnm = value
				Me.SendPropertyChanged("engcntnm")
				Me.OnengcntnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_PHM15DGT", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_PHM15DGT() As String
		Get
			Return Me._LICEN_PHM15DGT
		End Get
		Set
			If (String.Equals(Me._LICEN_PHM15DGT, value) = false) Then
				Me.OnLICEN_PHM15DGTChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_PHM15DGT = value
				Me.SendPropertyChanged("LICEN_PHM15DGT")
				Me.OnLICEN_PHM15DGTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STANDARD_PLACE_STAPLE", DbType:="NVarChar(MAX)")>  _
	Public Property STANDARD_PLACE_STAPLE() As String
		Get
			Return Me._STANDARD_PLACE_STAPLE
		End Get
		Set
			If (String.Equals(Me._STANDARD_PLACE_STAPLE, value) = false) Then
				Me.OnSTANDARD_PLACE_STAPLEChanging(value)
				Me.SendPropertyChanging
				Me._STANDARD_PLACE_STAPLE = value
				Me.SendPropertyChanged("STANDARD_PLACE_STAPLE")
				Me.OnSTANDARD_PLACE_STAPLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_AGENT")>  _
Partial Public Class XML_DRUG_AGENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rcvno As String
	
	Private _lcnno As String
	
	Private _lcnno_no As String
	
	Private _identify As String
	
	Private _rid As String
	
	Private _agent As String
	
	Private _addr As String
	
	Private _tel As String
	
	Private _province As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onlcnno_noChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_noChanged()
    End Sub
    Partial Private Sub OnidentifyChanging(value As String)
    End Sub
    Partial Private Sub OnidentifyChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnagentChanging(value As String)
    End Sub
    Partial Private Sub OnagentChanged()
    End Sub
    Partial Private Sub OnaddrChanging(value As String)
    End Sub
    Partial Private Sub OnaddrChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnprovinceChanging(value As String)
    End Sub
    Partial Private Sub OnprovinceChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(50)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_no", DbType:="NVarChar(50)")>  _
	Public Property lcnno_no() As String
		Get
			Return Me._lcnno_no
		End Get
		Set
			If (String.Equals(Me._lcnno_no, value) = false) Then
				Me.Onlcnno_noChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_no = value
				Me.SendPropertyChanged("lcnno_no")
				Me.Onlcnno_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_identify", DbType:="NVarChar(50)")>  _
	Public Property identify() As String
		Get
			Return Me._identify
		End Get
		Set
			If (String.Equals(Me._identify, value) = false) Then
				Me.OnidentifyChanging(value)
				Me.SendPropertyChanging
				Me._identify = value
				Me.SendPropertyChanged("identify")
				Me.OnidentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_agent", DbType:="NVarChar(MAX)")>  _
	Public Property agent() As String
		Get
			Return Me._agent
		End Get
		Set
			If (String.Equals(Me._agent, value) = false) Then
				Me.OnagentChanging(value)
				Me.SendPropertyChanging
				Me._agent = value
				Me.SendPropertyChanged("agent")
				Me.OnagentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr", DbType:="NVarChar(MAX)")>  _
	Public Property addr() As String
		Get
			Return Me._addr
		End Get
		Set
			If (String.Equals(Me._addr, value) = false) Then
				Me.OnaddrChanging(value)
				Me.SendPropertyChanging
				Me._addr = value
				Me.SendPropertyChanged("addr")
				Me.OnaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(50)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_province", DbType:="NVarChar(MAX)")>  _
	Public Property province() As String
		Get
			Return Me._province
		End Get
		Set
			If (String.Equals(Me._province, value) = false) Then
				Me.OnprovinceChanging(value)
				Me.SendPropertyChanging
				Me._province = value
				Me.SendPropertyChanged("province")
				Me.OnprovinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_CONTROL_ANALYZE")>  _
Partial Public Class XML_DRUG_CONTROL_ANALYZE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _TOPIC_ANALYZE As String
	
	Private _METHOD_ANALYZE As String
	
	Private _SET_STANDARDS As String
	
	Private _REF_STANDARDS As String
	
	Private _Newcode As String
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnTOPIC_ANALYZEChanging(value As String)
    End Sub
    Partial Private Sub OnTOPIC_ANALYZEChanged()
    End Sub
    Partial Private Sub OnMETHOD_ANALYZEChanging(value As String)
    End Sub
    Partial Private Sub OnMETHOD_ANALYZEChanged()
    End Sub
    Partial Private Sub OnSET_STANDARDSChanging(value As String)
    End Sub
    Partial Private Sub OnSET_STANDARDSChanged()
    End Sub
    Partial Private Sub OnREF_STANDARDSChanging(value As String)
    End Sub
    Partial Private Sub OnREF_STANDARDSChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOPIC_ANALYZE", DbType:="NVarChar(MAX)")>  _
	Public Property TOPIC_ANALYZE() As String
		Get
			Return Me._TOPIC_ANALYZE
		End Get
		Set
			If (String.Equals(Me._TOPIC_ANALYZE, value) = false) Then
				Me.OnTOPIC_ANALYZEChanging(value)
				Me.SendPropertyChanging
				Me._TOPIC_ANALYZE = value
				Me.SendPropertyChanged("TOPIC_ANALYZE")
				Me.OnTOPIC_ANALYZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_METHOD_ANALYZE", DbType:="NVarChar(MAX)")>  _
	Public Property METHOD_ANALYZE() As String
		Get
			Return Me._METHOD_ANALYZE
		End Get
		Set
			If (String.Equals(Me._METHOD_ANALYZE, value) = false) Then
				Me.OnMETHOD_ANALYZEChanging(value)
				Me.SendPropertyChanging
				Me._METHOD_ANALYZE = value
				Me.SendPropertyChanged("METHOD_ANALYZE")
				Me.OnMETHOD_ANALYZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SET_STANDARDS", DbType:="NVarChar(MAX)")>  _
	Public Property SET_STANDARDS() As String
		Get
			Return Me._SET_STANDARDS
		End Get
		Set
			If (String.Equals(Me._SET_STANDARDS, value) = false) Then
				Me.OnSET_STANDARDSChanging(value)
				Me.SendPropertyChanging
				Me._SET_STANDARDS = value
				Me.SendPropertyChanged("SET_STANDARDS")
				Me.OnSET_STANDARDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_STANDARDS", DbType:="NVarChar(MAX)")>  _
	Public Property REF_STANDARDS() As String
		Get
			Return Me._REF_STANDARDS
		End Get
		Set
			If (String.Equals(Me._REF_STANDARDS, value) = false) Then
				Me.OnREF_STANDARDSChanging(value)
				Me.SendPropertyChanging
				Me._REF_STANDARDS = value
				Me.SendPropertyChanged("REF_STANDARDS")
				Me.OnREF_STANDARDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(255)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_CONDITION_TABEAN")>  _
Partial Public Class XML_DRUG_CONDITION_TABEAN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _CONDITION_PUBLIC As String
	
	Private _CONDITION_SERVANT As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnCONDITION_PUBLICChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITION_PUBLICChanged()
    End Sub
    Partial Private Sub OnCONDITION_SERVANTChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITION_SERVANTChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION_PUBLIC", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION_PUBLIC() As String
		Get
			Return Me._CONDITION_PUBLIC
		End Get
		Set
			If (String.Equals(Me._CONDITION_PUBLIC, value) = false) Then
				Me.OnCONDITION_PUBLICChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION_PUBLIC = value
				Me.SendPropertyChanged("CONDITION_PUBLIC")
				Me.OnCONDITION_PUBLICChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION_SERVANT", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION_SERVANT() As String
		Get
			Return Me._CONDITION_SERVANT
		End Get
		Set
			If (String.Equals(Me._CONDITION_SERVANT, value) = false) Then
				Me.OnCONDITION_SERVANTChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION_SERVANT = value
				Me.SendPropertyChanged("CONDITION_SERVANT")
				Me.OnCONDITION_SERVANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_STORY_EDIT_HISTORY")>  _
Partial Public Class XML_DRUG_STORY_EDIT_HISTORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rcvno As String
	
	Private _rid As String
	
	Private _story_edit_Title As String
	
	Private _story_edit_date As System.Nullable(Of Date)
	
	Private _story_edit_appdate As System.Nullable(Of Date)
	
	Private _story_edit_status As String
	
	Private _story_edit_desc As String
	
	Private _edtcd1 As String
	
	Private _edtcd2 As String
	
	Private _edtcd3 As String
	
	Private _edtcd4 As String
	
	Private _edtcd5 As String
	
	Private _edtcd6 As String
	
	Private _edtcd7 As String
	
	Private _edtcd8 As String
	
	Private _edtcd9 As String
	
	Private _edtcd10 As String
	
	Private _edtcd11 As String
	
	Private _edtcd12 As String
	
	Private _edtcd13 As String
	
	Private _edtcd14 As String
	
	Private _edtcd15 As String
	
	Private _edtcd16 As String
	
	Private _edtcd17 As String
	
	Private _csnm As String
	
	Private _dtl As String
	
	Private _Newcode As String
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub Onstory_edit_TitleChanging(value As String)
    End Sub
    Partial Private Sub Onstory_edit_TitleChanged()
    End Sub
    Partial Private Sub Onstory_edit_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onstory_edit_dateChanged()
    End Sub
    Partial Private Sub Onstory_edit_appdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onstory_edit_appdateChanged()
    End Sub
    Partial Private Sub Onstory_edit_statusChanging(value As String)
    End Sub
    Partial Private Sub Onstory_edit_statusChanged()
    End Sub
    Partial Private Sub Onstory_edit_descChanging(value As String)
    End Sub
    Partial Private Sub Onstory_edit_descChanged()
    End Sub
    Partial Private Sub Onedtcd1Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd1Changed()
    End Sub
    Partial Private Sub Onedtcd2Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd2Changed()
    End Sub
    Partial Private Sub Onedtcd3Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd3Changed()
    End Sub
    Partial Private Sub Onedtcd4Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd4Changed()
    End Sub
    Partial Private Sub Onedtcd5Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd5Changed()
    End Sub
    Partial Private Sub Onedtcd6Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd6Changed()
    End Sub
    Partial Private Sub Onedtcd7Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd7Changed()
    End Sub
    Partial Private Sub Onedtcd8Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd8Changed()
    End Sub
    Partial Private Sub Onedtcd9Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd9Changed()
    End Sub
    Partial Private Sub Onedtcd10Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd10Changed()
    End Sub
    Partial Private Sub Onedtcd11Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd11Changed()
    End Sub
    Partial Private Sub Onedtcd12Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd12Changed()
    End Sub
    Partial Private Sub Onedtcd13Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd13Changed()
    End Sub
    Partial Private Sub Onedtcd14Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd14Changed()
    End Sub
    Partial Private Sub Onedtcd15Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd15Changed()
    End Sub
    Partial Private Sub Onedtcd16Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd16Changed()
    End Sub
    Partial Private Sub Onedtcd17Changing(value As String)
    End Sub
    Partial Private Sub Onedtcd17Changed()
    End Sub
    Partial Private Sub OncsnmChanging(value As String)
    End Sub
    Partial Private Sub OncsnmChanged()
    End Sub
    Partial Private Sub OndtlChanging(value As String)
    End Sub
    Partial Private Sub OndtlChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(50)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_story_edit_Title", DbType:="NVarChar(MAX)")>  _
	Public Property story_edit_Title() As String
		Get
			Return Me._story_edit_Title
		End Get
		Set
			If (String.Equals(Me._story_edit_Title, value) = false) Then
				Me.Onstory_edit_TitleChanging(value)
				Me.SendPropertyChanging
				Me._story_edit_Title = value
				Me.SendPropertyChanged("story_edit_Title")
				Me.Onstory_edit_TitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_story_edit_date", DbType:="Date")>  _
	Public Property story_edit_date() As System.Nullable(Of Date)
		Get
			Return Me._story_edit_date
		End Get
		Set
			If (Me._story_edit_date.Equals(value) = false) Then
				Me.Onstory_edit_dateChanging(value)
				Me.SendPropertyChanging
				Me._story_edit_date = value
				Me.SendPropertyChanged("story_edit_date")
				Me.Onstory_edit_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_story_edit_appdate", DbType:="Date")>  _
	Public Property story_edit_appdate() As System.Nullable(Of Date)
		Get
			Return Me._story_edit_appdate
		End Get
		Set
			If (Me._story_edit_appdate.Equals(value) = false) Then
				Me.Onstory_edit_appdateChanging(value)
				Me.SendPropertyChanging
				Me._story_edit_appdate = value
				Me.SendPropertyChanged("story_edit_appdate")
				Me.Onstory_edit_appdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_story_edit_status", DbType:="NVarChar(MAX)")>  _
	Public Property story_edit_status() As String
		Get
			Return Me._story_edit_status
		End Get
		Set
			If (String.Equals(Me._story_edit_status, value) = false) Then
				Me.Onstory_edit_statusChanging(value)
				Me.SendPropertyChanging
				Me._story_edit_status = value
				Me.SendPropertyChanged("story_edit_status")
				Me.Onstory_edit_statusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_story_edit_desc", DbType:="NVarChar(MAX)")>  _
	Public Property story_edit_desc() As String
		Get
			Return Me._story_edit_desc
		End Get
		Set
			If (String.Equals(Me._story_edit_desc, value) = false) Then
				Me.Onstory_edit_descChanging(value)
				Me.SendPropertyChanging
				Me._story_edit_desc = value
				Me.SendPropertyChanged("story_edit_desc")
				Me.Onstory_edit_descChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd1", DbType:="NVarChar(50)")>  _
	Public Property edtcd1() As String
		Get
			Return Me._edtcd1
		End Get
		Set
			If (String.Equals(Me._edtcd1, value) = false) Then
				Me.Onedtcd1Changing(value)
				Me.SendPropertyChanging
				Me._edtcd1 = value
				Me.SendPropertyChanged("edtcd1")
				Me.Onedtcd1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd2", DbType:="NVarChar(50)")>  _
	Public Property edtcd2() As String
		Get
			Return Me._edtcd2
		End Get
		Set
			If (String.Equals(Me._edtcd2, value) = false) Then
				Me.Onedtcd2Changing(value)
				Me.SendPropertyChanging
				Me._edtcd2 = value
				Me.SendPropertyChanged("edtcd2")
				Me.Onedtcd2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd3", DbType:="NVarChar(50)")>  _
	Public Property edtcd3() As String
		Get
			Return Me._edtcd3
		End Get
		Set
			If (String.Equals(Me._edtcd3, value) = false) Then
				Me.Onedtcd3Changing(value)
				Me.SendPropertyChanging
				Me._edtcd3 = value
				Me.SendPropertyChanged("edtcd3")
				Me.Onedtcd3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd4", DbType:="NVarChar(50)")>  _
	Public Property edtcd4() As String
		Get
			Return Me._edtcd4
		End Get
		Set
			If (String.Equals(Me._edtcd4, value) = false) Then
				Me.Onedtcd4Changing(value)
				Me.SendPropertyChanging
				Me._edtcd4 = value
				Me.SendPropertyChanged("edtcd4")
				Me.Onedtcd4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd5", DbType:="NVarChar(50)")>  _
	Public Property edtcd5() As String
		Get
			Return Me._edtcd5
		End Get
		Set
			If (String.Equals(Me._edtcd5, value) = false) Then
				Me.Onedtcd5Changing(value)
				Me.SendPropertyChanging
				Me._edtcd5 = value
				Me.SendPropertyChanged("edtcd5")
				Me.Onedtcd5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd6", DbType:="NVarChar(50)")>  _
	Public Property edtcd6() As String
		Get
			Return Me._edtcd6
		End Get
		Set
			If (String.Equals(Me._edtcd6, value) = false) Then
				Me.Onedtcd6Changing(value)
				Me.SendPropertyChanging
				Me._edtcd6 = value
				Me.SendPropertyChanged("edtcd6")
				Me.Onedtcd6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd7", DbType:="NVarChar(50)")>  _
	Public Property edtcd7() As String
		Get
			Return Me._edtcd7
		End Get
		Set
			If (String.Equals(Me._edtcd7, value) = false) Then
				Me.Onedtcd7Changing(value)
				Me.SendPropertyChanging
				Me._edtcd7 = value
				Me.SendPropertyChanged("edtcd7")
				Me.Onedtcd7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd8", DbType:="NVarChar(50)")>  _
	Public Property edtcd8() As String
		Get
			Return Me._edtcd8
		End Get
		Set
			If (String.Equals(Me._edtcd8, value) = false) Then
				Me.Onedtcd8Changing(value)
				Me.SendPropertyChanging
				Me._edtcd8 = value
				Me.SendPropertyChanged("edtcd8")
				Me.Onedtcd8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd9", DbType:="NVarChar(50)")>  _
	Public Property edtcd9() As String
		Get
			Return Me._edtcd9
		End Get
		Set
			If (String.Equals(Me._edtcd9, value) = false) Then
				Me.Onedtcd9Changing(value)
				Me.SendPropertyChanging
				Me._edtcd9 = value
				Me.SendPropertyChanged("edtcd9")
				Me.Onedtcd9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd10", DbType:="NVarChar(50)")>  _
	Public Property edtcd10() As String
		Get
			Return Me._edtcd10
		End Get
		Set
			If (String.Equals(Me._edtcd10, value) = false) Then
				Me.Onedtcd10Changing(value)
				Me.SendPropertyChanging
				Me._edtcd10 = value
				Me.SendPropertyChanged("edtcd10")
				Me.Onedtcd10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd11", DbType:="NVarChar(50)")>  _
	Public Property edtcd11() As String
		Get
			Return Me._edtcd11
		End Get
		Set
			If (String.Equals(Me._edtcd11, value) = false) Then
				Me.Onedtcd11Changing(value)
				Me.SendPropertyChanging
				Me._edtcd11 = value
				Me.SendPropertyChanged("edtcd11")
				Me.Onedtcd11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd12", DbType:="NVarChar(50)")>  _
	Public Property edtcd12() As String
		Get
			Return Me._edtcd12
		End Get
		Set
			If (String.Equals(Me._edtcd12, value) = false) Then
				Me.Onedtcd12Changing(value)
				Me.SendPropertyChanging
				Me._edtcd12 = value
				Me.SendPropertyChanged("edtcd12")
				Me.Onedtcd12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd13", DbType:="NVarChar(50)")>  _
	Public Property edtcd13() As String
		Get
			Return Me._edtcd13
		End Get
		Set
			If (String.Equals(Me._edtcd13, value) = false) Then
				Me.Onedtcd13Changing(value)
				Me.SendPropertyChanging
				Me._edtcd13 = value
				Me.SendPropertyChanged("edtcd13")
				Me.Onedtcd13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd14", DbType:="NVarChar(50)")>  _
	Public Property edtcd14() As String
		Get
			Return Me._edtcd14
		End Get
		Set
			If (String.Equals(Me._edtcd14, value) = false) Then
				Me.Onedtcd14Changing(value)
				Me.SendPropertyChanging
				Me._edtcd14 = value
				Me.SendPropertyChanged("edtcd14")
				Me.Onedtcd14Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd15", DbType:="NVarChar(50)")>  _
	Public Property edtcd15() As String
		Get
			Return Me._edtcd15
		End Get
		Set
			If (String.Equals(Me._edtcd15, value) = false) Then
				Me.Onedtcd15Changing(value)
				Me.SendPropertyChanging
				Me._edtcd15 = value
				Me.SendPropertyChanged("edtcd15")
				Me.Onedtcd15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd16", DbType:="NVarChar(50)")>  _
	Public Property edtcd16() As String
		Get
			Return Me._edtcd16
		End Get
		Set
			If (String.Equals(Me._edtcd16, value) = false) Then
				Me.Onedtcd16Changing(value)
				Me.SendPropertyChanging
				Me._edtcd16 = value
				Me.SendPropertyChanged("edtcd16")
				Me.Onedtcd16Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edtcd17", DbType:="NVarChar(50)")>  _
	Public Property edtcd17() As String
		Get
			Return Me._edtcd17
		End Get
		Set
			If (String.Equals(Me._edtcd17, value) = false) Then
				Me.Onedtcd17Changing(value)
				Me.SendPropertyChanging
				Me._edtcd17 = value
				Me.SendPropertyChanged("edtcd17")
				Me.Onedtcd17Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_csnm", DbType:="NVarChar(50)")>  _
	Public Property csnm() As String
		Get
			Return Me._csnm
		End Get
		Set
			If (String.Equals(Me._csnm, value) = false) Then
				Me.OncsnmChanging(value)
				Me.SendPropertyChanging
				Me._csnm = value
				Me.SendPropertyChanged("csnm")
				Me.OncsnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtl", DbType:="NVarChar(MAX)")>  _
	Public Property dtl() As String
		Get
			Return Me._dtl
		End Get
		Set
			If (String.Equals(Me._dtl, value) = false) Then
				Me.OndtlChanging(value)
				Me.SendPropertyChanging
				Me._dtl = value
				Me.SendPropertyChanged("dtl")
				Me.OndtlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_ANIMAL_CONSUME")>  _
Partial Public Class XML_DRUG_ANIMAL_CONSUME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _lcnno As String
	
	Private _lcnsid As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _ampartnm As String
	
	Private _amlsubnm As String
	
	Private _amltpnm As String
	
	Private _usetpnm As String
	
	Private _stpdrg As String
	
	Private _rid As String
	
	Private _Newcode As String
	
	Private _packuse As String
	
	Private _nouse As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnampartnmChanging(value As String)
    End Sub
    Partial Private Sub OnampartnmChanged()
    End Sub
    Partial Private Sub OnamlsubnmChanging(value As String)
    End Sub
    Partial Private Sub OnamlsubnmChanged()
    End Sub
    Partial Private Sub OnamltpnmChanging(value As String)
    End Sub
    Partial Private Sub OnamltpnmChanged()
    End Sub
    Partial Private Sub OnusetpnmChanging(value As String)
    End Sub
    Partial Private Sub OnusetpnmChanged()
    End Sub
    Partial Private Sub OnstpdrgChanging(value As String)
    End Sub
    Partial Private Sub OnstpdrgChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnpackuseChanging(value As String)
    End Sub
    Partial Private Sub OnpackuseChanged()
    End Sub
    Partial Private Sub OnnouseChanging(value As String)
    End Sub
    Partial Private Sub OnnouseChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(50)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ampartnm", DbType:="NVarChar(MAX)")>  _
	Public Property ampartnm() As String
		Get
			Return Me._ampartnm
		End Get
		Set
			If (String.Equals(Me._ampartnm, value) = false) Then
				Me.OnampartnmChanging(value)
				Me.SendPropertyChanging
				Me._ampartnm = value
				Me.SendPropertyChanged("ampartnm")
				Me.OnampartnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubnm", DbType:="NVarChar(MAX)")>  _
	Public Property amlsubnm() As String
		Get
			Return Me._amlsubnm
		End Get
		Set
			If (String.Equals(Me._amlsubnm, value) = false) Then
				Me.OnamlsubnmChanging(value)
				Me.SendPropertyChanging
				Me._amlsubnm = value
				Me.SendPropertyChanged("amlsubnm")
				Me.OnamlsubnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpnm", DbType:="NVarChar(MAX)")>  _
	Public Property amltpnm() As String
		Get
			Return Me._amltpnm
		End Get
		Set
			If (String.Equals(Me._amltpnm, value) = false) Then
				Me.OnamltpnmChanging(value)
				Me.SendPropertyChanging
				Me._amltpnm = value
				Me.SendPropertyChanged("amltpnm")
				Me.OnamltpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpnm", DbType:="NVarChar(MAX)")>  _
	Public Property usetpnm() As String
		Get
			Return Me._usetpnm
		End Get
		Set
			If (String.Equals(Me._usetpnm, value) = false) Then
				Me.OnusetpnmChanging(value)
				Me.SendPropertyChanging
				Me._usetpnm = value
				Me.SendPropertyChanged("usetpnm")
				Me.OnusetpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stpdrg", DbType:="NVarChar(50)")>  _
	Public Property stpdrg() As String
		Get
			Return Me._stpdrg
		End Get
		Set
			If (String.Equals(Me._stpdrg, value) = false) Then
				Me.OnstpdrgChanging(value)
				Me.SendPropertyChanging
				Me._stpdrg = value
				Me.SendPropertyChanged("stpdrg")
				Me.OnstpdrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(50)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packuse", DbType:="NVarChar(MAX)")>  _
	Public Property packuse() As String
		Get
			Return Me._packuse
		End Get
		Set
			If (String.Equals(Me._packuse, value) = false) Then
				Me.OnpackuseChanging(value)
				Me.SendPropertyChanging
				Me._packuse = value
				Me.SendPropertyChanged("packuse")
				Me.OnpackuseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nouse", DbType:="NVarChar(MAX)")>  _
	Public Property nouse() As String
		Get
			Return Me._nouse
		End Get
		Set
			If (String.Equals(Me._nouse, value) = false) Then
				Me.OnnouseChanging(value)
				Me.SendPropertyChanging
				Me._nouse = value
				Me.SendPropertyChanged("nouse")
				Me.OnnouseChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_DOC_PDF")>  _
Partial Public Class XML_DRUG_DOC_PDF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _PDF_DR_Reg As String
	
	Private _PDF_MA_Application As String
	
	Private _PDF_Production_Process As String
	
	Private _PDF_Product_information As String
	
	Private _PDF_Label As String
	
	Private _PDF_Amendment As String
	
	Private _PDF_Carnofile As String
	
	Private _PDF_Drug_Imange As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnPDF_DR_RegChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_DR_RegChanged()
    End Sub
    Partial Private Sub OnPDF_MA_ApplicationChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_MA_ApplicationChanged()
    End Sub
    Partial Private Sub OnPDF_Production_ProcessChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_Production_ProcessChanged()
    End Sub
    Partial Private Sub OnPDF_Product_informationChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_Product_informationChanged()
    End Sub
    Partial Private Sub OnPDF_LabelChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_LabelChanged()
    End Sub
    Partial Private Sub OnPDF_AmendmentChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_AmendmentChanged()
    End Sub
    Partial Private Sub OnPDF_CarnofileChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_CarnofileChanged()
    End Sub
    Partial Private Sub OnPDF_Drug_ImangeChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_Drug_ImangeChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_DR_Reg", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_DR_Reg() As String
		Get
			Return Me._PDF_DR_Reg
		End Get
		Set
			If (String.Equals(Me._PDF_DR_Reg, value) = false) Then
				Me.OnPDF_DR_RegChanging(value)
				Me.SendPropertyChanging
				Me._PDF_DR_Reg = value
				Me.SendPropertyChanged("PDF_DR_Reg")
				Me.OnPDF_DR_RegChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_MA_Application", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_MA_Application() As String
		Get
			Return Me._PDF_MA_Application
		End Get
		Set
			If (String.Equals(Me._PDF_MA_Application, value) = false) Then
				Me.OnPDF_MA_ApplicationChanging(value)
				Me.SendPropertyChanging
				Me._PDF_MA_Application = value
				Me.SendPropertyChanged("PDF_MA_Application")
				Me.OnPDF_MA_ApplicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_Production_Process", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_Production_Process() As String
		Get
			Return Me._PDF_Production_Process
		End Get
		Set
			If (String.Equals(Me._PDF_Production_Process, value) = false) Then
				Me.OnPDF_Production_ProcessChanging(value)
				Me.SendPropertyChanging
				Me._PDF_Production_Process = value
				Me.SendPropertyChanged("PDF_Production_Process")
				Me.OnPDF_Production_ProcessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_Product_information", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_Product_information() As String
		Get
			Return Me._PDF_Product_information
		End Get
		Set
			If (String.Equals(Me._PDF_Product_information, value) = false) Then
				Me.OnPDF_Product_informationChanging(value)
				Me.SendPropertyChanging
				Me._PDF_Product_information = value
				Me.SendPropertyChanged("PDF_Product_information")
				Me.OnPDF_Product_informationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_Label", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_Label() As String
		Get
			Return Me._PDF_Label
		End Get
		Set
			If (String.Equals(Me._PDF_Label, value) = false) Then
				Me.OnPDF_LabelChanging(value)
				Me.SendPropertyChanging
				Me._PDF_Label = value
				Me.SendPropertyChanged("PDF_Label")
				Me.OnPDF_LabelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_Amendment", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_Amendment() As String
		Get
			Return Me._PDF_Amendment
		End Get
		Set
			If (String.Equals(Me._PDF_Amendment, value) = false) Then
				Me.OnPDF_AmendmentChanging(value)
				Me.SendPropertyChanging
				Me._PDF_Amendment = value
				Me.SendPropertyChanged("PDF_Amendment")
				Me.OnPDF_AmendmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_Carnofile", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_Carnofile() As String
		Get
			Return Me._PDF_Carnofile
		End Get
		Set
			If (String.Equals(Me._PDF_Carnofile, value) = false) Then
				Me.OnPDF_CarnofileChanging(value)
				Me.SendPropertyChanging
				Me._PDF_Carnofile = value
				Me.SendPropertyChanged("PDF_Carnofile")
				Me.OnPDF_CarnofileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_Drug_Imange", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_Drug_Imange() As String
		Get
			Return Me._PDF_Drug_Imange
		End Get
		Set
			If (String.Equals(Me._PDF_Drug_Imange, value) = false) Then
				Me.OnPDF_Drug_ImangeChanging(value)
				Me.SendPropertyChanging
				Me._PDF_Drug_Imange = value
				Me.SendPropertyChanged("PDF_Drug_Imange")
				Me.OnPDF_Drug_ImangeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_EXPORT")>  _
Partial Public Class XML_DRUG_EXPORT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rcvno As String
	
	Private _rid As String
	
	Private _drgexp As String
	
	Private _engcntnm As String
	
	Private _cntcd As String
	
	Private _Newcode As String
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OndrgexpChanging(value As String)
    End Sub
    Partial Private Sub OndrgexpChanged()
    End Sub
    Partial Private Sub OnengcntnmChanging(value As String)
    End Sub
    Partial Private Sub OnengcntnmChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(50)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(50)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgexp", DbType:="NVarChar(MAX)")>  _
	Public Property drgexp() As String
		Get
			Return Me._drgexp
		End Get
		Set
			If (String.Equals(Me._drgexp, value) = false) Then
				Me.OndrgexpChanging(value)
				Me.SendPropertyChanging
				Me._drgexp = value
				Me.SendPropertyChanged("drgexp")
				Me.OndrgexpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engcntnm", DbType:="NVarChar(MAX)")>  _
	Public Property engcntnm() As String
		Get
			Return Me._engcntnm
		End Get
		Set
			If (String.Equals(Me._engcntnm, value) = false) Then
				Me.OnengcntnmChanging(value)
				Me.SendPropertyChanging
				Me._engcntnm = value
				Me.SendPropertyChanged("engcntnm")
				Me.OnengcntnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="NVarChar(50)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_PI")>  _
Partial Public Class XML_DRUG_PI
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _PI_Th_Name_Medicinal_Product As String
	
	Private _PI_Th_Active_Ingradient_Strenght As String
	
	Private _PI_Th_Product_Desc As String
	
	Private _PI_Th_Pharmacody_Pharmacoki As String
	
	Private _PI_Th_Pharmdynamic As String
	
	Private _PI_Th_Pharmacokinetic As String
	
	Private _PI_Th_Indication As String
	
	Private _PI_Th_Recommend_Dose As String
	
	Private _PI_Th_Administration As String
	
	Private _PI_Th_Contraindication As String
	
	Private _PI_Th_Warning_Precaution As String
	
	Private _PI_Th_Interaction As String
	
	Private _PI_Th_Pregnancy_Lactation As String
	
	Private _PI_Th_Undesirable_Effect As String
	
	Private _PI_Th_Overdose As String
	
	Private _PI_Th_Storage_Condition As String
	
	Private _PI_Th_Dose_From_Packaging As String
	
	Private _PI_Th_MA_Holder As String
	
	Private _PI_Th_MA_Number As String
	
	Private _PI_Th_Date_Approve As String
	
	Private _PI_Th_Date_Revision As String
	
	Private _PI_Eng_Name_Medicinal_Product As String
	
	Private _PI_Eng_Active_Ingradient_Strenght As String
	
	Private _PI_Eng_Product_Desc As String
	
	Private _PI_Eng_Pharmacody_Pharmacoki As String
	
	Private _PI_Eng_Pharmdynamic As String
	
	Private _PI_Eng_Pharmacokinetic As String
	
	Private _PI_Eng_Indication As String
	
	Private _PI_Eng_Recommend_Dose As String
	
	Private _PI_Eng_Administration As String
	
	Private _PI_Eng_Contraindication As String
	
	Private _PI_Eng_Warning_Precaution As String
	
	Private _PI_Eng_Interaction As String
	
	Private _PI_Eng_Pregnancy_Lactation As String
	
	Private _PI_Eng_Undesirable_Effect As String
	
	Private _PI_Eng_Overdose As String
	
	Private _PI_Eng_Storage_Condition As String
	
	Private _PI_Eng_Dose_From_Packaging As String
	
	Private _PI_Eng_MA_Holder As String
	
	Private _PI_Eng_MA_Number As String
	
	Private _PI_Eng_Date_Approve As String
	
	Private _PI_Eng_Date_Revision As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnPI_Th_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnPI_Th_Active_Ingradient_StrenghtChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Active_Ingradient_StrenghtChanged()
    End Sub
    Partial Private Sub OnPI_Th_Product_DescChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Product_DescChanged()
    End Sub
    Partial Private Sub OnPI_Th_Pharmacody_PharmacokiChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Pharmacody_PharmacokiChanged()
    End Sub
    Partial Private Sub OnPI_Th_PharmdynamicChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_PharmdynamicChanged()
    End Sub
    Partial Private Sub OnPI_Th_PharmacokineticChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_PharmacokineticChanged()
    End Sub
    Partial Private Sub OnPI_Th_IndicationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_IndicationChanged()
    End Sub
    Partial Private Sub OnPI_Th_Recommend_DoseChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Recommend_DoseChanged()
    End Sub
    Partial Private Sub OnPI_Th_AdministrationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_AdministrationChanged()
    End Sub
    Partial Private Sub OnPI_Th_ContraindicationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_ContraindicationChanged()
    End Sub
    Partial Private Sub OnPI_Th_Warning_PrecautionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Warning_PrecautionChanged()
    End Sub
    Partial Private Sub OnPI_Th_InteractionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_InteractionChanged()
    End Sub
    Partial Private Sub OnPI_Th_Pregnancy_LactationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Pregnancy_LactationChanged()
    End Sub
    Partial Private Sub OnPI_Th_Undesirable_EffectChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Undesirable_EffectChanged()
    End Sub
    Partial Private Sub OnPI_Th_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_OverdoseChanged()
    End Sub
    Partial Private Sub OnPI_Th_Storage_ConditionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Storage_ConditionChanged()
    End Sub
    Partial Private Sub OnPI_Th_Dose_From_PackagingChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Dose_From_PackagingChanged()
    End Sub
    Partial Private Sub OnPI_Th_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_MA_HolderChanged()
    End Sub
    Partial Private Sub OnPI_Th_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_MA_NumberChanged()
    End Sub
    Partial Private Sub OnPI_Th_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnPI_Th_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Active_Ingradient_StrenghtChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Active_Ingradient_StrenghtChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Product_DescChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Product_DescChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Pharmacody_PharmacokiChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Pharmacody_PharmacokiChanged()
    End Sub
    Partial Private Sub OnPI_Eng_PharmdynamicChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_PharmdynamicChanged()
    End Sub
    Partial Private Sub OnPI_Eng_PharmacokineticChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_PharmacokineticChanged()
    End Sub
    Partial Private Sub OnPI_Eng_IndicationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_IndicationChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Recommend_DoseChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Recommend_DoseChanged()
    End Sub
    Partial Private Sub OnPI_Eng_AdministrationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_AdministrationChanged()
    End Sub
    Partial Private Sub OnPI_Eng_ContraindicationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_ContraindicationChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Warning_PrecautionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Warning_PrecautionChanged()
    End Sub
    Partial Private Sub OnPI_Eng_InteractionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_InteractionChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Pregnancy_LactationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Pregnancy_LactationChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Undesirable_EffectChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Undesirable_EffectChanged()
    End Sub
    Partial Private Sub OnPI_Eng_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_OverdoseChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Storage_ConditionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Storage_ConditionChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Dose_From_PackagingChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Dose_From_PackagingChanged()
    End Sub
    Partial Private Sub OnPI_Eng_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_MA_HolderChanged()
    End Sub
    Partial Private Sub OnPI_Eng_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_MA_NumberChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Name_Medicinal_Product() As String
		Get
			Return Me._PI_Th_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._PI_Th_Name_Medicinal_Product, value) = false) Then
				Me.OnPI_Th_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Name_Medicinal_Product = value
				Me.SendPropertyChanged("PI_Th_Name_Medicinal_Product")
				Me.OnPI_Th_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Active_Ingradient_Strenght", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Active_Ingradient_Strenght() As String
		Get
			Return Me._PI_Th_Active_Ingradient_Strenght
		End Get
		Set
			If (String.Equals(Me._PI_Th_Active_Ingradient_Strenght, value) = false) Then
				Me.OnPI_Th_Active_Ingradient_StrenghtChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Active_Ingradient_Strenght = value
				Me.SendPropertyChanged("PI_Th_Active_Ingradient_Strenght")
				Me.OnPI_Th_Active_Ingradient_StrenghtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Product_Desc", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Product_Desc() As String
		Get
			Return Me._PI_Th_Product_Desc
		End Get
		Set
			If (String.Equals(Me._PI_Th_Product_Desc, value) = false) Then
				Me.OnPI_Th_Product_DescChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Product_Desc = value
				Me.SendPropertyChanged("PI_Th_Product_Desc")
				Me.OnPI_Th_Product_DescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Pharmacody_Pharmacoki", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Pharmacody_Pharmacoki() As String
		Get
			Return Me._PI_Th_Pharmacody_Pharmacoki
		End Get
		Set
			If (String.Equals(Me._PI_Th_Pharmacody_Pharmacoki, value) = false) Then
				Me.OnPI_Th_Pharmacody_PharmacokiChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Pharmacody_Pharmacoki = value
				Me.SendPropertyChanged("PI_Th_Pharmacody_Pharmacoki")
				Me.OnPI_Th_Pharmacody_PharmacokiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Pharmdynamic", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Pharmdynamic() As String
		Get
			Return Me._PI_Th_Pharmdynamic
		End Get
		Set
			If (String.Equals(Me._PI_Th_Pharmdynamic, value) = false) Then
				Me.OnPI_Th_PharmdynamicChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Pharmdynamic = value
				Me.SendPropertyChanged("PI_Th_Pharmdynamic")
				Me.OnPI_Th_PharmdynamicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Pharmacokinetic", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Pharmacokinetic() As String
		Get
			Return Me._PI_Th_Pharmacokinetic
		End Get
		Set
			If (String.Equals(Me._PI_Th_Pharmacokinetic, value) = false) Then
				Me.OnPI_Th_PharmacokineticChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Pharmacokinetic = value
				Me.SendPropertyChanged("PI_Th_Pharmacokinetic")
				Me.OnPI_Th_PharmacokineticChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Indication", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Indication() As String
		Get
			Return Me._PI_Th_Indication
		End Get
		Set
			If (String.Equals(Me._PI_Th_Indication, value) = false) Then
				Me.OnPI_Th_IndicationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Indication = value
				Me.SendPropertyChanged("PI_Th_Indication")
				Me.OnPI_Th_IndicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Recommend_Dose", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Recommend_Dose() As String
		Get
			Return Me._PI_Th_Recommend_Dose
		End Get
		Set
			If (String.Equals(Me._PI_Th_Recommend_Dose, value) = false) Then
				Me.OnPI_Th_Recommend_DoseChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Recommend_Dose = value
				Me.SendPropertyChanged("PI_Th_Recommend_Dose")
				Me.OnPI_Th_Recommend_DoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Administration", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Administration() As String
		Get
			Return Me._PI_Th_Administration
		End Get
		Set
			If (String.Equals(Me._PI_Th_Administration, value) = false) Then
				Me.OnPI_Th_AdministrationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Administration = value
				Me.SendPropertyChanged("PI_Th_Administration")
				Me.OnPI_Th_AdministrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Contraindication", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Contraindication() As String
		Get
			Return Me._PI_Th_Contraindication
		End Get
		Set
			If (String.Equals(Me._PI_Th_Contraindication, value) = false) Then
				Me.OnPI_Th_ContraindicationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Contraindication = value
				Me.SendPropertyChanged("PI_Th_Contraindication")
				Me.OnPI_Th_ContraindicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Warning_Precaution", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Warning_Precaution() As String
		Get
			Return Me._PI_Th_Warning_Precaution
		End Get
		Set
			If (String.Equals(Me._PI_Th_Warning_Precaution, value) = false) Then
				Me.OnPI_Th_Warning_PrecautionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Warning_Precaution = value
				Me.SendPropertyChanged("PI_Th_Warning_Precaution")
				Me.OnPI_Th_Warning_PrecautionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Interaction", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Interaction() As String
		Get
			Return Me._PI_Th_Interaction
		End Get
		Set
			If (String.Equals(Me._PI_Th_Interaction, value) = false) Then
				Me.OnPI_Th_InteractionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Interaction = value
				Me.SendPropertyChanged("PI_Th_Interaction")
				Me.OnPI_Th_InteractionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Pregnancy_Lactation", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Pregnancy_Lactation() As String
		Get
			Return Me._PI_Th_Pregnancy_Lactation
		End Get
		Set
			If (String.Equals(Me._PI_Th_Pregnancy_Lactation, value) = false) Then
				Me.OnPI_Th_Pregnancy_LactationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Pregnancy_Lactation = value
				Me.SendPropertyChanged("PI_Th_Pregnancy_Lactation")
				Me.OnPI_Th_Pregnancy_LactationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Undesirable_Effect", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Undesirable_Effect() As String
		Get
			Return Me._PI_Th_Undesirable_Effect
		End Get
		Set
			If (String.Equals(Me._PI_Th_Undesirable_Effect, value) = false) Then
				Me.OnPI_Th_Undesirable_EffectChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Undesirable_Effect = value
				Me.SendPropertyChanged("PI_Th_Undesirable_Effect")
				Me.OnPI_Th_Undesirable_EffectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Overdose() As String
		Get
			Return Me._PI_Th_Overdose
		End Get
		Set
			If (String.Equals(Me._PI_Th_Overdose, value) = false) Then
				Me.OnPI_Th_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Overdose = value
				Me.SendPropertyChanged("PI_Th_Overdose")
				Me.OnPI_Th_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Storage_Condition", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Storage_Condition() As String
		Get
			Return Me._PI_Th_Storage_Condition
		End Get
		Set
			If (String.Equals(Me._PI_Th_Storage_Condition, value) = false) Then
				Me.OnPI_Th_Storage_ConditionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Storage_Condition = value
				Me.SendPropertyChanged("PI_Th_Storage_Condition")
				Me.OnPI_Th_Storage_ConditionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Dose_From_Packaging", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Dose_From_Packaging() As String
		Get
			Return Me._PI_Th_Dose_From_Packaging
		End Get
		Set
			If (String.Equals(Me._PI_Th_Dose_From_Packaging, value) = false) Then
				Me.OnPI_Th_Dose_From_PackagingChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Dose_From_Packaging = value
				Me.SendPropertyChanged("PI_Th_Dose_From_Packaging")
				Me.OnPI_Th_Dose_From_PackagingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_MA_Holder() As String
		Get
			Return Me._PI_Th_MA_Holder
		End Get
		Set
			If (String.Equals(Me._PI_Th_MA_Holder, value) = false) Then
				Me.OnPI_Th_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_MA_Holder = value
				Me.SendPropertyChanged("PI_Th_MA_Holder")
				Me.OnPI_Th_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_MA_Number() As String
		Get
			Return Me._PI_Th_MA_Number
		End Get
		Set
			If (String.Equals(Me._PI_Th_MA_Number, value) = false) Then
				Me.OnPI_Th_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_MA_Number = value
				Me.SendPropertyChanged("PI_Th_MA_Number")
				Me.OnPI_Th_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Date_Approve() As String
		Get
			Return Me._PI_Th_Date_Approve
		End Get
		Set
			If (String.Equals(Me._PI_Th_Date_Approve, value) = false) Then
				Me.OnPI_Th_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Date_Approve = value
				Me.SendPropertyChanged("PI_Th_Date_Approve")
				Me.OnPI_Th_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Date_Revision() As String
		Get
			Return Me._PI_Th_Date_Revision
		End Get
		Set
			If (String.Equals(Me._PI_Th_Date_Revision, value) = false) Then
				Me.OnPI_Th_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Date_Revision = value
				Me.SendPropertyChanged("PI_Th_Date_Revision")
				Me.OnPI_Th_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Name_Medicinal_Product() As String
		Get
			Return Me._PI_Eng_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Name_Medicinal_Product, value) = false) Then
				Me.OnPI_Eng_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Name_Medicinal_Product = value
				Me.SendPropertyChanged("PI_Eng_Name_Medicinal_Product")
				Me.OnPI_Eng_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Active_Ingradient_Strenght", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Active_Ingradient_Strenght() As String
		Get
			Return Me._PI_Eng_Active_Ingradient_Strenght
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Active_Ingradient_Strenght, value) = false) Then
				Me.OnPI_Eng_Active_Ingradient_StrenghtChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Active_Ingradient_Strenght = value
				Me.SendPropertyChanged("PI_Eng_Active_Ingradient_Strenght")
				Me.OnPI_Eng_Active_Ingradient_StrenghtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Product_Desc", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Product_Desc() As String
		Get
			Return Me._PI_Eng_Product_Desc
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Product_Desc, value) = false) Then
				Me.OnPI_Eng_Product_DescChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Product_Desc = value
				Me.SendPropertyChanged("PI_Eng_Product_Desc")
				Me.OnPI_Eng_Product_DescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Pharmacody_Pharmacoki", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Pharmacody_Pharmacoki() As String
		Get
			Return Me._PI_Eng_Pharmacody_Pharmacoki
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Pharmacody_Pharmacoki, value) = false) Then
				Me.OnPI_Eng_Pharmacody_PharmacokiChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Pharmacody_Pharmacoki = value
				Me.SendPropertyChanged("PI_Eng_Pharmacody_Pharmacoki")
				Me.OnPI_Eng_Pharmacody_PharmacokiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Pharmdynamic", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Pharmdynamic() As String
		Get
			Return Me._PI_Eng_Pharmdynamic
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Pharmdynamic, value) = false) Then
				Me.OnPI_Eng_PharmdynamicChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Pharmdynamic = value
				Me.SendPropertyChanged("PI_Eng_Pharmdynamic")
				Me.OnPI_Eng_PharmdynamicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Pharmacokinetic", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Pharmacokinetic() As String
		Get
			Return Me._PI_Eng_Pharmacokinetic
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Pharmacokinetic, value) = false) Then
				Me.OnPI_Eng_PharmacokineticChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Pharmacokinetic = value
				Me.SendPropertyChanged("PI_Eng_Pharmacokinetic")
				Me.OnPI_Eng_PharmacokineticChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Indication", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Indication() As String
		Get
			Return Me._PI_Eng_Indication
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Indication, value) = false) Then
				Me.OnPI_Eng_IndicationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Indication = value
				Me.SendPropertyChanged("PI_Eng_Indication")
				Me.OnPI_Eng_IndicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Recommend_Dose", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Recommend_Dose() As String
		Get
			Return Me._PI_Eng_Recommend_Dose
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Recommend_Dose, value) = false) Then
				Me.OnPI_Eng_Recommend_DoseChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Recommend_Dose = value
				Me.SendPropertyChanged("PI_Eng_Recommend_Dose")
				Me.OnPI_Eng_Recommend_DoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Administration", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Administration() As String
		Get
			Return Me._PI_Eng_Administration
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Administration, value) = false) Then
				Me.OnPI_Eng_AdministrationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Administration = value
				Me.SendPropertyChanged("PI_Eng_Administration")
				Me.OnPI_Eng_AdministrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Contraindication", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Contraindication() As String
		Get
			Return Me._PI_Eng_Contraindication
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Contraindication, value) = false) Then
				Me.OnPI_Eng_ContraindicationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Contraindication = value
				Me.SendPropertyChanged("PI_Eng_Contraindication")
				Me.OnPI_Eng_ContraindicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Warning_Precaution", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Warning_Precaution() As String
		Get
			Return Me._PI_Eng_Warning_Precaution
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Warning_Precaution, value) = false) Then
				Me.OnPI_Eng_Warning_PrecautionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Warning_Precaution = value
				Me.SendPropertyChanged("PI_Eng_Warning_Precaution")
				Me.OnPI_Eng_Warning_PrecautionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Interaction", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Interaction() As String
		Get
			Return Me._PI_Eng_Interaction
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Interaction, value) = false) Then
				Me.OnPI_Eng_InteractionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Interaction = value
				Me.SendPropertyChanged("PI_Eng_Interaction")
				Me.OnPI_Eng_InteractionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Pregnancy_Lactation", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Pregnancy_Lactation() As String
		Get
			Return Me._PI_Eng_Pregnancy_Lactation
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Pregnancy_Lactation, value) = false) Then
				Me.OnPI_Eng_Pregnancy_LactationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Pregnancy_Lactation = value
				Me.SendPropertyChanged("PI_Eng_Pregnancy_Lactation")
				Me.OnPI_Eng_Pregnancy_LactationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Undesirable_Effect", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Undesirable_Effect() As String
		Get
			Return Me._PI_Eng_Undesirable_Effect
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Undesirable_Effect, value) = false) Then
				Me.OnPI_Eng_Undesirable_EffectChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Undesirable_Effect = value
				Me.SendPropertyChanged("PI_Eng_Undesirable_Effect")
				Me.OnPI_Eng_Undesirable_EffectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Overdose() As String
		Get
			Return Me._PI_Eng_Overdose
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Overdose, value) = false) Then
				Me.OnPI_Eng_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Overdose = value
				Me.SendPropertyChanged("PI_Eng_Overdose")
				Me.OnPI_Eng_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Storage_Condition", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Storage_Condition() As String
		Get
			Return Me._PI_Eng_Storage_Condition
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Storage_Condition, value) = false) Then
				Me.OnPI_Eng_Storage_ConditionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Storage_Condition = value
				Me.SendPropertyChanged("PI_Eng_Storage_Condition")
				Me.OnPI_Eng_Storage_ConditionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Dose_From_Packaging", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Dose_From_Packaging() As String
		Get
			Return Me._PI_Eng_Dose_From_Packaging
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Dose_From_Packaging, value) = false) Then
				Me.OnPI_Eng_Dose_From_PackagingChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Dose_From_Packaging = value
				Me.SendPropertyChanged("PI_Eng_Dose_From_Packaging")
				Me.OnPI_Eng_Dose_From_PackagingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_MA_Holder() As String
		Get
			Return Me._PI_Eng_MA_Holder
		End Get
		Set
			If (String.Equals(Me._PI_Eng_MA_Holder, value) = false) Then
				Me.OnPI_Eng_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_MA_Holder = value
				Me.SendPropertyChanged("PI_Eng_MA_Holder")
				Me.OnPI_Eng_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_MA_Number() As String
		Get
			Return Me._PI_Eng_MA_Number
		End Get
		Set
			If (String.Equals(Me._PI_Eng_MA_Number, value) = false) Then
				Me.OnPI_Eng_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_MA_Number = value
				Me.SendPropertyChanged("PI_Eng_MA_Number")
				Me.OnPI_Eng_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Date_Approve() As String
		Get
			Return Me._PI_Eng_Date_Approve
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Date_Approve, value) = false) Then
				Me.OnPI_Eng_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Date_Approve = value
				Me.SendPropertyChanged("PI_Eng_Date_Approve")
				Me.OnPI_Eng_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Date_Revision() As String
		Get
			Return Me._PI_Eng_Date_Revision
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Date_Revision, value) = false) Then
				Me.OnPI_Eng_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Date_Revision = value
				Me.SendPropertyChanged("PI_Eng_Date_Revision")
				Me.OnPI_Eng_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_PIL")>  _
Partial Public Class XML_DRUG_PIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _PIL_Th_Name_Medicinal_Product As String
	
	Private _PIL_Th_Product_Desc As String
	
	Private _PIL_Th_Active_Ingradient_Strenght As String
	
	Private _PIL_Th_Generic_Name As String
	
	Private _PIL_Th_Used_For As String
	
	Private _PIL_Th_When_Not_Take As String
	
	Private _PIL_Th_Avoid_For_Take As String
	
	Private _PIL_Th_How_to_Take As String
	
	Private _PIL_Th_When_Miss_Dose As String
	
	Private _PIL_Th_Overdose As String
	
	Private _PIL_Th_During_Take As String
	
	Private _PIL_Th_When_Meet_Doctor_Urgent As String
	
	Private _PIL_Th_When_Meet_Doctor As String
	
	Private _PIL_Th_How_to_Storage As String
	
	Private _PIL_Th_MA_Holder As String
	
	Private _PIL_Th_MA_Number As String
	
	Private _PIL_Th_Date_Approve As String
	
	Private _PIL_Th_Date_Revision As String
	
	Private _PIL_Eng_Name_Medicinal_Product As String
	
	Private _PIL_Eng_Product_Desc As String
	
	Private _PIL_Eng_Active_Ingradient_Strenght As String
	
	Private _PIL_Eng_Generic_Name As String
	
	Private _PIL_Eng_Used_For As String
	
	Private _PIL_Eng_When_Not_Take As String
	
	Private _PIL_Eng_Avoid_For_Take As String
	
	Private _PIL_Eng_How_to_Take As String
	
	Private _PIL_Eng_When_Miss_Dose As String
	
	Private _PIL_Eng_Overdose As String
	
	Private _PIL_Eng_During_Take As String
	
	Private _PIL_Eng_When_Meet_Doctor_Urgent As String
	
	Private _PIL_Eng_When_Meet_Doctor As String
	
	Private _PIL_Eng_How_to_Storage As String
	
	Private _PIL_Eng_MA_Holder As String
	
	Private _PIL_Eng_MA_Number As String
	
	Private _PIL_Eng_Date_Approve As String
	
	Private _PIL_Eng_Date_Revision As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Product_DescChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Product_DescChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Active_Ingradient_StrenghtChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Active_Ingradient_StrenghtChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Generic_NameChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Generic_NameChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Used_ForChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Used_ForChanged()
    End Sub
    Partial Private Sub OnPIL_Th_When_Not_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_When_Not_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Avoid_For_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Avoid_For_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Th_How_to_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_How_to_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Th_When_Miss_DoseChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_When_Miss_DoseChanged()
    End Sub
    Partial Private Sub OnPIL_Th_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_OverdoseChanged()
    End Sub
    Partial Private Sub OnPIL_Th_During_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_During_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Th_When_Meet_Doctor_UrgentChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_When_Meet_Doctor_UrgentChanged()
    End Sub
    Partial Private Sub OnPIL_Th_When_Meet_DoctorChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_When_Meet_DoctorChanged()
    End Sub
    Partial Private Sub OnPIL_Th_How_to_StorageChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_How_to_StorageChanged()
    End Sub
    Partial Private Sub OnPIL_Th_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_MA_HolderChanged()
    End Sub
    Partial Private Sub OnPIL_Th_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_MA_NumberChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Product_DescChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Product_DescChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Active_Ingradient_StrenghtChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Active_Ingradient_StrenghtChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Generic_NameChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Generic_NameChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Used_ForChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Used_ForChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_When_Not_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_When_Not_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Avoid_For_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Avoid_For_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_How_to_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_How_to_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_When_Miss_DoseChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_When_Miss_DoseChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_OverdoseChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_During_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_During_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_When_Meet_Doctor_UrgentChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_When_Meet_Doctor_UrgentChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_When_Meet_DoctorChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_When_Meet_DoctorChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_How_to_StorageChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_How_to_StorageChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_MA_HolderChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_MA_NumberChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Name_Medicinal_Product() As String
		Get
			Return Me._PIL_Th_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Name_Medicinal_Product, value) = false) Then
				Me.OnPIL_Th_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Name_Medicinal_Product = value
				Me.SendPropertyChanged("PIL_Th_Name_Medicinal_Product")
				Me.OnPIL_Th_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Product_Desc", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Product_Desc() As String
		Get
			Return Me._PIL_Th_Product_Desc
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Product_Desc, value) = false) Then
				Me.OnPIL_Th_Product_DescChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Product_Desc = value
				Me.SendPropertyChanged("PIL_Th_Product_Desc")
				Me.OnPIL_Th_Product_DescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Active_Ingradient_Strenght", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Active_Ingradient_Strenght() As String
		Get
			Return Me._PIL_Th_Active_Ingradient_Strenght
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Active_Ingradient_Strenght, value) = false) Then
				Me.OnPIL_Th_Active_Ingradient_StrenghtChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Active_Ingradient_Strenght = value
				Me.SendPropertyChanged("PIL_Th_Active_Ingradient_Strenght")
				Me.OnPIL_Th_Active_Ingradient_StrenghtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Generic_Name", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Generic_Name() As String
		Get
			Return Me._PIL_Th_Generic_Name
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Generic_Name, value) = false) Then
				Me.OnPIL_Th_Generic_NameChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Generic_Name = value
				Me.SendPropertyChanged("PIL_Th_Generic_Name")
				Me.OnPIL_Th_Generic_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Used_For", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Used_For() As String
		Get
			Return Me._PIL_Th_Used_For
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Used_For, value) = false) Then
				Me.OnPIL_Th_Used_ForChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Used_For = value
				Me.SendPropertyChanged("PIL_Th_Used_For")
				Me.OnPIL_Th_Used_ForChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_When_Not_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_When_Not_Take() As String
		Get
			Return Me._PIL_Th_When_Not_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Th_When_Not_Take, value) = false) Then
				Me.OnPIL_Th_When_Not_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_When_Not_Take = value
				Me.SendPropertyChanged("PIL_Th_When_Not_Take")
				Me.OnPIL_Th_When_Not_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Avoid_For_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Avoid_For_Take() As String
		Get
			Return Me._PIL_Th_Avoid_For_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Avoid_For_Take, value) = false) Then
				Me.OnPIL_Th_Avoid_For_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Avoid_For_Take = value
				Me.SendPropertyChanged("PIL_Th_Avoid_For_Take")
				Me.OnPIL_Th_Avoid_For_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_How_to_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_How_to_Take() As String
		Get
			Return Me._PIL_Th_How_to_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Th_How_to_Take, value) = false) Then
				Me.OnPIL_Th_How_to_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_How_to_Take = value
				Me.SendPropertyChanged("PIL_Th_How_to_Take")
				Me.OnPIL_Th_How_to_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_When_Miss_Dose", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_When_Miss_Dose() As String
		Get
			Return Me._PIL_Th_When_Miss_Dose
		End Get
		Set
			If (String.Equals(Me._PIL_Th_When_Miss_Dose, value) = false) Then
				Me.OnPIL_Th_When_Miss_DoseChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_When_Miss_Dose = value
				Me.SendPropertyChanged("PIL_Th_When_Miss_Dose")
				Me.OnPIL_Th_When_Miss_DoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Overdose() As String
		Get
			Return Me._PIL_Th_Overdose
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Overdose, value) = false) Then
				Me.OnPIL_Th_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Overdose = value
				Me.SendPropertyChanged("PIL_Th_Overdose")
				Me.OnPIL_Th_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_During_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_During_Take() As String
		Get
			Return Me._PIL_Th_During_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Th_During_Take, value) = false) Then
				Me.OnPIL_Th_During_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_During_Take = value
				Me.SendPropertyChanged("PIL_Th_During_Take")
				Me.OnPIL_Th_During_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_When_Meet_Doctor_Urgent", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_When_Meet_Doctor_Urgent() As String
		Get
			Return Me._PIL_Th_When_Meet_Doctor_Urgent
		End Get
		Set
			If (String.Equals(Me._PIL_Th_When_Meet_Doctor_Urgent, value) = false) Then
				Me.OnPIL_Th_When_Meet_Doctor_UrgentChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_When_Meet_Doctor_Urgent = value
				Me.SendPropertyChanged("PIL_Th_When_Meet_Doctor_Urgent")
				Me.OnPIL_Th_When_Meet_Doctor_UrgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_When_Meet_Doctor", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_When_Meet_Doctor() As String
		Get
			Return Me._PIL_Th_When_Meet_Doctor
		End Get
		Set
			If (String.Equals(Me._PIL_Th_When_Meet_Doctor, value) = false) Then
				Me.OnPIL_Th_When_Meet_DoctorChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_When_Meet_Doctor = value
				Me.SendPropertyChanged("PIL_Th_When_Meet_Doctor")
				Me.OnPIL_Th_When_Meet_DoctorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_How_to_Storage", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_How_to_Storage() As String
		Get
			Return Me._PIL_Th_How_to_Storage
		End Get
		Set
			If (String.Equals(Me._PIL_Th_How_to_Storage, value) = false) Then
				Me.OnPIL_Th_How_to_StorageChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_How_to_Storage = value
				Me.SendPropertyChanged("PIL_Th_How_to_Storage")
				Me.OnPIL_Th_How_to_StorageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_MA_Holder() As String
		Get
			Return Me._PIL_Th_MA_Holder
		End Get
		Set
			If (String.Equals(Me._PIL_Th_MA_Holder, value) = false) Then
				Me.OnPIL_Th_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_MA_Holder = value
				Me.SendPropertyChanged("PIL_Th_MA_Holder")
				Me.OnPIL_Th_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_MA_Number() As String
		Get
			Return Me._PIL_Th_MA_Number
		End Get
		Set
			If (String.Equals(Me._PIL_Th_MA_Number, value) = false) Then
				Me.OnPIL_Th_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_MA_Number = value
				Me.SendPropertyChanged("PIL_Th_MA_Number")
				Me.OnPIL_Th_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Date_Approve() As String
		Get
			Return Me._PIL_Th_Date_Approve
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Date_Approve, value) = false) Then
				Me.OnPIL_Th_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Date_Approve = value
				Me.SendPropertyChanged("PIL_Th_Date_Approve")
				Me.OnPIL_Th_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Date_Revision() As String
		Get
			Return Me._PIL_Th_Date_Revision
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Date_Revision, value) = false) Then
				Me.OnPIL_Th_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Date_Revision = value
				Me.SendPropertyChanged("PIL_Th_Date_Revision")
				Me.OnPIL_Th_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Name_Medicinal_Product() As String
		Get
			Return Me._PIL_Eng_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Name_Medicinal_Product, value) = false) Then
				Me.OnPIL_Eng_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Name_Medicinal_Product = value
				Me.SendPropertyChanged("PIL_Eng_Name_Medicinal_Product")
				Me.OnPIL_Eng_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Product_Desc", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Product_Desc() As String
		Get
			Return Me._PIL_Eng_Product_Desc
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Product_Desc, value) = false) Then
				Me.OnPIL_Eng_Product_DescChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Product_Desc = value
				Me.SendPropertyChanged("PIL_Eng_Product_Desc")
				Me.OnPIL_Eng_Product_DescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Active_Ingradient_Strenght", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Active_Ingradient_Strenght() As String
		Get
			Return Me._PIL_Eng_Active_Ingradient_Strenght
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Active_Ingradient_Strenght, value) = false) Then
				Me.OnPIL_Eng_Active_Ingradient_StrenghtChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Active_Ingradient_Strenght = value
				Me.SendPropertyChanged("PIL_Eng_Active_Ingradient_Strenght")
				Me.OnPIL_Eng_Active_Ingradient_StrenghtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Generic_Name", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Generic_Name() As String
		Get
			Return Me._PIL_Eng_Generic_Name
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Generic_Name, value) = false) Then
				Me.OnPIL_Eng_Generic_NameChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Generic_Name = value
				Me.SendPropertyChanged("PIL_Eng_Generic_Name")
				Me.OnPIL_Eng_Generic_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Used_For", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Used_For() As String
		Get
			Return Me._PIL_Eng_Used_For
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Used_For, value) = false) Then
				Me.OnPIL_Eng_Used_ForChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Used_For = value
				Me.SendPropertyChanged("PIL_Eng_Used_For")
				Me.OnPIL_Eng_Used_ForChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_When_Not_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_When_Not_Take() As String
		Get
			Return Me._PIL_Eng_When_Not_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_When_Not_Take, value) = false) Then
				Me.OnPIL_Eng_When_Not_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_When_Not_Take = value
				Me.SendPropertyChanged("PIL_Eng_When_Not_Take")
				Me.OnPIL_Eng_When_Not_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Avoid_For_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Avoid_For_Take() As String
		Get
			Return Me._PIL_Eng_Avoid_For_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Avoid_For_Take, value) = false) Then
				Me.OnPIL_Eng_Avoid_For_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Avoid_For_Take = value
				Me.SendPropertyChanged("PIL_Eng_Avoid_For_Take")
				Me.OnPIL_Eng_Avoid_For_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_How_to_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_How_to_Take() As String
		Get
			Return Me._PIL_Eng_How_to_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_How_to_Take, value) = false) Then
				Me.OnPIL_Eng_How_to_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_How_to_Take = value
				Me.SendPropertyChanged("PIL_Eng_How_to_Take")
				Me.OnPIL_Eng_How_to_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_When_Miss_Dose", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_When_Miss_Dose() As String
		Get
			Return Me._PIL_Eng_When_Miss_Dose
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_When_Miss_Dose, value) = false) Then
				Me.OnPIL_Eng_When_Miss_DoseChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_When_Miss_Dose = value
				Me.SendPropertyChanged("PIL_Eng_When_Miss_Dose")
				Me.OnPIL_Eng_When_Miss_DoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Overdose() As String
		Get
			Return Me._PIL_Eng_Overdose
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Overdose, value) = false) Then
				Me.OnPIL_Eng_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Overdose = value
				Me.SendPropertyChanged("PIL_Eng_Overdose")
				Me.OnPIL_Eng_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_During_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_During_Take() As String
		Get
			Return Me._PIL_Eng_During_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_During_Take, value) = false) Then
				Me.OnPIL_Eng_During_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_During_Take = value
				Me.SendPropertyChanged("PIL_Eng_During_Take")
				Me.OnPIL_Eng_During_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_When_Meet_Doctor_Urgent", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_When_Meet_Doctor_Urgent() As String
		Get
			Return Me._PIL_Eng_When_Meet_Doctor_Urgent
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_When_Meet_Doctor_Urgent, value) = false) Then
				Me.OnPIL_Eng_When_Meet_Doctor_UrgentChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_When_Meet_Doctor_Urgent = value
				Me.SendPropertyChanged("PIL_Eng_When_Meet_Doctor_Urgent")
				Me.OnPIL_Eng_When_Meet_Doctor_UrgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_When_Meet_Doctor", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_When_Meet_Doctor() As String
		Get
			Return Me._PIL_Eng_When_Meet_Doctor
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_When_Meet_Doctor, value) = false) Then
				Me.OnPIL_Eng_When_Meet_DoctorChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_When_Meet_Doctor = value
				Me.SendPropertyChanged("PIL_Eng_When_Meet_Doctor")
				Me.OnPIL_Eng_When_Meet_DoctorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_How_to_Storage", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_How_to_Storage() As String
		Get
			Return Me._PIL_Eng_How_to_Storage
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_How_to_Storage, value) = false) Then
				Me.OnPIL_Eng_How_to_StorageChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_How_to_Storage = value
				Me.SendPropertyChanged("PIL_Eng_How_to_Storage")
				Me.OnPIL_Eng_How_to_StorageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_MA_Holder() As String
		Get
			Return Me._PIL_Eng_MA_Holder
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_MA_Holder, value) = false) Then
				Me.OnPIL_Eng_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_MA_Holder = value
				Me.SendPropertyChanged("PIL_Eng_MA_Holder")
				Me.OnPIL_Eng_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_MA_Number() As String
		Get
			Return Me._PIL_Eng_MA_Number
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_MA_Number, value) = false) Then
				Me.OnPIL_Eng_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_MA_Number = value
				Me.SendPropertyChanged("PIL_Eng_MA_Number")
				Me.OnPIL_Eng_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Date_Approve() As String
		Get
			Return Me._PIL_Eng_Date_Approve
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Date_Approve, value) = false) Then
				Me.OnPIL_Eng_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Date_Approve = value
				Me.SendPropertyChanged("PIL_Eng_Date_Approve")
				Me.OnPIL_Eng_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Date_Revision() As String
		Get
			Return Me._PIL_Eng_Date_Revision
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Date_Revision, value) = false) Then
				Me.OnPIL_Eng_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Date_Revision = value
				Me.SendPropertyChanged("PIL_Eng_Date_Revision")
				Me.OnPIL_Eng_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_SPC")>  _
Partial Public Class XML_DRUG_SPC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _rid As String
	
	Private _SPC_Th_Name_Medicinal_Product As String
	
	Private _SPC_Th_Qualitative_Quantitative_Comp As String
	
	Private _SPC_Th_Pharm_Form As String
	
	Private _SPC_Th_Clinical_Particular As String
	
	Private _SPC_Th_Therapeutic_Indication As String
	
	Private _SPC_Th_Posology_Administration As String
	
	Private _SPC_Th_Contraindication As String
	
	Private _SPC_Th_Special_Warning As String
	
	Private _SPC_Th_Interaction As String
	
	Private _SPC_Th_Pregnancy_Lactation As String
	
	Private _SPC_Th_Ability_Drive_Machine As String
	
	Private _SPC_Th_Undesirable_Effect As String
	
	Private _SPC_Th_Overdose As String
	
	Private _SPC_Th_Pharmaco_Properties As String
	
	Private _SPC_Th_Pharmdynamic As String
	
	Private _SPC_Th_Pharmacokinetic As String
	
	Private _SPC_Th_Preclinical_Safety_Data As String
	
	Private _SPC_Th_Pharmaceutical_Particulars As String
	
	Private _SPC_Th_Excipients As String
	
	Private _SPC_Th_Incompatability As String
	
	Private _SPC_Th_Shelf_Life As String
	
	Private _SPC_Th_Special_Storage As String
	
	Private _SPC_Th_Container As String
	
	Private _SPC_Th_MA_Holder As String
	
	Private _SPC_Th_MA_Number As String
	
	Private _SPC_Th_Date_Approve As String
	
	Private _SPC_Th_Date_Revision As String
	
	Private _SPC_Eng_Name_Medicinal_Product As String
	
	Private _SPC_Eng_Qualitative_Quantitative_Comp As String
	
	Private _SPC_Eng_Pharm_Form As String
	
	Private _SPC_Eng_Clinical_Particular As String
	
	Private _SPC_Eng_Therapeutic_Indication As String
	
	Private _SPC_Eng_Posology_Administration As String
	
	Private _SPC_Eng_Contraindication As String
	
	Private _SPC_Eng_Special_Warning As String
	
	Private _SPC_Eng_Interaction As String
	
	Private _SPC_Eng_Pregnancy_Lactation As String
	
	Private _SPC_Eng_Ability_Drive_Machine As String
	
	Private _SPC_Eng_Undesirable_Effect As String
	
	Private _SPC_Eng_Overdose As String
	
	Private _SPC_Eng_Pharmaco_Properties As String
	
	Private _SPC_Eng_Pharmdynamic As String
	
	Private _SPC_Eng_Pharmacokinetic As String
	
	Private _SPC_Eng_Preclinical_Safety_Data As String
	
	Private _SPC_Eng_Pharmaceutical_Particulars As String
	
	Private _SPC_Eng_Excipients As String
	
	Private _SPC_Eng_Incompatability As String
	
	Private _SPC_Eng_Shelf_Life As String
	
	Private _SPC_Eng_Special_Storage As String
	
	Private _SPC_Eng_Container As String
	
	Private _SPC_Eng_MA_Holder As String
	
	Private _SPC_Eng_MA_Number As String
	
	Private _SPC_Eng_Date_Approve As String
	
	Private _SPC_Eng_Date_Revision As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Qualitative_Quantitative_CompChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Qualitative_Quantitative_CompChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Pharm_FormChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Pharm_FormChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Clinical_ParticularChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Clinical_ParticularChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Therapeutic_IndicationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Therapeutic_IndicationChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Posology_AdministrationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Posology_AdministrationChanged()
    End Sub
    Partial Private Sub OnSPC_Th_ContraindicationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_ContraindicationChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Special_WarningChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Special_WarningChanged()
    End Sub
    Partial Private Sub OnSPC_Th_InteractionChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_InteractionChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Pregnancy_LactationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Pregnancy_LactationChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Ability_Drive_MachineChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Ability_Drive_MachineChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Undesirable_EffectChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Undesirable_EffectChanged()
    End Sub
    Partial Private Sub OnSPC_Th_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_OverdoseChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Pharmaco_PropertiesChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Pharmaco_PropertiesChanged()
    End Sub
    Partial Private Sub OnSPC_Th_PharmdynamicChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_PharmdynamicChanged()
    End Sub
    Partial Private Sub OnSPC_Th_PharmacokineticChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_PharmacokineticChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Preclinical_Safety_DataChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Preclinical_Safety_DataChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Pharmaceutical_ParticularsChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Pharmaceutical_ParticularsChanged()
    End Sub
    Partial Private Sub OnSPC_Th_ExcipientsChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_ExcipientsChanged()
    End Sub
    Partial Private Sub OnSPC_Th_IncompatabilityChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_IncompatabilityChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Shelf_LifeChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Shelf_LifeChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Special_StorageChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Special_StorageChanged()
    End Sub
    Partial Private Sub OnSPC_Th_ContainerChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_ContainerChanged()
    End Sub
    Partial Private Sub OnSPC_Th_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_MA_HolderChanged()
    End Sub
    Partial Private Sub OnSPC_Th_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_MA_NumberChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Qualitative_Quantitative_CompChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Qualitative_Quantitative_CompChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Pharm_FormChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Pharm_FormChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Clinical_ParticularChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Clinical_ParticularChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Therapeutic_IndicationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Therapeutic_IndicationChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Posology_AdministrationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Posology_AdministrationChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_ContraindicationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_ContraindicationChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Special_WarningChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Special_WarningChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_InteractionChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_InteractionChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Pregnancy_LactationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Pregnancy_LactationChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Ability_Drive_MachineChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Ability_Drive_MachineChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Undesirable_EffectChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Undesirable_EffectChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_OverdoseChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Pharmaco_PropertiesChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Pharmaco_PropertiesChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_PharmdynamicChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_PharmdynamicChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_PharmacokineticChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_PharmacokineticChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Preclinical_Safety_DataChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Preclinical_Safety_DataChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Pharmaceutical_ParticularsChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Pharmaceutical_ParticularsChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_ExcipientsChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_ExcipientsChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_IncompatabilityChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_IncompatabilityChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Shelf_LifeChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Shelf_LifeChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Special_StorageChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Special_StorageChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_ContainerChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_ContainerChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_MA_HolderChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_MA_NumberChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Name_Medicinal_Product() As String
		Get
			Return Me._SPC_Th_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Name_Medicinal_Product, value) = false) Then
				Me.OnSPC_Th_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Name_Medicinal_Product = value
				Me.SendPropertyChanged("SPC_Th_Name_Medicinal_Product")
				Me.OnSPC_Th_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Qualitative_Quantitative_Comp", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Qualitative_Quantitative_Comp() As String
		Get
			Return Me._SPC_Th_Qualitative_Quantitative_Comp
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Qualitative_Quantitative_Comp, value) = false) Then
				Me.OnSPC_Th_Qualitative_Quantitative_CompChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Qualitative_Quantitative_Comp = value
				Me.SendPropertyChanged("SPC_Th_Qualitative_Quantitative_Comp")
				Me.OnSPC_Th_Qualitative_Quantitative_CompChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharm_Form", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharm_Form() As String
		Get
			Return Me._SPC_Th_Pharm_Form
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharm_Form, value) = false) Then
				Me.OnSPC_Th_Pharm_FormChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharm_Form = value
				Me.SendPropertyChanged("SPC_Th_Pharm_Form")
				Me.OnSPC_Th_Pharm_FormChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Clinical_Particular", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Clinical_Particular() As String
		Get
			Return Me._SPC_Th_Clinical_Particular
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Clinical_Particular, value) = false) Then
				Me.OnSPC_Th_Clinical_ParticularChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Clinical_Particular = value
				Me.SendPropertyChanged("SPC_Th_Clinical_Particular")
				Me.OnSPC_Th_Clinical_ParticularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Therapeutic_Indication", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Therapeutic_Indication() As String
		Get
			Return Me._SPC_Th_Therapeutic_Indication
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Therapeutic_Indication, value) = false) Then
				Me.OnSPC_Th_Therapeutic_IndicationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Therapeutic_Indication = value
				Me.SendPropertyChanged("SPC_Th_Therapeutic_Indication")
				Me.OnSPC_Th_Therapeutic_IndicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Posology_Administration", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Posology_Administration() As String
		Get
			Return Me._SPC_Th_Posology_Administration
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Posology_Administration, value) = false) Then
				Me.OnSPC_Th_Posology_AdministrationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Posology_Administration = value
				Me.SendPropertyChanged("SPC_Th_Posology_Administration")
				Me.OnSPC_Th_Posology_AdministrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Contraindication", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Contraindication() As String
		Get
			Return Me._SPC_Th_Contraindication
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Contraindication, value) = false) Then
				Me.OnSPC_Th_ContraindicationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Contraindication = value
				Me.SendPropertyChanged("SPC_Th_Contraindication")
				Me.OnSPC_Th_ContraindicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Special_Warning", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Special_Warning() As String
		Get
			Return Me._SPC_Th_Special_Warning
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Special_Warning, value) = false) Then
				Me.OnSPC_Th_Special_WarningChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Special_Warning = value
				Me.SendPropertyChanged("SPC_Th_Special_Warning")
				Me.OnSPC_Th_Special_WarningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Interaction", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Interaction() As String
		Get
			Return Me._SPC_Th_Interaction
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Interaction, value) = false) Then
				Me.OnSPC_Th_InteractionChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Interaction = value
				Me.SendPropertyChanged("SPC_Th_Interaction")
				Me.OnSPC_Th_InteractionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pregnancy_Lactation", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pregnancy_Lactation() As String
		Get
			Return Me._SPC_Th_Pregnancy_Lactation
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pregnancy_Lactation, value) = false) Then
				Me.OnSPC_Th_Pregnancy_LactationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pregnancy_Lactation = value
				Me.SendPropertyChanged("SPC_Th_Pregnancy_Lactation")
				Me.OnSPC_Th_Pregnancy_LactationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Ability_Drive_Machine", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Ability_Drive_Machine() As String
		Get
			Return Me._SPC_Th_Ability_Drive_Machine
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Ability_Drive_Machine, value) = false) Then
				Me.OnSPC_Th_Ability_Drive_MachineChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Ability_Drive_Machine = value
				Me.SendPropertyChanged("SPC_Th_Ability_Drive_Machine")
				Me.OnSPC_Th_Ability_Drive_MachineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Undesirable_Effect", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Undesirable_Effect() As String
		Get
			Return Me._SPC_Th_Undesirable_Effect
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Undesirable_Effect, value) = false) Then
				Me.OnSPC_Th_Undesirable_EffectChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Undesirable_Effect = value
				Me.SendPropertyChanged("SPC_Th_Undesirable_Effect")
				Me.OnSPC_Th_Undesirable_EffectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Overdose() As String
		Get
			Return Me._SPC_Th_Overdose
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Overdose, value) = false) Then
				Me.OnSPC_Th_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Overdose = value
				Me.SendPropertyChanged("SPC_Th_Overdose")
				Me.OnSPC_Th_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharmaco_Properties", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharmaco_Properties() As String
		Get
			Return Me._SPC_Th_Pharmaco_Properties
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharmaco_Properties, value) = false) Then
				Me.OnSPC_Th_Pharmaco_PropertiesChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharmaco_Properties = value
				Me.SendPropertyChanged("SPC_Th_Pharmaco_Properties")
				Me.OnSPC_Th_Pharmaco_PropertiesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharmdynamic", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharmdynamic() As String
		Get
			Return Me._SPC_Th_Pharmdynamic
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharmdynamic, value) = false) Then
				Me.OnSPC_Th_PharmdynamicChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharmdynamic = value
				Me.SendPropertyChanged("SPC_Th_Pharmdynamic")
				Me.OnSPC_Th_PharmdynamicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharmacokinetic", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharmacokinetic() As String
		Get
			Return Me._SPC_Th_Pharmacokinetic
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharmacokinetic, value) = false) Then
				Me.OnSPC_Th_PharmacokineticChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharmacokinetic = value
				Me.SendPropertyChanged("SPC_Th_Pharmacokinetic")
				Me.OnSPC_Th_PharmacokineticChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Preclinical_Safety_Data", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Preclinical_Safety_Data() As String
		Get
			Return Me._SPC_Th_Preclinical_Safety_Data
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Preclinical_Safety_Data, value) = false) Then
				Me.OnSPC_Th_Preclinical_Safety_DataChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Preclinical_Safety_Data = value
				Me.SendPropertyChanged("SPC_Th_Preclinical_Safety_Data")
				Me.OnSPC_Th_Preclinical_Safety_DataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharmaceutical_Particulars", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharmaceutical_Particulars() As String
		Get
			Return Me._SPC_Th_Pharmaceutical_Particulars
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharmaceutical_Particulars, value) = false) Then
				Me.OnSPC_Th_Pharmaceutical_ParticularsChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharmaceutical_Particulars = value
				Me.SendPropertyChanged("SPC_Th_Pharmaceutical_Particulars")
				Me.OnSPC_Th_Pharmaceutical_ParticularsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Excipients", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Excipients() As String
		Get
			Return Me._SPC_Th_Excipients
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Excipients, value) = false) Then
				Me.OnSPC_Th_ExcipientsChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Excipients = value
				Me.SendPropertyChanged("SPC_Th_Excipients")
				Me.OnSPC_Th_ExcipientsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Incompatability", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Incompatability() As String
		Get
			Return Me._SPC_Th_Incompatability
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Incompatability, value) = false) Then
				Me.OnSPC_Th_IncompatabilityChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Incompatability = value
				Me.SendPropertyChanged("SPC_Th_Incompatability")
				Me.OnSPC_Th_IncompatabilityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Shelf_Life", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Shelf_Life() As String
		Get
			Return Me._SPC_Th_Shelf_Life
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Shelf_Life, value) = false) Then
				Me.OnSPC_Th_Shelf_LifeChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Shelf_Life = value
				Me.SendPropertyChanged("SPC_Th_Shelf_Life")
				Me.OnSPC_Th_Shelf_LifeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Special_Storage", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Special_Storage() As String
		Get
			Return Me._SPC_Th_Special_Storage
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Special_Storage, value) = false) Then
				Me.OnSPC_Th_Special_StorageChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Special_Storage = value
				Me.SendPropertyChanged("SPC_Th_Special_Storage")
				Me.OnSPC_Th_Special_StorageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Container", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Container() As String
		Get
			Return Me._SPC_Th_Container
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Container, value) = false) Then
				Me.OnSPC_Th_ContainerChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Container = value
				Me.SendPropertyChanged("SPC_Th_Container")
				Me.OnSPC_Th_ContainerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_MA_Holder() As String
		Get
			Return Me._SPC_Th_MA_Holder
		End Get
		Set
			If (String.Equals(Me._SPC_Th_MA_Holder, value) = false) Then
				Me.OnSPC_Th_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_MA_Holder = value
				Me.SendPropertyChanged("SPC_Th_MA_Holder")
				Me.OnSPC_Th_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_MA_Number() As String
		Get
			Return Me._SPC_Th_MA_Number
		End Get
		Set
			If (String.Equals(Me._SPC_Th_MA_Number, value) = false) Then
				Me.OnSPC_Th_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_MA_Number = value
				Me.SendPropertyChanged("SPC_Th_MA_Number")
				Me.OnSPC_Th_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Date_Approve() As String
		Get
			Return Me._SPC_Th_Date_Approve
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Date_Approve, value) = false) Then
				Me.OnSPC_Th_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Date_Approve = value
				Me.SendPropertyChanged("SPC_Th_Date_Approve")
				Me.OnSPC_Th_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Date_Revision() As String
		Get
			Return Me._SPC_Th_Date_Revision
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Date_Revision, value) = false) Then
				Me.OnSPC_Th_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Date_Revision = value
				Me.SendPropertyChanged("SPC_Th_Date_Revision")
				Me.OnSPC_Th_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Name_Medicinal_Product() As String
		Get
			Return Me._SPC_Eng_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Name_Medicinal_Product, value) = false) Then
				Me.OnSPC_Eng_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Name_Medicinal_Product = value
				Me.SendPropertyChanged("SPC_Eng_Name_Medicinal_Product")
				Me.OnSPC_Eng_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Qualitative_Quantitative_Comp", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Qualitative_Quantitative_Comp() As String
		Get
			Return Me._SPC_Eng_Qualitative_Quantitative_Comp
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Qualitative_Quantitative_Comp, value) = false) Then
				Me.OnSPC_Eng_Qualitative_Quantitative_CompChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Qualitative_Quantitative_Comp = value
				Me.SendPropertyChanged("SPC_Eng_Qualitative_Quantitative_Comp")
				Me.OnSPC_Eng_Qualitative_Quantitative_CompChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharm_Form", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharm_Form() As String
		Get
			Return Me._SPC_Eng_Pharm_Form
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharm_Form, value) = false) Then
				Me.OnSPC_Eng_Pharm_FormChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharm_Form = value
				Me.SendPropertyChanged("SPC_Eng_Pharm_Form")
				Me.OnSPC_Eng_Pharm_FormChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Clinical_Particular", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Clinical_Particular() As String
		Get
			Return Me._SPC_Eng_Clinical_Particular
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Clinical_Particular, value) = false) Then
				Me.OnSPC_Eng_Clinical_ParticularChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Clinical_Particular = value
				Me.SendPropertyChanged("SPC_Eng_Clinical_Particular")
				Me.OnSPC_Eng_Clinical_ParticularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Therapeutic_Indication", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Therapeutic_Indication() As String
		Get
			Return Me._SPC_Eng_Therapeutic_Indication
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Therapeutic_Indication, value) = false) Then
				Me.OnSPC_Eng_Therapeutic_IndicationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Therapeutic_Indication = value
				Me.SendPropertyChanged("SPC_Eng_Therapeutic_Indication")
				Me.OnSPC_Eng_Therapeutic_IndicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Posology_Administration", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Posology_Administration() As String
		Get
			Return Me._SPC_Eng_Posology_Administration
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Posology_Administration, value) = false) Then
				Me.OnSPC_Eng_Posology_AdministrationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Posology_Administration = value
				Me.SendPropertyChanged("SPC_Eng_Posology_Administration")
				Me.OnSPC_Eng_Posology_AdministrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Contraindication", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Contraindication() As String
		Get
			Return Me._SPC_Eng_Contraindication
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Contraindication, value) = false) Then
				Me.OnSPC_Eng_ContraindicationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Contraindication = value
				Me.SendPropertyChanged("SPC_Eng_Contraindication")
				Me.OnSPC_Eng_ContraindicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Special_Warning", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Special_Warning() As String
		Get
			Return Me._SPC_Eng_Special_Warning
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Special_Warning, value) = false) Then
				Me.OnSPC_Eng_Special_WarningChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Special_Warning = value
				Me.SendPropertyChanged("SPC_Eng_Special_Warning")
				Me.OnSPC_Eng_Special_WarningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Interaction", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Interaction() As String
		Get
			Return Me._SPC_Eng_Interaction
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Interaction, value) = false) Then
				Me.OnSPC_Eng_InteractionChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Interaction = value
				Me.SendPropertyChanged("SPC_Eng_Interaction")
				Me.OnSPC_Eng_InteractionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pregnancy_Lactation", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pregnancy_Lactation() As String
		Get
			Return Me._SPC_Eng_Pregnancy_Lactation
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pregnancy_Lactation, value) = false) Then
				Me.OnSPC_Eng_Pregnancy_LactationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pregnancy_Lactation = value
				Me.SendPropertyChanged("SPC_Eng_Pregnancy_Lactation")
				Me.OnSPC_Eng_Pregnancy_LactationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Ability_Drive_Machine", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Ability_Drive_Machine() As String
		Get
			Return Me._SPC_Eng_Ability_Drive_Machine
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Ability_Drive_Machine, value) = false) Then
				Me.OnSPC_Eng_Ability_Drive_MachineChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Ability_Drive_Machine = value
				Me.SendPropertyChanged("SPC_Eng_Ability_Drive_Machine")
				Me.OnSPC_Eng_Ability_Drive_MachineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Undesirable_Effect", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Undesirable_Effect() As String
		Get
			Return Me._SPC_Eng_Undesirable_Effect
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Undesirable_Effect, value) = false) Then
				Me.OnSPC_Eng_Undesirable_EffectChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Undesirable_Effect = value
				Me.SendPropertyChanged("SPC_Eng_Undesirable_Effect")
				Me.OnSPC_Eng_Undesirable_EffectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Overdose() As String
		Get
			Return Me._SPC_Eng_Overdose
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Overdose, value) = false) Then
				Me.OnSPC_Eng_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Overdose = value
				Me.SendPropertyChanged("SPC_Eng_Overdose")
				Me.OnSPC_Eng_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharmaco_Properties", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharmaco_Properties() As String
		Get
			Return Me._SPC_Eng_Pharmaco_Properties
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharmaco_Properties, value) = false) Then
				Me.OnSPC_Eng_Pharmaco_PropertiesChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharmaco_Properties = value
				Me.SendPropertyChanged("SPC_Eng_Pharmaco_Properties")
				Me.OnSPC_Eng_Pharmaco_PropertiesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharmdynamic", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharmdynamic() As String
		Get
			Return Me._SPC_Eng_Pharmdynamic
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharmdynamic, value) = false) Then
				Me.OnSPC_Eng_PharmdynamicChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharmdynamic = value
				Me.SendPropertyChanged("SPC_Eng_Pharmdynamic")
				Me.OnSPC_Eng_PharmdynamicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharmacokinetic", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharmacokinetic() As String
		Get
			Return Me._SPC_Eng_Pharmacokinetic
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharmacokinetic, value) = false) Then
				Me.OnSPC_Eng_PharmacokineticChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharmacokinetic = value
				Me.SendPropertyChanged("SPC_Eng_Pharmacokinetic")
				Me.OnSPC_Eng_PharmacokineticChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Preclinical_Safety_Data", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Preclinical_Safety_Data() As String
		Get
			Return Me._SPC_Eng_Preclinical_Safety_Data
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Preclinical_Safety_Data, value) = false) Then
				Me.OnSPC_Eng_Preclinical_Safety_DataChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Preclinical_Safety_Data = value
				Me.SendPropertyChanged("SPC_Eng_Preclinical_Safety_Data")
				Me.OnSPC_Eng_Preclinical_Safety_DataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharmaceutical_Particulars", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharmaceutical_Particulars() As String
		Get
			Return Me._SPC_Eng_Pharmaceutical_Particulars
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharmaceutical_Particulars, value) = false) Then
				Me.OnSPC_Eng_Pharmaceutical_ParticularsChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharmaceutical_Particulars = value
				Me.SendPropertyChanged("SPC_Eng_Pharmaceutical_Particulars")
				Me.OnSPC_Eng_Pharmaceutical_ParticularsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Excipients", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Excipients() As String
		Get
			Return Me._SPC_Eng_Excipients
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Excipients, value) = false) Then
				Me.OnSPC_Eng_ExcipientsChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Excipients = value
				Me.SendPropertyChanged("SPC_Eng_Excipients")
				Me.OnSPC_Eng_ExcipientsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Incompatability", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Incompatability() As String
		Get
			Return Me._SPC_Eng_Incompatability
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Incompatability, value) = false) Then
				Me.OnSPC_Eng_IncompatabilityChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Incompatability = value
				Me.SendPropertyChanged("SPC_Eng_Incompatability")
				Me.OnSPC_Eng_IncompatabilityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Shelf_Life", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Shelf_Life() As String
		Get
			Return Me._SPC_Eng_Shelf_Life
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Shelf_Life, value) = false) Then
				Me.OnSPC_Eng_Shelf_LifeChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Shelf_Life = value
				Me.SendPropertyChanged("SPC_Eng_Shelf_Life")
				Me.OnSPC_Eng_Shelf_LifeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Special_Storage", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Special_Storage() As String
		Get
			Return Me._SPC_Eng_Special_Storage
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Special_Storage, value) = false) Then
				Me.OnSPC_Eng_Special_StorageChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Special_Storage = value
				Me.SendPropertyChanged("SPC_Eng_Special_Storage")
				Me.OnSPC_Eng_Special_StorageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Container", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Container() As String
		Get
			Return Me._SPC_Eng_Container
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Container, value) = false) Then
				Me.OnSPC_Eng_ContainerChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Container = value
				Me.SendPropertyChanged("SPC_Eng_Container")
				Me.OnSPC_Eng_ContainerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_MA_Holder() As String
		Get
			Return Me._SPC_Eng_MA_Holder
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_MA_Holder, value) = false) Then
				Me.OnSPC_Eng_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_MA_Holder = value
				Me.SendPropertyChanged("SPC_Eng_MA_Holder")
				Me.OnSPC_Eng_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_MA_Number() As String
		Get
			Return Me._SPC_Eng_MA_Number
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_MA_Number, value) = false) Then
				Me.OnSPC_Eng_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_MA_Number = value
				Me.SendPropertyChanged("SPC_Eng_MA_Number")
				Me.OnSPC_Eng_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Date_Approve() As String
		Get
			Return Me._SPC_Eng_Date_Approve
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Date_Approve, value) = false) Then
				Me.OnSPC_Eng_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Date_Approve = value
				Me.SendPropertyChanged("SPC_Eng_Date_Approve")
				Me.OnSPC_Eng_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Date_Revision() As String
		Get
			Return Me._SPC_Eng_Date_Revision
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Date_Revision, value) = false) Then
				Me.OnSPC_Eng_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Date_Revision = value
				Me.SendPropertyChanged("SPC_Eng_Date_Revision")
				Me.OnSPC_Eng_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_IOW")>  _
Partial Public Class XML_DRUG_IOW
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _register As String
	
	Private _lcnsid As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _flineno As String
	
	Private _drgqty As String
	
	Private _drgperunit As String
	
	Private _drgcdt As String
	
	Private _thadsgnm As String
	
	Private _rid As String
	
	Private _iowacd As String
	
	Private _iowanm As String
	
	Private _SinggleContent As String
	
	Private _UnitForSinggleContent As String
	
	Private _qtytxt_all As String
	
	Private _qtytxt As String
	
	Private _qty As String
	
	Private _qty_y As String
	
	Private _sunitengnm As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _aori As String
	
	Private _aori_description As String
	
	Private _remark As String
	
	Private _cncnm As String
	
	Private _licen_loca As String
	
	Private _Newcode_U As String
	
	Private _Newcode_rid As String
	
	Private _Newcode_R As String
	
	Private _RoleinFomular As String
	
	Private _ConditionContent As String
	
	Private _MultiplyNumberStart As String
	
	Private _BaseNumberStart As String
	
	Private _PowerNumberStart As String
	
	Private _MultiplyNumberEND As String
	
	Private _BaseNumberEND As String
	
	Private _PowerNumberEND As String
	
	Private _UnitForRangeContent As String
	
	Private _IDA_DRRGT_DETAIL_CAS As System.Nullable(Of Integer)
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnregisterChanging(value As String)
    End Sub
    Partial Private Sub OnregisterChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnflinenoChanging(value As String)
    End Sub
    Partial Private Sub OnflinenoChanged()
    End Sub
    Partial Private Sub OndrgqtyChanging(value As String)
    End Sub
    Partial Private Sub OndrgqtyChanged()
    End Sub
    Partial Private Sub OndrgperunitChanging(value As String)
    End Sub
    Partial Private Sub OndrgperunitChanged()
    End Sub
    Partial Private Sub OndrgcdtChanging(value As String)
    End Sub
    Partial Private Sub OndrgcdtChanged()
    End Sub
    Partial Private Sub OnthadsgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadsgnmChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OniowanmChanging(value As String)
    End Sub
    Partial Private Sub OniowanmChanged()
    End Sub
    Partial Private Sub OnSinggleContentChanging(value As String)
    End Sub
    Partial Private Sub OnSinggleContentChanged()
    End Sub
    Partial Private Sub OnUnitForSinggleContentChanging(value As String)
    End Sub
    Partial Private Sub OnUnitForSinggleContentChanged()
    End Sub
    Partial Private Sub Onqtytxt_allChanging(value As String)
    End Sub
    Partial Private Sub Onqtytxt_allChanged()
    End Sub
    Partial Private Sub OnqtytxtChanging(value As String)
    End Sub
    Partial Private Sub OnqtytxtChanged()
    End Sub
    Partial Private Sub OnqtyChanging(value As String)
    End Sub
    Partial Private Sub OnqtyChanged()
    End Sub
    Partial Private Sub Onqty_yChanging(value As String)
    End Sub
    Partial Private Sub Onqty_yChanged()
    End Sub
    Partial Private Sub OnsunitengnmChanging(value As String)
    End Sub
    Partial Private Sub OnsunitengnmChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub Onaori_descriptionChanging(value As String)
    End Sub
    Partial Private Sub Onaori_descriptionChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OncncnmChanging(value As String)
    End Sub
    Partial Private Sub OncncnmChanged()
    End Sub
    Partial Private Sub Onlicen_locaChanging(value As String)
    End Sub
    Partial Private Sub Onlicen_locaChanged()
    End Sub
    Partial Private Sub OnNewcode_UChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_UChanged()
    End Sub
    Partial Private Sub OnNewcode_ridChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_ridChanged()
    End Sub
    Partial Private Sub OnNewcode_RChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_RChanged()
    End Sub
    Partial Private Sub OnRoleinFomularChanging(value As String)
    End Sub
    Partial Private Sub OnRoleinFomularChanged()
    End Sub
    Partial Private Sub OnConditionContentChanging(value As String)
    End Sub
    Partial Private Sub OnConditionContentChanged()
    End Sub
    Partial Private Sub OnMultiplyNumberStartChanging(value As String)
    End Sub
    Partial Private Sub OnMultiplyNumberStartChanged()
    End Sub
    Partial Private Sub OnBaseNumberStartChanging(value As String)
    End Sub
    Partial Private Sub OnBaseNumberStartChanged()
    End Sub
    Partial Private Sub OnPowerNumberStartChanging(value As String)
    End Sub
    Partial Private Sub OnPowerNumberStartChanged()
    End Sub
    Partial Private Sub OnMultiplyNumberENDChanging(value As String)
    End Sub
    Partial Private Sub OnMultiplyNumberENDChanged()
    End Sub
    Partial Private Sub OnBaseNumberENDChanging(value As String)
    End Sub
    Partial Private Sub OnBaseNumberENDChanged()
    End Sub
    Partial Private Sub OnPowerNumberENDChanging(value As String)
    End Sub
    Partial Private Sub OnPowerNumberENDChanged()
    End Sub
    Partial Private Sub OnUnitForRangeContentChanging(value As String)
    End Sub
    Partial Private Sub OnUnitForRangeContentChanged()
    End Sub
    Partial Private Sub OnIDA_DRRGT_DETAIL_CASChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_DRRGT_DETAIL_CASChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_register", DbType:="NVarChar(50)")>  _
	Public Property register() As String
		Get
			Return Me._register
		End Get
		Set
			If (String.Equals(Me._register, value) = false) Then
				Me.OnregisterChanging(value)
				Me.SendPropertyChanging
				Me._register = value
				Me.SendPropertyChanged("register")
				Me.OnregisterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(50)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flineno", DbType:="NChar(10)")>  _
	Public Property flineno() As String
		Get
			Return Me._flineno
		End Get
		Set
			If (String.Equals(Me._flineno, value) = false) Then
				Me.OnflinenoChanging(value)
				Me.SendPropertyChanging
				Me._flineno = value
				Me.SendPropertyChanged("flineno")
				Me.OnflinenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgqty", DbType:="NVarChar(50)")>  _
	Public Property drgqty() As String
		Get
			Return Me._drgqty
		End Get
		Set
			If (String.Equals(Me._drgqty, value) = false) Then
				Me.OndrgqtyChanging(value)
				Me.SendPropertyChanging
				Me._drgqty = value
				Me.SendPropertyChanged("drgqty")
				Me.OndrgqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgperunit", DbType:="NVarChar(MAX)")>  _
	Public Property drgperunit() As String
		Get
			Return Me._drgperunit
		End Get
		Set
			If (String.Equals(Me._drgperunit, value) = false) Then
				Me.OndrgperunitChanging(value)
				Me.SendPropertyChanging
				Me._drgperunit = value
				Me.SendPropertyChanged("drgperunit")
				Me.OndrgperunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgcdt", DbType:="NVarChar(MAX)")>  _
	Public Property drgcdt() As String
		Get
			Return Me._drgcdt
		End Get
		Set
			If (String.Equals(Me._drgcdt, value) = false) Then
				Me.OndrgcdtChanging(value)
				Me.SendPropertyChanging
				Me._drgcdt = value
				Me.SendPropertyChanged("drgcdt")
				Me.OndrgcdtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadsgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadsgnm() As String
		Get
			Return Me._thadsgnm
		End Get
		Set
			If (String.Equals(Me._thadsgnm, value) = false) Then
				Me.OnthadsgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadsgnm = value
				Me.SendPropertyChanged("thadsgnm")
				Me.OnthadsgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(50)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="NVarChar(MAX)")>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm", DbType:="NVarChar(MAX)")>  _
	Public Property iowanm() As String
		Get
			Return Me._iowanm
		End Get
		Set
			If (String.Equals(Me._iowanm, value) = false) Then
				Me.OniowanmChanging(value)
				Me.SendPropertyChanging
				Me._iowanm = value
				Me.SendPropertyChanged("iowanm")
				Me.OniowanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SinggleContent", DbType:="NChar(10)")>  _
	Public Property SinggleContent() As String
		Get
			Return Me._SinggleContent
		End Get
		Set
			If (String.Equals(Me._SinggleContent, value) = false) Then
				Me.OnSinggleContentChanging(value)
				Me.SendPropertyChanging
				Me._SinggleContent = value
				Me.SendPropertyChanged("SinggleContent")
				Me.OnSinggleContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitForSinggleContent", DbType:="NChar(10)")>  _
	Public Property UnitForSinggleContent() As String
		Get
			Return Me._UnitForSinggleContent
		End Get
		Set
			If (String.Equals(Me._UnitForSinggleContent, value) = false) Then
				Me.OnUnitForSinggleContentChanging(value)
				Me.SendPropertyChanging
				Me._UnitForSinggleContent = value
				Me.SendPropertyChanged("UnitForSinggleContent")
				Me.OnUnitForSinggleContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qtytxt_all", DbType:="NVarChar(MAX)")>  _
	Public Property qtytxt_all() As String
		Get
			Return Me._qtytxt_all
		End Get
		Set
			If (String.Equals(Me._qtytxt_all, value) = false) Then
				Me.Onqtytxt_allChanging(value)
				Me.SendPropertyChanging
				Me._qtytxt_all = value
				Me.SendPropertyChanged("qtytxt_all")
				Me.Onqtytxt_allChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qtytxt", DbType:="NVarChar(MAX)")>  _
	Public Property qtytxt() As String
		Get
			Return Me._qtytxt
		End Get
		Set
			If (String.Equals(Me._qtytxt, value) = false) Then
				Me.OnqtytxtChanging(value)
				Me.SendPropertyChanging
				Me._qtytxt = value
				Me.SendPropertyChanged("qtytxt")
				Me.OnqtytxtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty", DbType:="NVarChar(MAX)")>  _
	Public Property qty() As String
		Get
			Return Me._qty
		End Get
		Set
			If (String.Equals(Me._qty, value) = false) Then
				Me.OnqtyChanging(value)
				Me.SendPropertyChanging
				Me._qty = value
				Me.SendPropertyChanged("qty")
				Me.OnqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty_y", DbType:="NVarChar(MAX)")>  _
	Public Property qty_y() As String
		Get
			Return Me._qty_y
		End Get
		Set
			If (String.Equals(Me._qty_y, value) = false) Then
				Me.Onqty_yChanging(value)
				Me.SendPropertyChanging
				Me._qty_y = value
				Me.SendPropertyChanged("qty_y")
				Me.Onqty_yChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitengnm", DbType:="NVarChar(50)")>  _
	Public Property sunitengnm() As String
		Get
			Return Me._sunitengnm
		End Get
		Set
			If (String.Equals(Me._sunitengnm, value) = false) Then
				Me.OnsunitengnmChanging(value)
				Me.SendPropertyChanging
				Me._sunitengnm = value
				Me.SendPropertyChanged("sunitengnm")
				Me.OnsunitengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(MAX)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori_description", DbType:="NVarChar(MAX)")>  _
	Public Property aori_description() As String
		Get
			Return Me._aori_description
		End Get
		Set
			If (String.Equals(Me._aori_description, value) = false) Then
				Me.Onaori_descriptionChanging(value)
				Me.SendPropertyChanging
				Me._aori_description = value
				Me.SendPropertyChanged("aori_description")
				Me.Onaori_descriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="NVarChar(MAX)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnm", DbType:="NVarChar(MAX)")>  _
	Public Property cncnm() As String
		Get
			Return Me._cncnm
		End Get
		Set
			If (String.Equals(Me._cncnm, value) = false) Then
				Me.OncncnmChanging(value)
				Me.SendPropertyChanging
				Me._cncnm = value
				Me.SendPropertyChanged("cncnm")
				Me.OncncnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen_loca", DbType:="NVarChar(MAX)")>  _
	Public Property licen_loca() As String
		Get
			Return Me._licen_loca
		End Get
		Set
			If (String.Equals(Me._licen_loca, value) = false) Then
				Me.Onlicen_locaChanging(value)
				Me.SendPropertyChanging
				Me._licen_loca = value
				Me.SendPropertyChanged("licen_loca")
				Me.Onlicen_locaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_U", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_U() As String
		Get
			Return Me._Newcode_U
		End Get
		Set
			If (String.Equals(Me._Newcode_U, value) = false) Then
				Me.OnNewcode_UChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_U = value
				Me.SendPropertyChanged("Newcode_U")
				Me.OnNewcode_UChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_rid", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_rid() As String
		Get
			Return Me._Newcode_rid
		End Get
		Set
			If (String.Equals(Me._Newcode_rid, value) = false) Then
				Me.OnNewcode_ridChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_rid = value
				Me.SendPropertyChanged("Newcode_rid")
				Me.OnNewcode_ridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_R", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_R() As String
		Get
			Return Me._Newcode_R
		End Get
		Set
			If (String.Equals(Me._Newcode_R, value) = false) Then
				Me.OnNewcode_RChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_R = value
				Me.SendPropertyChanged("Newcode_R")
				Me.OnNewcode_RChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RoleinFomular", DbType:="NVarChar(MAX)")>  _
	Public Property RoleinFomular() As String
		Get
			Return Me._RoleinFomular
		End Get
		Set
			If (String.Equals(Me._RoleinFomular, value) = false) Then
				Me.OnRoleinFomularChanging(value)
				Me.SendPropertyChanging
				Me._RoleinFomular = value
				Me.SendPropertyChanged("RoleinFomular")
				Me.OnRoleinFomularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConditionContent", DbType:="NVarChar(MAX)")>  _
	Public Property ConditionContent() As String
		Get
			Return Me._ConditionContent
		End Get
		Set
			If (String.Equals(Me._ConditionContent, value) = false) Then
				Me.OnConditionContentChanging(value)
				Me.SendPropertyChanging
				Me._ConditionContent = value
				Me.SendPropertyChanged("ConditionContent")
				Me.OnConditionContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MultiplyNumberStart", DbType:="NVarChar(MAX)")>  _
	Public Property MultiplyNumberStart() As String
		Get
			Return Me._MultiplyNumberStart
		End Get
		Set
			If (String.Equals(Me._MultiplyNumberStart, value) = false) Then
				Me.OnMultiplyNumberStartChanging(value)
				Me.SendPropertyChanging
				Me._MultiplyNumberStart = value
				Me.SendPropertyChanged("MultiplyNumberStart")
				Me.OnMultiplyNumberStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BaseNumberStart", DbType:="NVarChar(MAX)")>  _
	Public Property BaseNumberStart() As String
		Get
			Return Me._BaseNumberStart
		End Get
		Set
			If (String.Equals(Me._BaseNumberStart, value) = false) Then
				Me.OnBaseNumberStartChanging(value)
				Me.SendPropertyChanging
				Me._BaseNumberStart = value
				Me.SendPropertyChanged("BaseNumberStart")
				Me.OnBaseNumberStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PowerNumberStart", DbType:="NVarChar(MAX)")>  _
	Public Property PowerNumberStart() As String
		Get
			Return Me._PowerNumberStart
		End Get
		Set
			If (String.Equals(Me._PowerNumberStart, value) = false) Then
				Me.OnPowerNumberStartChanging(value)
				Me.SendPropertyChanging
				Me._PowerNumberStart = value
				Me.SendPropertyChanged("PowerNumberStart")
				Me.OnPowerNumberStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MultiplyNumberEND", DbType:="NVarChar(MAX)")>  _
	Public Property MultiplyNumberEND() As String
		Get
			Return Me._MultiplyNumberEND
		End Get
		Set
			If (String.Equals(Me._MultiplyNumberEND, value) = false) Then
				Me.OnMultiplyNumberENDChanging(value)
				Me.SendPropertyChanging
				Me._MultiplyNumberEND = value
				Me.SendPropertyChanged("MultiplyNumberEND")
				Me.OnMultiplyNumberENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BaseNumberEND", DbType:="NVarChar(MAX)")>  _
	Public Property BaseNumberEND() As String
		Get
			Return Me._BaseNumberEND
		End Get
		Set
			If (String.Equals(Me._BaseNumberEND, value) = false) Then
				Me.OnBaseNumberENDChanging(value)
				Me.SendPropertyChanging
				Me._BaseNumberEND = value
				Me.SendPropertyChanged("BaseNumberEND")
				Me.OnBaseNumberENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PowerNumberEND", DbType:="NVarChar(MAX)")>  _
	Public Property PowerNumberEND() As String
		Get
			Return Me._PowerNumberEND
		End Get
		Set
			If (String.Equals(Me._PowerNumberEND, value) = false) Then
				Me.OnPowerNumberENDChanging(value)
				Me.SendPropertyChanging
				Me._PowerNumberEND = value
				Me.SendPropertyChanged("PowerNumberEND")
				Me.OnPowerNumberENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitForRangeContent", DbType:="NVarChar(MAX)")>  _
	Public Property UnitForRangeContent() As String
		Get
			Return Me._UnitForRangeContent
		End Get
		Set
			If (String.Equals(Me._UnitForRangeContent, value) = false) Then
				Me.OnUnitForRangeContentChanging(value)
				Me.SendPropertyChanging
				Me._UnitForRangeContent = value
				Me.SendPropertyChanged("UnitForRangeContent")
				Me.OnUnitForRangeContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_DRRGT_DETAIL_CAS", DbType:="Int")>  _
	Public Property IDA_DRRGT_DETAIL_CAS() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_DRRGT_DETAIL_CAS
		End Get
		Set
			If (Me._IDA_DRRGT_DETAIL_CAS.Equals(value) = false) Then
				Me.OnIDA_DRRGT_DETAIL_CASChanging(value)
				Me.SendPropertyChanging
				Me._IDA_DRRGT_DETAIL_CAS = value
				Me.SendPropertyChanged("IDA_DRRGT_DETAIL_CAS")
				Me.OnIDA_DRRGT_DETAIL_CASChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_IOW_EQ")>  _
Partial Public Class XML_DRUG_IOW_EQ
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _register As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _flineno As String
	
	Private _drgqty As String
	
	Private _drgperunit As String
	
	Private _drgcdt As String
	
	Private _drgcdt_condition As String
	
	Private _rid As String
	
	Private _elineno As String
	
	Private _iowacd As String
	
	Private _iowanm As String
	
	Private _SinggleContent As String
	
	Private _UnitForSinggleContent As String
	
	Private _qty As String
	
	Private _ConditionContent As String
	
	Private _MultiplyNumberStart As String
	
	Private _BaseNumberStart As String
	
	Private _PowerNumberStart As String
	
	Private _MultiplyNumberEND As String
	
	Private _BaseNumberEND As String
	
	Private _PowerNumberEND As String
	
	Private _UnitForRangeContent As String
	
	Private _aori As String
	
	Private _Newcode As String
	
	Private _Newcode_rid As String
	
	Private _Newcode_R As String
	
	Private _licen_loca As String
	
	Private _thaclassnm As String
	
	Private _cncnm As String
	
	Private _Newcode_rid_eq As String
	
	Private _lcnno As String
	
	Private _remark As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnregisterChanging(value As String)
    End Sub
    Partial Private Sub OnregisterChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnflinenoChanging(value As String)
    End Sub
    Partial Private Sub OnflinenoChanged()
    End Sub
    Partial Private Sub OndrgqtyChanging(value As String)
    End Sub
    Partial Private Sub OndrgqtyChanged()
    End Sub
    Partial Private Sub OndrgperunitChanging(value As String)
    End Sub
    Partial Private Sub OndrgperunitChanged()
    End Sub
    Partial Private Sub OndrgcdtChanging(value As String)
    End Sub
    Partial Private Sub OndrgcdtChanged()
    End Sub
    Partial Private Sub Ondrgcdt_conditionChanging(value As String)
    End Sub
    Partial Private Sub Ondrgcdt_conditionChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnelinenoChanging(value As String)
    End Sub
    Partial Private Sub OnelinenoChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OniowanmChanging(value As String)
    End Sub
    Partial Private Sub OniowanmChanged()
    End Sub
    Partial Private Sub OnSinggleContentChanging(value As String)
    End Sub
    Partial Private Sub OnSinggleContentChanged()
    End Sub
    Partial Private Sub OnUnitForSinggleContentChanging(value As String)
    End Sub
    Partial Private Sub OnUnitForSinggleContentChanged()
    End Sub
    Partial Private Sub OnqtyChanging(value As String)
    End Sub
    Partial Private Sub OnqtyChanged()
    End Sub
    Partial Private Sub OnConditionContentChanging(value As String)
    End Sub
    Partial Private Sub OnConditionContentChanged()
    End Sub
    Partial Private Sub OnMultiplyNumberStartChanging(value As String)
    End Sub
    Partial Private Sub OnMultiplyNumberStartChanged()
    End Sub
    Partial Private Sub OnBaseNumberStartChanging(value As String)
    End Sub
    Partial Private Sub OnBaseNumberStartChanged()
    End Sub
    Partial Private Sub OnPowerNumberStartChanging(value As String)
    End Sub
    Partial Private Sub OnPowerNumberStartChanged()
    End Sub
    Partial Private Sub OnMultiplyNumberENDChanging(value As String)
    End Sub
    Partial Private Sub OnMultiplyNumberENDChanged()
    End Sub
    Partial Private Sub OnBaseNumberENDChanging(value As String)
    End Sub
    Partial Private Sub OnBaseNumberENDChanged()
    End Sub
    Partial Private Sub OnPowerNumberENDChanging(value As String)
    End Sub
    Partial Private Sub OnPowerNumberENDChanged()
    End Sub
    Partial Private Sub OnUnitForRangeContentChanging(value As String)
    End Sub
    Partial Private Sub OnUnitForRangeContentChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnNewcode_ridChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_ridChanged()
    End Sub
    Partial Private Sub OnNewcode_RChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_RChanged()
    End Sub
    Partial Private Sub Onlicen_locaChanging(value As String)
    End Sub
    Partial Private Sub Onlicen_locaChanged()
    End Sub
    Partial Private Sub OnthaclassnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaclassnmChanged()
    End Sub
    Partial Private Sub OncncnmChanging(value As String)
    End Sub
    Partial Private Sub OncncnmChanged()
    End Sub
    Partial Private Sub OnNewcode_rid_eqChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_rid_eqChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_register", DbType:="NVarChar(MAX)")>  _
	Public Property register() As String
		Get
			Return Me._register
		End Get
		Set
			If (String.Equals(Me._register, value) = false) Then
				Me.OnregisterChanging(value)
				Me.SendPropertyChanging
				Me._register = value
				Me.SendPropertyChanged("register")
				Me.OnregisterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flineno", DbType:="NVarChar(10)")>  _
	Public Property flineno() As String
		Get
			Return Me._flineno
		End Get
		Set
			If (String.Equals(Me._flineno, value) = false) Then
				Me.OnflinenoChanging(value)
				Me.SendPropertyChanging
				Me._flineno = value
				Me.SendPropertyChanged("flineno")
				Me.OnflinenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgqty", DbType:="NVarChar(50)")>  _
	Public Property drgqty() As String
		Get
			Return Me._drgqty
		End Get
		Set
			If (String.Equals(Me._drgqty, value) = false) Then
				Me.OndrgqtyChanging(value)
				Me.SendPropertyChanging
				Me._drgqty = value
				Me.SendPropertyChanged("drgqty")
				Me.OndrgqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgperunit", DbType:="NVarChar(MAX)")>  _
	Public Property drgperunit() As String
		Get
			Return Me._drgperunit
		End Get
		Set
			If (String.Equals(Me._drgperunit, value) = false) Then
				Me.OndrgperunitChanging(value)
				Me.SendPropertyChanging
				Me._drgperunit = value
				Me.SendPropertyChanged("drgperunit")
				Me.OndrgperunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgcdt", DbType:="NVarChar(MAX)")>  _
	Public Property drgcdt() As String
		Get
			Return Me._drgcdt
		End Get
		Set
			If (String.Equals(Me._drgcdt, value) = false) Then
				Me.OndrgcdtChanging(value)
				Me.SendPropertyChanging
				Me._drgcdt = value
				Me.SendPropertyChanged("drgcdt")
				Me.OndrgcdtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgcdt_condition", DbType:="NVarChar(MAX)")>  _
	Public Property drgcdt_condition() As String
		Get
			Return Me._drgcdt_condition
		End Get
		Set
			If (String.Equals(Me._drgcdt_condition, value) = false) Then
				Me.Ondrgcdt_conditionChanging(value)
				Me.SendPropertyChanging
				Me._drgcdt_condition = value
				Me.SendPropertyChanged("drgcdt_condition")
				Me.Ondrgcdt_conditionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_elineno", DbType:="NVarChar(50)")>  _
	Public Property elineno() As String
		Get
			Return Me._elineno
		End Get
		Set
			If (String.Equals(Me._elineno, value) = false) Then
				Me.OnelinenoChanging(value)
				Me.SendPropertyChanging
				Me._elineno = value
				Me.SendPropertyChanged("elineno")
				Me.OnelinenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="NVarChar(MAX)")>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm", DbType:="NVarChar(MAX)")>  _
	Public Property iowanm() As String
		Get
			Return Me._iowanm
		End Get
		Set
			If (String.Equals(Me._iowanm, value) = false) Then
				Me.OniowanmChanging(value)
				Me.SendPropertyChanging
				Me._iowanm = value
				Me.SendPropertyChanged("iowanm")
				Me.OniowanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SinggleContent", DbType:="NVarChar(MAX)")>  _
	Public Property SinggleContent() As String
		Get
			Return Me._SinggleContent
		End Get
		Set
			If (String.Equals(Me._SinggleContent, value) = false) Then
				Me.OnSinggleContentChanging(value)
				Me.SendPropertyChanging
				Me._SinggleContent = value
				Me.SendPropertyChanged("SinggleContent")
				Me.OnSinggleContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitForSinggleContent", DbType:="NVarChar(MAX)")>  _
	Public Property UnitForSinggleContent() As String
		Get
			Return Me._UnitForSinggleContent
		End Get
		Set
			If (String.Equals(Me._UnitForSinggleContent, value) = false) Then
				Me.OnUnitForSinggleContentChanging(value)
				Me.SendPropertyChanging
				Me._UnitForSinggleContent = value
				Me.SendPropertyChanged("UnitForSinggleContent")
				Me.OnUnitForSinggleContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty", DbType:="NVarChar(50)")>  _
	Public Property qty() As String
		Get
			Return Me._qty
		End Get
		Set
			If (String.Equals(Me._qty, value) = false) Then
				Me.OnqtyChanging(value)
				Me.SendPropertyChanging
				Me._qty = value
				Me.SendPropertyChanged("qty")
				Me.OnqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConditionContent", DbType:="NVarChar(MAX)")>  _
	Public Property ConditionContent() As String
		Get
			Return Me._ConditionContent
		End Get
		Set
			If (String.Equals(Me._ConditionContent, value) = false) Then
				Me.OnConditionContentChanging(value)
				Me.SendPropertyChanging
				Me._ConditionContent = value
				Me.SendPropertyChanged("ConditionContent")
				Me.OnConditionContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MultiplyNumberStart", DbType:="NVarChar(MAX)")>  _
	Public Property MultiplyNumberStart() As String
		Get
			Return Me._MultiplyNumberStart
		End Get
		Set
			If (String.Equals(Me._MultiplyNumberStart, value) = false) Then
				Me.OnMultiplyNumberStartChanging(value)
				Me.SendPropertyChanging
				Me._MultiplyNumberStart = value
				Me.SendPropertyChanged("MultiplyNumberStart")
				Me.OnMultiplyNumberStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BaseNumberStart", DbType:="NVarChar(MAX)")>  _
	Public Property BaseNumberStart() As String
		Get
			Return Me._BaseNumberStart
		End Get
		Set
			If (String.Equals(Me._BaseNumberStart, value) = false) Then
				Me.OnBaseNumberStartChanging(value)
				Me.SendPropertyChanging
				Me._BaseNumberStart = value
				Me.SendPropertyChanged("BaseNumberStart")
				Me.OnBaseNumberStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PowerNumberStart", DbType:="NVarChar(MAX)")>  _
	Public Property PowerNumberStart() As String
		Get
			Return Me._PowerNumberStart
		End Get
		Set
			If (String.Equals(Me._PowerNumberStart, value) = false) Then
				Me.OnPowerNumberStartChanging(value)
				Me.SendPropertyChanging
				Me._PowerNumberStart = value
				Me.SendPropertyChanged("PowerNumberStart")
				Me.OnPowerNumberStartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MultiplyNumberEND", DbType:="NVarChar(MAX)")>  _
	Public Property MultiplyNumberEND() As String
		Get
			Return Me._MultiplyNumberEND
		End Get
		Set
			If (String.Equals(Me._MultiplyNumberEND, value) = false) Then
				Me.OnMultiplyNumberENDChanging(value)
				Me.SendPropertyChanging
				Me._MultiplyNumberEND = value
				Me.SendPropertyChanged("MultiplyNumberEND")
				Me.OnMultiplyNumberENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BaseNumberEND", DbType:="NVarChar(MAX)")>  _
	Public Property BaseNumberEND() As String
		Get
			Return Me._BaseNumberEND
		End Get
		Set
			If (String.Equals(Me._BaseNumberEND, value) = false) Then
				Me.OnBaseNumberENDChanging(value)
				Me.SendPropertyChanging
				Me._BaseNumberEND = value
				Me.SendPropertyChanged("BaseNumberEND")
				Me.OnBaseNumberENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PowerNumberEND", DbType:="NVarChar(MAX)")>  _
	Public Property PowerNumberEND() As String
		Get
			Return Me._PowerNumberEND
		End Get
		Set
			If (String.Equals(Me._PowerNumberEND, value) = false) Then
				Me.OnPowerNumberENDChanging(value)
				Me.SendPropertyChanging
				Me._PowerNumberEND = value
				Me.SendPropertyChanged("PowerNumberEND")
				Me.OnPowerNumberENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitForRangeContent", DbType:="NVarChar(MAX)")>  _
	Public Property UnitForRangeContent() As String
		Get
			Return Me._UnitForRangeContent
		End Get
		Set
			If (String.Equals(Me._UnitForRangeContent, value) = false) Then
				Me.OnUnitForRangeContentChanging(value)
				Me.SendPropertyChanging
				Me._UnitForRangeContent = value
				Me.SendPropertyChanged("UnitForRangeContent")
				Me.OnUnitForRangeContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(50)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_rid", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_rid() As String
		Get
			Return Me._Newcode_rid
		End Get
		Set
			If (String.Equals(Me._Newcode_rid, value) = false) Then
				Me.OnNewcode_ridChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_rid = value
				Me.SendPropertyChanged("Newcode_rid")
				Me.OnNewcode_ridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_R", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_R() As String
		Get
			Return Me._Newcode_R
		End Get
		Set
			If (String.Equals(Me._Newcode_R, value) = false) Then
				Me.OnNewcode_RChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_R = value
				Me.SendPropertyChanged("Newcode_R")
				Me.OnNewcode_RChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen_loca", DbType:="NVarChar(MAX)")>  _
	Public Property licen_loca() As String
		Get
			Return Me._licen_loca
		End Get
		Set
			If (String.Equals(Me._licen_loca, value) = false) Then
				Me.Onlicen_locaChanging(value)
				Me.SendPropertyChanging
				Me._licen_loca = value
				Me.SendPropertyChanged("licen_loca")
				Me.Onlicen_locaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaclassnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaclassnm() As String
		Get
			Return Me._thaclassnm
		End Get
		Set
			If (String.Equals(Me._thaclassnm, value) = false) Then
				Me.OnthaclassnmChanging(value)
				Me.SendPropertyChanging
				Me._thaclassnm = value
				Me.SendPropertyChanged("thaclassnm")
				Me.OnthaclassnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnm", DbType:="NVarChar(50)")>  _
	Public Property cncnm() As String
		Get
			Return Me._cncnm
		End Get
		Set
			If (String.Equals(Me._cncnm, value) = false) Then
				Me.OncncnmChanging(value)
				Me.SendPropertyChanging
				Me._cncnm = value
				Me.SendPropertyChanged("cncnm")
				Me.OncncnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_rid_eq", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_rid_eq() As String
		Get
			Return Me._Newcode_rid_eq
		End Get
		Set
			If (String.Equals(Me._Newcode_rid_eq, value) = false) Then
				Me.OnNewcode_rid_eqChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_rid_eq = value
				Me.SendPropertyChanged("Newcode_rid_eq")
				Me.OnNewcode_rid_eqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="NVarChar(MAX)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_SEARCH_PRODUCT_GROUP_ESUB")>  _
Partial Public Class XML_SEARCH_PRODUCT_GROUP_ESUB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _thargttpnm As String
	
	Private _engrgttpnm As String
	
	Private _thaclassnm As String
	
	Private _engclassnm As String
	
	Private _engdrgtpnm As String
	
	Private _thakindnm As String
	
	Private _engkindnm As String
	
	Private _register As String
	
	Private _rcvno As String
	
	Private _register_rcvno As String
	
	Private _lcnsid As String
	
	Private _pvnabbr As String
	
	Private _lpvncd As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
	Private _lcnno_no As String
	
	Private _prefix_thanm As String
	
	Private _prefix_licen As String
	
	Private _thanm As String
	
	Private _thanm_locaion As String
	
	Private _licen_loca As String
	
	Private _fulladdr As String
	
	Private _thaaddr_thanm As String
	
	Private _tharoom_thanm As String
	
	Private _thafloor_thanm As String
	
	Private _thabuilding_thanm As String
	
	Private _thasoi_thanm As String
	
	Private _tharoad_thanm As String
	
	Private _thamu_thanm As String
	
	Private _thathmblnm_thanm As String
	
	Private _thaamphrnm_thanm As String
	
	Private _thachngwtnm_thanm As String
	
	Private _zipcode_thanm As String
	
	Private _tel_thanm As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _GROUPNAME As String
	
	Private _phm15dgt As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _Identify As String
	
	Private _drgperunit As String
	
	Private _cntcd As String
	
	Private _thadsgnm As String
	
	Private _engdsgnm As String
	
	Private _ctgthanm As String
	
	Private _ctgengnm As String
	
	Private _potency As String
	
	Private _dsgcd As String
	
	Private _ctgcd As String
	
	Private _cnccd As String
	
	Private _cncnm As String
	
	Private _cnccsnm As String
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _rcvdate_T As String
	
	Private _appdate_T As String
	
	Private _ExpiryDate As String
	
	Private _story_edit As String
	
	Private _appdate_th As String
	
	Private _cncdate_th As String
	
	Private _cnsdnm As String
	
	Private _engfrgnnm As String
	
	Private _engfrgnnm_addr As String
	
	Private _rid As String
	
	Private _cncdcd As String
	
	Private _expdate As System.Nullable(Of Date)
	
	Private _frn_no As String
	
	Private _itemno As String
	
	Private _Ranking As String
	
	Private _typerqt As String
	
	Private _Buyers_through As String
	
	Private _Buyers_through_cntcd As String
	
	Private _Newcode As String
	
	Private _Newcode_U As String
	
	Private _Newcode_R As String
	
	Private _Newcode_not As String
	
	Private _register_search As String
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _register_search2 As String
	
	Private _indication As String
	
	Private _funcnm As String
	
	Private _IDA_drrgt As System.Nullable(Of Integer)
	
	Private _cncnote As String
	
	Private _CER_FORMAT As String
	
	Private _engcntnm As String
	
	Private _IDA_dh15rqt As System.Nullable(Of Integer)
	
	Private _pvnabbr2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnthargttpnmChanging(value As String)
    End Sub
    Partial Private Sub OnthargttpnmChanged()
    End Sub
    Partial Private Sub OnengrgttpnmChanging(value As String)
    End Sub
    Partial Private Sub OnengrgttpnmChanged()
    End Sub
    Partial Private Sub OnthaclassnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaclassnmChanged()
    End Sub
    Partial Private Sub OnengclassnmChanging(value As String)
    End Sub
    Partial Private Sub OnengclassnmChanged()
    End Sub
    Partial Private Sub OnengdrgtpnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgtpnmChanged()
    End Sub
    Partial Private Sub OnthakindnmChanging(value As String)
    End Sub
    Partial Private Sub OnthakindnmChanged()
    End Sub
    Partial Private Sub OnengkindnmChanging(value As String)
    End Sub
    Partial Private Sub OnengkindnmChanged()
    End Sub
    Partial Private Sub OnregisterChanging(value As String)
    End Sub
    Partial Private Sub OnregisterChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub Onregister_rcvnoChanging(value As String)
    End Sub
    Partial Private Sub Onregister_rcvnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onlcnno_noChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_noChanged()
    End Sub
    Partial Private Sub Onprefix_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onprefix_thanmChanged()
    End Sub
    Partial Private Sub Onprefix_licenChanging(value As String)
    End Sub
    Partial Private Sub Onprefix_licenChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub Onthanm_locaionChanging(value As String)
    End Sub
    Partial Private Sub Onthanm_locaionChanged()
    End Sub
    Partial Private Sub Onlicen_locaChanging(value As String)
    End Sub
    Partial Private Sub Onlicen_locaChanged()
    End Sub
    Partial Private Sub OnfulladdrChanging(value As String)
    End Sub
    Partial Private Sub OnfulladdrChanged()
    End Sub
    Partial Private Sub Onthaaddr_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onthaaddr_thanmChanged()
    End Sub
    Partial Private Sub Ontharoom_thanmChanging(value As String)
    End Sub
    Partial Private Sub Ontharoom_thanmChanged()
    End Sub
    Partial Private Sub Onthafloor_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onthafloor_thanmChanged()
    End Sub
    Partial Private Sub Onthabuilding_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onthabuilding_thanmChanged()
    End Sub
    Partial Private Sub Onthasoi_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onthasoi_thanmChanged()
    End Sub
    Partial Private Sub Ontharoad_thanmChanging(value As String)
    End Sub
    Partial Private Sub Ontharoad_thanmChanged()
    End Sub
    Partial Private Sub Onthamu_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onthamu_thanmChanged()
    End Sub
    Partial Private Sub Onthathmblnm_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onthathmblnm_thanmChanged()
    End Sub
    Partial Private Sub Onthaamphrnm_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onthaamphrnm_thanmChanged()
    End Sub
    Partial Private Sub Onthachngwtnm_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onthachngwtnm_thanmChanged()
    End Sub
    Partial Private Sub Onzipcode_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onzipcode_thanmChanged()
    End Sub
    Partial Private Sub Ontel_thanmChanging(value As String)
    End Sub
    Partial Private Sub Ontel_thanmChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnGROUPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPNAMEChanged()
    End Sub
    Partial Private Sub Onphm15dgtChanging(value As String)
    End Sub
    Partial Private Sub Onphm15dgtChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnIdentifyChanging(value As String)
    End Sub
    Partial Private Sub OnIdentifyChanged()
    End Sub
    Partial Private Sub OndrgperunitChanging(value As String)
    End Sub
    Partial Private Sub OndrgperunitChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OnthadsgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadsgnmChanged()
    End Sub
    Partial Private Sub OnengdsgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdsgnmChanged()
    End Sub
    Partial Private Sub OnctgthanmChanging(value As String)
    End Sub
    Partial Private Sub OnctgthanmChanged()
    End Sub
    Partial Private Sub OnctgengnmChanging(value As String)
    End Sub
    Partial Private Sub OnctgengnmChanged()
    End Sub
    Partial Private Sub OnpotencyChanging(value As String)
    End Sub
    Partial Private Sub OnpotencyChanged()
    End Sub
    Partial Private Sub OndsgcdChanging(value As String)
    End Sub
    Partial Private Sub OndsgcdChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As String)
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As String)
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncncnmChanging(value As String)
    End Sub
    Partial Private Sub OncncnmChanged()
    End Sub
    Partial Private Sub OncnccsnmChanging(value As String)
    End Sub
    Partial Private Sub OncnccsnmChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub Onrcvdate_TChanging(value As String)
    End Sub
    Partial Private Sub Onrcvdate_TChanged()
    End Sub
    Partial Private Sub Onappdate_TChanging(value As String)
    End Sub
    Partial Private Sub Onappdate_TChanged()
    End Sub
    Partial Private Sub OnExpiryDateChanging(value As String)
    End Sub
    Partial Private Sub OnExpiryDateChanged()
    End Sub
    Partial Private Sub Onstory_editChanging(value As String)
    End Sub
    Partial Private Sub Onstory_editChanged()
    End Sub
    Partial Private Sub Onappdate_thChanging(value As String)
    End Sub
    Partial Private Sub Onappdate_thChanged()
    End Sub
    Partial Private Sub Oncncdate_thChanging(value As String)
    End Sub
    Partial Private Sub Oncncdate_thChanged()
    End Sub
    Partial Private Sub OncnsdnmChanging(value As String)
    End Sub
    Partial Private Sub OncnsdnmChanged()
    End Sub
    Partial Private Sub OnengfrgnnmChanging(value As String)
    End Sub
    Partial Private Sub OnengfrgnnmChanged()
    End Sub
    Partial Private Sub Onengfrgnnm_addrChanging(value As String)
    End Sub
    Partial Private Sub Onengfrgnnm_addrChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OncncdcdChanging(value As String)
    End Sub
    Partial Private Sub OncncdcdChanged()
    End Sub
    Partial Private Sub OnexpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnexpdateChanged()
    End Sub
    Partial Private Sub Onfrn_noChanging(value As String)
    End Sub
    Partial Private Sub Onfrn_noChanged()
    End Sub
    Partial Private Sub OnitemnoChanging(value As String)
    End Sub
    Partial Private Sub OnitemnoChanged()
    End Sub
    Partial Private Sub OnRankingChanging(value As String)
    End Sub
    Partial Private Sub OnRankingChanged()
    End Sub
    Partial Private Sub OntyperqtChanging(value As String)
    End Sub
    Partial Private Sub OntyperqtChanged()
    End Sub
    Partial Private Sub OnBuyers_throughChanging(value As String)
    End Sub
    Partial Private Sub OnBuyers_throughChanged()
    End Sub
    Partial Private Sub OnBuyers_through_cntcdChanging(value As String)
    End Sub
    Partial Private Sub OnBuyers_through_cntcdChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnNewcode_UChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_UChanged()
    End Sub
    Partial Private Sub OnNewcode_RChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_RChanged()
    End Sub
    Partial Private Sub OnNewcode_notChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_notChanged()
    End Sub
    Partial Private Sub Onregister_searchChanging(value As String)
    End Sub
    Partial Private Sub Onregister_searchChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub Onregister_search2Changing(value As String)
    End Sub
    Partial Private Sub Onregister_search2Changed()
    End Sub
    Partial Private Sub OnindicationChanging(value As String)
    End Sub
    Partial Private Sub OnindicationChanged()
    End Sub
    Partial Private Sub OnfuncnmChanging(value As String)
    End Sub
    Partial Private Sub OnfuncnmChanged()
    End Sub
    Partial Private Sub OnIDA_drrgtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_drrgtChanged()
    End Sub
    Partial Private Sub OncncnoteChanging(value As String)
    End Sub
    Partial Private Sub OncncnoteChanged()
    End Sub
    Partial Private Sub OnCER_FORMATChanging(value As String)
    End Sub
    Partial Private Sub OnCER_FORMATChanged()
    End Sub
    Partial Private Sub OnengcntnmChanging(value As String)
    End Sub
    Partial Private Sub OnengcntnmChanged()
    End Sub
    Partial Private Sub OnIDA_dh15rqtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_dh15rqtChanged()
    End Sub
    Partial Private Sub Onpvnabbr2Changing(value As String)
    End Sub
    Partial Private Sub Onpvnabbr2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thargttpnm", DbType:="NVarChar(MAX)")>  _
	Public Property thargttpnm() As String
		Get
			Return Me._thargttpnm
		End Get
		Set
			If (String.Equals(Me._thargttpnm, value) = false) Then
				Me.OnthargttpnmChanging(value)
				Me.SendPropertyChanging
				Me._thargttpnm = value
				Me.SendPropertyChanged("thargttpnm")
				Me.OnthargttpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engrgttpnm", DbType:="NVarChar(MAX)")>  _
	Public Property engrgttpnm() As String
		Get
			Return Me._engrgttpnm
		End Get
		Set
			If (String.Equals(Me._engrgttpnm, value) = false) Then
				Me.OnengrgttpnmChanging(value)
				Me.SendPropertyChanging
				Me._engrgttpnm = value
				Me.SendPropertyChanged("engrgttpnm")
				Me.OnengrgttpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaclassnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaclassnm() As String
		Get
			Return Me._thaclassnm
		End Get
		Set
			If (String.Equals(Me._thaclassnm, value) = false) Then
				Me.OnthaclassnmChanging(value)
				Me.SendPropertyChanging
				Me._thaclassnm = value
				Me.SendPropertyChanged("thaclassnm")
				Me.OnthaclassnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engclassnm", DbType:="NVarChar(MAX)")>  _
	Public Property engclassnm() As String
		Get
			Return Me._engclassnm
		End Get
		Set
			If (String.Equals(Me._engclassnm, value) = false) Then
				Me.OnengclassnmChanging(value)
				Me.SendPropertyChanging
				Me._engclassnm = value
				Me.SendPropertyChanged("engclassnm")
				Me.OnengclassnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgtpnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgtpnm() As String
		Get
			Return Me._engdrgtpnm
		End Get
		Set
			If (String.Equals(Me._engdrgtpnm, value) = false) Then
				Me.OnengdrgtpnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgtpnm = value
				Me.SendPropertyChanged("engdrgtpnm")
				Me.OnengdrgtpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thakindnm", DbType:="NVarChar(MAX)")>  _
	Public Property thakindnm() As String
		Get
			Return Me._thakindnm
		End Get
		Set
			If (String.Equals(Me._thakindnm, value) = false) Then
				Me.OnthakindnmChanging(value)
				Me.SendPropertyChanging
				Me._thakindnm = value
				Me.SendPropertyChanged("thakindnm")
				Me.OnthakindnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engkindnm", DbType:="NVarChar(MAX)")>  _
	Public Property engkindnm() As String
		Get
			Return Me._engkindnm
		End Get
		Set
			If (String.Equals(Me._engkindnm, value) = false) Then
				Me.OnengkindnmChanging(value)
				Me.SendPropertyChanging
				Me._engkindnm = value
				Me.SendPropertyChanged("engkindnm")
				Me.OnengkindnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_register", DbType:="NVarChar(MAX)")>  _
	Public Property register() As String
		Get
			Return Me._register
		End Get
		Set
			If (String.Equals(Me._register, value) = false) Then
				Me.OnregisterChanging(value)
				Me.SendPropertyChanging
				Me._register = value
				Me.SendPropertyChanged("register")
				Me.OnregisterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(50)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_register_rcvno", DbType:="NVarChar(50)")>  _
	Public Property register_rcvno() As String
		Get
			Return Me._register_rcvno
		End Get
		Set
			If (String.Equals(Me._register_rcvno, value) = false) Then
				Me.Onregister_rcvnoChanging(value)
				Me.SendPropertyChanging
				Me._register_rcvno = value
				Me.SendPropertyChanged("register_rcvno")
				Me.Onregister_rcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(50)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="NVarChar(50)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="NVarChar(50)")>  _
	Public Property lpvncd() As String
		Get
			Return Me._lpvncd
		End Get
		Set
			If (String.Equals(Me._lpvncd, value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_no", DbType:="NVarChar(50)")>  _
	Public Property lcnno_no() As String
		Get
			Return Me._lcnno_no
		End Get
		Set
			If (String.Equals(Me._lcnno_no, value) = false) Then
				Me.Onlcnno_noChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_no = value
				Me.SendPropertyChanged("lcnno_no")
				Me.Onlcnno_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefix_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property prefix_thanm() As String
		Get
			Return Me._prefix_thanm
		End Get
		Set
			If (String.Equals(Me._prefix_thanm, value) = false) Then
				Me.Onprefix_thanmChanging(value)
				Me.SendPropertyChanging
				Me._prefix_thanm = value
				Me.SendPropertyChanged("prefix_thanm")
				Me.Onprefix_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefix_licen", DbType:="NVarChar(MAX)")>  _
	Public Property prefix_licen() As String
		Get
			Return Me._prefix_licen
		End Get
		Set
			If (String.Equals(Me._prefix_licen, value) = false) Then
				Me.Onprefix_licenChanging(value)
				Me.SendPropertyChanging
				Me._prefix_licen = value
				Me.SendPropertyChanged("prefix_licen")
				Me.Onprefix_licenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm_locaion", DbType:="NVarChar(MAX)")>  _
	Public Property thanm_locaion() As String
		Get
			Return Me._thanm_locaion
		End Get
		Set
			If (String.Equals(Me._thanm_locaion, value) = false) Then
				Me.Onthanm_locaionChanging(value)
				Me.SendPropertyChanging
				Me._thanm_locaion = value
				Me.SendPropertyChanged("thanm_locaion")
				Me.Onthanm_locaionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen_loca", DbType:="NVarChar(MAX)")>  _
	Public Property licen_loca() As String
		Get
			Return Me._licen_loca
		End Get
		Set
			If (String.Equals(Me._licen_loca, value) = false) Then
				Me.Onlicen_locaChanging(value)
				Me.SendPropertyChanging
				Me._licen_loca = value
				Me.SendPropertyChanged("licen_loca")
				Me.Onlicen_locaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fulladdr", DbType:="NVarChar(MAX)")>  _
	Public Property fulladdr() As String
		Get
			Return Me._fulladdr
		End Get
		Set
			If (String.Equals(Me._fulladdr, value) = false) Then
				Me.OnfulladdrChanging(value)
				Me.SendPropertyChanging
				Me._fulladdr = value
				Me.SendPropertyChanged("fulladdr")
				Me.OnfulladdrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr_thanm() As String
		Get
			Return Me._thaaddr_thanm
		End Get
		Set
			If (String.Equals(Me._thaaddr_thanm, value) = false) Then
				Me.Onthaaddr_thanmChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr_thanm = value
				Me.SendPropertyChanged("thaaddr_thanm")
				Me.Onthaaddr_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoom_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property tharoom_thanm() As String
		Get
			Return Me._tharoom_thanm
		End Get
		Set
			If (String.Equals(Me._tharoom_thanm, value) = false) Then
				Me.Ontharoom_thanmChanging(value)
				Me.SendPropertyChanging
				Me._tharoom_thanm = value
				Me.SendPropertyChanged("tharoom_thanm")
				Me.Ontharoom_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafloor_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thafloor_thanm() As String
		Get
			Return Me._thafloor_thanm
		End Get
		Set
			If (String.Equals(Me._thafloor_thanm, value) = false) Then
				Me.Onthafloor_thanmChanging(value)
				Me.SendPropertyChanging
				Me._thafloor_thanm = value
				Me.SendPropertyChanged("thafloor_thanm")
				Me.Onthafloor_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thabuilding_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thabuilding_thanm() As String
		Get
			Return Me._thabuilding_thanm
		End Get
		Set
			If (String.Equals(Me._thabuilding_thanm, value) = false) Then
				Me.Onthabuilding_thanmChanging(value)
				Me.SendPropertyChanging
				Me._thabuilding_thanm = value
				Me.SendPropertyChanged("thabuilding_thanm")
				Me.Onthabuilding_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi_thanm() As String
		Get
			Return Me._thasoi_thanm
		End Get
		Set
			If (String.Equals(Me._thasoi_thanm, value) = false) Then
				Me.Onthasoi_thanmChanging(value)
				Me.SendPropertyChanging
				Me._thasoi_thanm = value
				Me.SendPropertyChanged("thasoi_thanm")
				Me.Onthasoi_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad_thanm() As String
		Get
			Return Me._tharoad_thanm
		End Get
		Set
			If (String.Equals(Me._tharoad_thanm, value) = false) Then
				Me.Ontharoad_thanmChanging(value)
				Me.SendPropertyChanging
				Me._tharoad_thanm = value
				Me.SendPropertyChanged("tharoad_thanm")
				Me.Ontharoad_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thamu_thanm() As String
		Get
			Return Me._thamu_thanm
		End Get
		Set
			If (String.Equals(Me._thamu_thanm, value) = false) Then
				Me.Onthamu_thanmChanging(value)
				Me.SendPropertyChanging
				Me._thamu_thanm = value
				Me.SendPropertyChanged("thamu_thanm")
				Me.Onthamu_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm_thanm() As String
		Get
			Return Me._thathmblnm_thanm
		End Get
		Set
			If (String.Equals(Me._thathmblnm_thanm, value) = false) Then
				Me.Onthathmblnm_thanmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm_thanm = value
				Me.SendPropertyChanged("thathmblnm_thanm")
				Me.Onthathmblnm_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm_thanm() As String
		Get
			Return Me._thaamphrnm_thanm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm_thanm, value) = false) Then
				Me.Onthaamphrnm_thanmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm_thanm = value
				Me.SendPropertyChanged("thaamphrnm_thanm")
				Me.Onthaamphrnm_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm_thanm() As String
		Get
			Return Me._thachngwtnm_thanm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm_thanm, value) = false) Then
				Me.Onthachngwtnm_thanmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm_thanm = value
				Me.SendPropertyChanged("thachngwtnm_thanm")
				Me.Onthachngwtnm_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property zipcode_thanm() As String
		Get
			Return Me._zipcode_thanm
		End Get
		Set
			If (String.Equals(Me._zipcode_thanm, value) = false) Then
				Me.Onzipcode_thanmChanging(value)
				Me.SendPropertyChanging
				Me._zipcode_thanm = value
				Me.SendPropertyChanged("zipcode_thanm")
				Me.Onzipcode_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property tel_thanm() As String
		Get
			Return Me._tel_thanm
		End Get
		Set
			If (String.Equals(Me._tel_thanm, value) = false) Then
				Me.Ontel_thanmChanging(value)
				Me.SendPropertyChanging
				Me._tel_thanm = value
				Me.SendPropertyChanged("tel_thanm")
				Me.Ontel_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPNAME", DbType:="NVarChar(50)")>  _
	Public Property GROUPNAME() As String
		Get
			Return Me._GROUPNAME
		End Get
		Set
			If (String.Equals(Me._GROUPNAME, value) = false) Then
				Me.OnGROUPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPNAME = value
				Me.SendPropertyChanged("GROUPNAME")
				Me.OnGROUPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phm15dgt", DbType:="NVarChar(MAX)")>  _
	Public Property phm15dgt() As String
		Get
			Return Me._phm15dgt
		End Get
		Set
			If (String.Equals(Me._phm15dgt, value) = false) Then
				Me.Onphm15dgtChanging(value)
				Me.SendPropertyChanging
				Me._phm15dgt = value
				Me.SendPropertyChanged("phm15dgt")
				Me.Onphm15dgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identify", DbType:="NVarChar(50)")>  _
	Public Property Identify() As String
		Get
			Return Me._Identify
		End Get
		Set
			If (String.Equals(Me._Identify, value) = false) Then
				Me.OnIdentifyChanging(value)
				Me.SendPropertyChanging
				Me._Identify = value
				Me.SendPropertyChanged("Identify")
				Me.OnIdentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgperunit", DbType:="NVarChar(MAX)")>  _
	Public Property drgperunit() As String
		Get
			Return Me._drgperunit
		End Get
		Set
			If (String.Equals(Me._drgperunit, value) = false) Then
				Me.OndrgperunitChanging(value)
				Me.SendPropertyChanging
				Me._drgperunit = value
				Me.SendPropertyChanged("drgperunit")
				Me.OndrgperunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="NVarChar(50)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadsgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadsgnm() As String
		Get
			Return Me._thadsgnm
		End Get
		Set
			If (String.Equals(Me._thadsgnm, value) = false) Then
				Me.OnthadsgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadsgnm = value
				Me.SendPropertyChanged("thadsgnm")
				Me.OnthadsgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdsgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdsgnm() As String
		Get
			Return Me._engdsgnm
		End Get
		Set
			If (String.Equals(Me._engdsgnm, value) = false) Then
				Me.OnengdsgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdsgnm = value
				Me.SendPropertyChanged("engdsgnm")
				Me.OnengdsgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgthanm", DbType:="NVarChar(MAX)")>  _
	Public Property ctgthanm() As String
		Get
			Return Me._ctgthanm
		End Get
		Set
			If (String.Equals(Me._ctgthanm, value) = false) Then
				Me.OnctgthanmChanging(value)
				Me.SendPropertyChanging
				Me._ctgthanm = value
				Me.SendPropertyChanged("ctgthanm")
				Me.OnctgthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgengnm", DbType:="NVarChar(MAX)")>  _
	Public Property ctgengnm() As String
		Get
			Return Me._ctgengnm
		End Get
		Set
			If (String.Equals(Me._ctgengnm, value) = false) Then
				Me.OnctgengnmChanging(value)
				Me.SendPropertyChanging
				Me._ctgengnm = value
				Me.SendPropertyChanged("ctgengnm")
				Me.OnctgengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_potency", DbType:="NVarChar(MAX)")>  _
	Public Property potency() As String
		Get
			Return Me._potency
		End Get
		Set
			If (String.Equals(Me._potency, value) = false) Then
				Me.OnpotencyChanging(value)
				Me.SendPropertyChanging
				Me._potency = value
				Me.SendPropertyChanged("potency")
				Me.OnpotencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsgcd", DbType:="NVarChar(50)")>  _
	Public Property dsgcd() As String
		Get
			Return Me._dsgcd
		End Get
		Set
			If (String.Equals(Me._dsgcd, value) = false) Then
				Me.OndsgcdChanging(value)
				Me.SendPropertyChanging
				Me._dsgcd = value
				Me.SendPropertyChanged("dsgcd")
				Me.OndsgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="NVarChar(50)")>  _
	Public Property ctgcd() As String
		Get
			Return Me._ctgcd
		End Get
		Set
			If (String.Equals(Me._ctgcd, value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="NVarChar(50)")>  _
	Public Property cnccd() As String
		Get
			Return Me._cnccd
		End Get
		Set
			If (String.Equals(Me._cnccd, value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnm", DbType:="NVarChar(MAX)")>  _
	Public Property cncnm() As String
		Get
			Return Me._cncnm
		End Get
		Set
			If (String.Equals(Me._cncnm, value) = false) Then
				Me.OncncnmChanging(value)
				Me.SendPropertyChanging
				Me._cncnm = value
				Me.SendPropertyChanged("cncnm")
				Me.OncncnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccsnm", DbType:="NVarChar(MAX)")>  _
	Public Property cnccsnm() As String
		Get
			Return Me._cnccsnm
		End Get
		Set
			If (String.Equals(Me._cnccsnm, value) = false) Then
				Me.OncnccsnmChanging(value)
				Me.SendPropertyChanging
				Me._cnccsnm = value
				Me.SendPropertyChanged("cnccsnm")
				Me.OncnccsnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate_T", DbType:="NVarChar(50)")>  _
	Public Property rcvdate_T() As String
		Get
			Return Me._rcvdate_T
		End Get
		Set
			If (String.Equals(Me._rcvdate_T, value) = false) Then
				Me.Onrcvdate_TChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate_T = value
				Me.SendPropertyChanged("rcvdate_T")
				Me.Onrcvdate_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate_T", DbType:="NVarChar(50)")>  _
	Public Property appdate_T() As String
		Get
			Return Me._appdate_T
		End Get
		Set
			If (String.Equals(Me._appdate_T, value) = false) Then
				Me.Onappdate_TChanging(value)
				Me.SendPropertyChanging
				Me._appdate_T = value
				Me.SendPropertyChanged("appdate_T")
				Me.Onappdate_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpiryDate", DbType:="NVarChar(50)")>  _
	Public Property ExpiryDate() As String
		Get
			Return Me._ExpiryDate
		End Get
		Set
			If (String.Equals(Me._ExpiryDate, value) = false) Then
				Me.OnExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._ExpiryDate = value
				Me.SendPropertyChanged("ExpiryDate")
				Me.OnExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_story_edit", DbType:="NVarChar(MAX)")>  _
	Public Property story_edit() As String
		Get
			Return Me._story_edit
		End Get
		Set
			If (String.Equals(Me._story_edit, value) = false) Then
				Me.Onstory_editChanging(value)
				Me.SendPropertyChanging
				Me._story_edit = value
				Me.SendPropertyChanged("story_edit")
				Me.Onstory_editChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate_th", DbType:="NVarChar(MAX)")>  _
	Public Property appdate_th() As String
		Get
			Return Me._appdate_th
		End Get
		Set
			If (String.Equals(Me._appdate_th, value) = false) Then
				Me.Onappdate_thChanging(value)
				Me.SendPropertyChanging
				Me._appdate_th = value
				Me.SendPropertyChanged("appdate_th")
				Me.Onappdate_thChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate_th", DbType:="NVarChar(MAX)")>  _
	Public Property cncdate_th() As String
		Get
			Return Me._cncdate_th
		End Get
		Set
			If (String.Equals(Me._cncdate_th, value) = false) Then
				Me.Oncncdate_thChanging(value)
				Me.SendPropertyChanging
				Me._cncdate_th = value
				Me.SendPropertyChanged("cncdate_th")
				Me.Oncncdate_thChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdnm", DbType:="NVarChar(MAX)")>  _
	Public Property cnsdnm() As String
		Get
			Return Me._cnsdnm
		End Get
		Set
			If (String.Equals(Me._cnsdnm, value) = false) Then
				Me.OncnsdnmChanging(value)
				Me.SendPropertyChanging
				Me._cnsdnm = value
				Me.SendPropertyChanged("cnsdnm")
				Me.OncnsdnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm", DbType:="NVarChar(MAX)")>  _
	Public Property engfrgnnm() As String
		Get
			Return Me._engfrgnnm
		End Get
		Set
			If (String.Equals(Me._engfrgnnm, value) = false) Then
				Me.OnengfrgnnmChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm = value
				Me.SendPropertyChanged("engfrgnnm")
				Me.OnengfrgnnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm_addr", DbType:="NVarChar(MAX)")>  _
	Public Property engfrgnnm_addr() As String
		Get
			Return Me._engfrgnnm_addr
		End Get
		Set
			If (String.Equals(Me._engfrgnnm_addr, value) = false) Then
				Me.Onengfrgnnm_addrChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm_addr = value
				Me.SendPropertyChanged("engfrgnnm_addr")
				Me.Onengfrgnnm_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(50)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdcd", DbType:="NVarChar(50)")>  _
	Public Property cncdcd() As String
		Get
			Return Me._cncdcd
		End Get
		Set
			If (String.Equals(Me._cncdcd, value) = false) Then
				Me.OncncdcdChanging(value)
				Me.SendPropertyChanging
				Me._cncdcd = value
				Me.SendPropertyChanged("cncdcd")
				Me.OncncdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expdate", DbType:="Date")>  _
	Public Property expdate() As System.Nullable(Of Date)
		Get
			Return Me._expdate
		End Get
		Set
			If (Me._expdate.Equals(value) = false) Then
				Me.OnexpdateChanging(value)
				Me.SendPropertyChanging
				Me._expdate = value
				Me.SendPropertyChanged("expdate")
				Me.OnexpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frn_no", DbType:="NVarChar(50)")>  _
	Public Property frn_no() As String
		Get
			Return Me._frn_no
		End Get
		Set
			If (String.Equals(Me._frn_no, value) = false) Then
				Me.Onfrn_noChanging(value)
				Me.SendPropertyChanging
				Me._frn_no = value
				Me.SendPropertyChanged("frn_no")
				Me.Onfrn_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_itemno", DbType:="NVarChar(50)")>  _
	Public Property itemno() As String
		Get
			Return Me._itemno
		End Get
		Set
			If (String.Equals(Me._itemno, value) = false) Then
				Me.OnitemnoChanging(value)
				Me.SendPropertyChanging
				Me._itemno = value
				Me.SendPropertyChanged("itemno")
				Me.OnitemnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ranking", DbType:="NVarChar(50)")>  _
	Public Property Ranking() As String
		Get
			Return Me._Ranking
		End Get
		Set
			If (String.Equals(Me._Ranking, value) = false) Then
				Me.OnRankingChanging(value)
				Me.SendPropertyChanging
				Me._Ranking = value
				Me.SendPropertyChanged("Ranking")
				Me.OnRankingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typerqt", DbType:="NVarChar(MAX)")>  _
	Public Property typerqt() As String
		Get
			Return Me._typerqt
		End Get
		Set
			If (String.Equals(Me._typerqt, value) = false) Then
				Me.OntyperqtChanging(value)
				Me.SendPropertyChanging
				Me._typerqt = value
				Me.SendPropertyChanged("typerqt")
				Me.OntyperqtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Buyers_through", DbType:="NVarChar(MAX)")>  _
	Public Property Buyers_through() As String
		Get
			Return Me._Buyers_through
		End Get
		Set
			If (String.Equals(Me._Buyers_through, value) = false) Then
				Me.OnBuyers_throughChanging(value)
				Me.SendPropertyChanging
				Me._Buyers_through = value
				Me.SendPropertyChanged("Buyers_through")
				Me.OnBuyers_throughChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Buyers_through_cntcd", DbType:="NVarChar(MAX)")>  _
	Public Property Buyers_through_cntcd() As String
		Get
			Return Me._Buyers_through_cntcd
		End Get
		Set
			If (String.Equals(Me._Buyers_through_cntcd, value) = false) Then
				Me.OnBuyers_through_cntcdChanging(value)
				Me.SendPropertyChanging
				Me._Buyers_through_cntcd = value
				Me.SendPropertyChanged("Buyers_through_cntcd")
				Me.OnBuyers_through_cntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_U", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_U() As String
		Get
			Return Me._Newcode_U
		End Get
		Set
			If (String.Equals(Me._Newcode_U, value) = false) Then
				Me.OnNewcode_UChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_U = value
				Me.SendPropertyChanged("Newcode_U")
				Me.OnNewcode_UChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_R", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_R() As String
		Get
			Return Me._Newcode_R
		End Get
		Set
			If (String.Equals(Me._Newcode_R, value) = false) Then
				Me.OnNewcode_RChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_R = value
				Me.SendPropertyChanged("Newcode_R")
				Me.OnNewcode_RChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_not", DbType:="VarChar(MAX)")>  _
	Public Property Newcode_not() As String
		Get
			Return Me._Newcode_not
		End Get
		Set
			If (String.Equals(Me._Newcode_not, value) = false) Then
				Me.OnNewcode_notChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_not = value
				Me.SendPropertyChanged("Newcode_not")
				Me.OnNewcode_notChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_register_search", DbType:="VarChar(MAX)")>  _
	Public Property register_search() As String
		Get
			Return Me._register_search
		End Get
		Set
			If (String.Equals(Me._register_search, value) = false) Then
				Me.Onregister_searchChanging(value)
				Me.SendPropertyChanging
				Me._register_search = value
				Me.SendPropertyChanged("register_search")
				Me.Onregister_searchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_register_search2", DbType:="NVarChar(MAX)")>  _
	Public Property register_search2() As String
		Get
			Return Me._register_search2
		End Get
		Set
			If (String.Equals(Me._register_search2, value) = false) Then
				Me.Onregister_search2Changing(value)
				Me.SendPropertyChanging
				Me._register_search2 = value
				Me.SendPropertyChanged("register_search2")
				Me.Onregister_search2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_indication", DbType:="NVarChar(MAX)")>  _
	Public Property indication() As String
		Get
			Return Me._indication
		End Get
		Set
			If (String.Equals(Me._indication, value) = false) Then
				Me.OnindicationChanging(value)
				Me.SendPropertyChanging
				Me._indication = value
				Me.SendPropertyChanged("indication")
				Me.OnindicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funcnm", DbType:="NVarChar(MAX)")>  _
	Public Property funcnm() As String
		Get
			Return Me._funcnm
		End Get
		Set
			If (String.Equals(Me._funcnm, value) = false) Then
				Me.OnfuncnmChanging(value)
				Me.SendPropertyChanging
				Me._funcnm = value
				Me.SendPropertyChanged("funcnm")
				Me.OnfuncnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_drrgt", DbType:="Int")>  _
	Public Property IDA_drrgt() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_drrgt
		End Get
		Set
			If (Me._IDA_drrgt.Equals(value) = false) Then
				Me.OnIDA_drrgtChanging(value)
				Me.SendPropertyChanging
				Me._IDA_drrgt = value
				Me.SendPropertyChanged("IDA_drrgt")
				Me.OnIDA_drrgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnote", DbType:="NVarChar(MAX)")>  _
	Public Property cncnote() As String
		Get
			Return Me._cncnote
		End Get
		Set
			If (String.Equals(Me._cncnote, value) = false) Then
				Me.OncncnoteChanging(value)
				Me.SendPropertyChanging
				Me._cncnote = value
				Me.SendPropertyChanged("cncnote")
				Me.OncncnoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_FORMAT", DbType:="NVarChar(MAX)")>  _
	Public Property CER_FORMAT() As String
		Get
			Return Me._CER_FORMAT
		End Get
		Set
			If (String.Equals(Me._CER_FORMAT, value) = false) Then
				Me.OnCER_FORMATChanging(value)
				Me.SendPropertyChanging
				Me._CER_FORMAT = value
				Me.SendPropertyChanged("CER_FORMAT")
				Me.OnCER_FORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engcntnm", DbType:="NVarChar(MAX)")>  _
	Public Property engcntnm() As String
		Get
			Return Me._engcntnm
		End Get
		Set
			If (String.Equals(Me._engcntnm, value) = false) Then
				Me.OnengcntnmChanging(value)
				Me.SendPropertyChanging
				Me._engcntnm = value
				Me.SendPropertyChanged("engcntnm")
				Me.OnengcntnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_dh15rqt", DbType:="Int")>  _
	Public Property IDA_dh15rqt() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_dh15rqt
		End Get
		Set
			If (Me._IDA_dh15rqt.Equals(value) = false) Then
				Me.OnIDA_dh15rqtChanging(value)
				Me.SendPropertyChanging
				Me._IDA_dh15rqt = value
				Me.SendPropertyChanged("IDA_dh15rqt")
				Me.OnIDA_dh15rqtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr2", DbType:="NVarChar(MAX)")>  _
	Public Property pvnabbr2() As String
		Get
			Return Me._pvnabbr2
		End Get
		Set
			If (String.Equals(Me._pvnabbr2, value) = false) Then
				Me.Onpvnabbr2Changing(value)
				Me.SendPropertyChanging
				Me._pvnabbr2 = value
				Me.SendPropertyChanged("pvnabbr2")
				Me.Onpvnabbr2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_FRGN")>  _
Partial Public Class XML_DRUG_FRGN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _lcntpcd As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _lcnsid As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _lcnno As String
	
	Private _thanm As String
	
	Private _fulladdr As String
	
	Private _engfrgnnm As String
	
	Private _engfrgnnm_all As String
	
	Private _offengnm As String
	
	Private _engcntnm As String
	
	Private _funccd As String
	
	Private _funcnm As String
	
	Private _addr As String
	
	Private _room As String
	
	Private _floor As String
	
	Private _building As String
	
	Private _soi As String
	
	Private _road As String
	
	Private _mu As String
	
	Private _district As String
	
	Private _subdiv As String
	
	Private _Province As String
	
	Private _zipcode As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _Newcode As String
	
	Private _Newcode_U As String
	
	Private _lcnsid_drpdcin As String
	
	Private _lctnmcd_drpdcin As String
	
	Private _lctcd_drpdcin As String
	
	Private _rid As String
	
	Private _frgncd As String
	
	Private _frgnlctcd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub OnfulladdrChanging(value As String)
    End Sub
    Partial Private Sub OnfulladdrChanged()
    End Sub
    Partial Private Sub OnengfrgnnmChanging(value As String)
    End Sub
    Partial Private Sub OnengfrgnnmChanged()
    End Sub
    Partial Private Sub Onengfrgnnm_allChanging(value As String)
    End Sub
    Partial Private Sub Onengfrgnnm_allChanged()
    End Sub
    Partial Private Sub OnoffengnmChanging(value As String)
    End Sub
    Partial Private Sub OnoffengnmChanged()
    End Sub
    Partial Private Sub OnengcntnmChanging(value As String)
    End Sub
    Partial Private Sub OnengcntnmChanged()
    End Sub
    Partial Private Sub OnfunccdChanging(value As String)
    End Sub
    Partial Private Sub OnfunccdChanged()
    End Sub
    Partial Private Sub OnfuncnmChanging(value As String)
    End Sub
    Partial Private Sub OnfuncnmChanged()
    End Sub
    Partial Private Sub OnaddrChanging(value As String)
    End Sub
    Partial Private Sub OnaddrChanged()
    End Sub
    Partial Private Sub OnroomChanging(value As String)
    End Sub
    Partial Private Sub OnroomChanged()
    End Sub
    Partial Private Sub OnfloorChanging(value As String)
    End Sub
    Partial Private Sub OnfloorChanged()
    End Sub
    Partial Private Sub OnbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnbuildingChanged()
    End Sub
    Partial Private Sub OnsoiChanging(value As String)
    End Sub
    Partial Private Sub OnsoiChanged()
    End Sub
    Partial Private Sub OnroadChanging(value As String)
    End Sub
    Partial Private Sub OnroadChanged()
    End Sub
    Partial Private Sub OnmuChanging(value As String)
    End Sub
    Partial Private Sub OnmuChanged()
    End Sub
    Partial Private Sub OndistrictChanging(value As String)
    End Sub
    Partial Private Sub OndistrictChanged()
    End Sub
    Partial Private Sub OnsubdivChanging(value As String)
    End Sub
    Partial Private Sub OnsubdivChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As String)
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OnNewcode_UChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_UChanged()
    End Sub
    Partial Private Sub Onlcnsid_drpdcinChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_drpdcinChanged()
    End Sub
    Partial Private Sub Onlctnmcd_drpdcinChanging(value As String)
    End Sub
    Partial Private Sub Onlctnmcd_drpdcinChanged()
    End Sub
    Partial Private Sub Onlctcd_drpdcinChanging(value As String)
    End Sub
    Partial Private Sub Onlctcd_drpdcinChanged()
    End Sub
    Partial Private Sub OnridChanging(value As String)
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(50)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fulladdr", DbType:="NVarChar(MAX)")>  _
	Public Property fulladdr() As String
		Get
			Return Me._fulladdr
		End Get
		Set
			If (String.Equals(Me._fulladdr, value) = false) Then
				Me.OnfulladdrChanging(value)
				Me.SendPropertyChanging
				Me._fulladdr = value
				Me.SendPropertyChanged("fulladdr")
				Me.OnfulladdrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm", DbType:="NVarChar(MAX)")>  _
	Public Property engfrgnnm() As String
		Get
			Return Me._engfrgnnm
		End Get
		Set
			If (String.Equals(Me._engfrgnnm, value) = false) Then
				Me.OnengfrgnnmChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm = value
				Me.SendPropertyChanged("engfrgnnm")
				Me.OnengfrgnnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm_all", DbType:="NVarChar(MAX)")>  _
	Public Property engfrgnnm_all() As String
		Get
			Return Me._engfrgnnm_all
		End Get
		Set
			If (String.Equals(Me._engfrgnnm_all, value) = false) Then
				Me.Onengfrgnnm_allChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm_all = value
				Me.SendPropertyChanged("engfrgnnm_all")
				Me.Onengfrgnnm_allChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_offengnm", DbType:="NVarChar(MAX)")>  _
	Public Property offengnm() As String
		Get
			Return Me._offengnm
		End Get
		Set
			If (String.Equals(Me._offengnm, value) = false) Then
				Me.OnoffengnmChanging(value)
				Me.SendPropertyChanging
				Me._offengnm = value
				Me.SendPropertyChanged("offengnm")
				Me.OnoffengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engcntnm", DbType:="NVarChar(MAX)")>  _
	Public Property engcntnm() As String
		Get
			Return Me._engcntnm
		End Get
		Set
			If (String.Equals(Me._engcntnm, value) = false) Then
				Me.OnengcntnmChanging(value)
				Me.SendPropertyChanging
				Me._engcntnm = value
				Me.SendPropertyChanged("engcntnm")
				Me.OnengcntnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funccd", DbType:="NVarChar(50)")>  _
	Public Property funccd() As String
		Get
			Return Me._funccd
		End Get
		Set
			If (String.Equals(Me._funccd, value) = false) Then
				Me.OnfunccdChanging(value)
				Me.SendPropertyChanging
				Me._funccd = value
				Me.SendPropertyChanged("funccd")
				Me.OnfunccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funcnm", DbType:="NVarChar(MAX)")>  _
	Public Property funcnm() As String
		Get
			Return Me._funcnm
		End Get
		Set
			If (String.Equals(Me._funcnm, value) = false) Then
				Me.OnfuncnmChanging(value)
				Me.SendPropertyChanging
				Me._funcnm = value
				Me.SendPropertyChanged("funcnm")
				Me.OnfuncnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr", DbType:="NVarChar(MAX)")>  _
	Public Property addr() As String
		Get
			Return Me._addr
		End Get
		Set
			If (String.Equals(Me._addr, value) = false) Then
				Me.OnaddrChanging(value)
				Me.SendPropertyChanging
				Me._addr = value
				Me.SendPropertyChanged("addr")
				Me.OnaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_room", DbType:="NVarChar(50)")>  _
	Public Property room() As String
		Get
			Return Me._room
		End Get
		Set
			If (String.Equals(Me._room, value) = false) Then
				Me.OnroomChanging(value)
				Me.SendPropertyChanging
				Me._room = value
				Me.SendPropertyChanged("room")
				Me.OnroomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_floor", DbType:="NVarChar(50)")>  _
	Public Property floor() As String
		Get
			Return Me._floor
		End Get
		Set
			If (String.Equals(Me._floor, value) = false) Then
				Me.OnfloorChanging(value)
				Me.SendPropertyChanging
				Me._floor = value
				Me.SendPropertyChanged("floor")
				Me.OnfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_building", DbType:="NVarChar(MAX)")>  _
	Public Property building() As String
		Get
			Return Me._building
		End Get
		Set
			If (String.Equals(Me._building, value) = false) Then
				Me.OnbuildingChanging(value)
				Me.SendPropertyChanging
				Me._building = value
				Me.SendPropertyChanged("building")
				Me.OnbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soi", DbType:="NVarChar(MAX)")>  _
	Public Property soi() As String
		Get
			Return Me._soi
		End Get
		Set
			If (String.Equals(Me._soi, value) = false) Then
				Me.OnsoiChanging(value)
				Me.SendPropertyChanging
				Me._soi = value
				Me.SendPropertyChanged("soi")
				Me.OnsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_road", DbType:="NVarChar(MAX)")>  _
	Public Property road() As String
		Get
			Return Me._road
		End Get
		Set
			If (String.Equals(Me._road, value) = false) Then
				Me.OnroadChanging(value)
				Me.SendPropertyChanging
				Me._road = value
				Me.SendPropertyChanged("road")
				Me.OnroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mu", DbType:="NVarChar(MAX)")>  _
	Public Property mu() As String
		Get
			Return Me._mu
		End Get
		Set
			If (String.Equals(Me._mu, value) = false) Then
				Me.OnmuChanging(value)
				Me.SendPropertyChanging
				Me._mu = value
				Me.SendPropertyChanged("mu")
				Me.OnmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_district", DbType:="NVarChar(MAX)")>  _
	Public Property district() As String
		Get
			Return Me._district
		End Get
		Set
			If (String.Equals(Me._district, value) = false) Then
				Me.OndistrictChanging(value)
				Me.SendPropertyChanging
				Me._district = value
				Me.SendPropertyChanged("district")
				Me.OndistrictChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subdiv", DbType:="NVarChar(MAX)")>  _
	Public Property subdiv() As String
		Get
			Return Me._subdiv
		End Get
		Set
			If (String.Equals(Me._subdiv, value) = false) Then
				Me.OnsubdivChanging(value)
				Me.SendPropertyChanging
				Me._subdiv = value
				Me.SendPropertyChanged("subdiv")
				Me.OnsubdivChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Province", DbType:="NVarChar(MAX)")>  _
	Public Property Province() As String
		Get
			Return Me._Province
		End Get
		Set
			If (String.Equals(Me._Province, value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="NVarChar(MAX)")>  _
	Public Property zipcode() As String
		Get
			Return Me._zipcode
		End Get
		Set
			If (String.Equals(Me._zipcode, value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_U", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_U() As String
		Get
			Return Me._Newcode_U
		End Get
		Set
			If (String.Equals(Me._Newcode_U, value) = false) Then
				Me.OnNewcode_UChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_U = value
				Me.SendPropertyChanged("Newcode_U")
				Me.OnNewcode_UChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_drpdcin", DbType:="NVarChar(50)")>  _
	Public Property lcnsid_drpdcin() As String
		Get
			Return Me._lcnsid_drpdcin
		End Get
		Set
			If (String.Equals(Me._lcnsid_drpdcin, value) = false) Then
				Me.Onlcnsid_drpdcinChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_drpdcin = value
				Me.SendPropertyChanged("lcnsid_drpdcin")
				Me.Onlcnsid_drpdcinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd_drpdcin", DbType:="NVarChar(50)")>  _
	Public Property lctnmcd_drpdcin() As String
		Get
			Return Me._lctnmcd_drpdcin
		End Get
		Set
			If (String.Equals(Me._lctnmcd_drpdcin, value) = false) Then
				Me.Onlctnmcd_drpdcinChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd_drpdcin = value
				Me.SendPropertyChanged("lctnmcd_drpdcin")
				Me.Onlctnmcd_drpdcinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd_drpdcin", DbType:="NVarChar(50)")>  _
	Public Property lctcd_drpdcin() As String
		Get
			Return Me._lctcd_drpdcin
		End Get
		Set
			If (String.Equals(Me._lctcd_drpdcin, value) = false) Then
				Me.Onlctcd_drpdcinChanging(value)
				Me.SendPropertyChanging
				Me._lctcd_drpdcin = value
				Me.SendPropertyChanged("lctcd_drpdcin")
				Me.Onlctcd_drpdcinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="NVarChar(10)")>  _
	Public Property rid() As String
		Get
			Return Me._rid
		End Get
		Set
			If (String.Equals(Me._rid, value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="NVarChar(50)")>  _
	Public Property frgncd() As String
		Get
			Return Me._frgncd
		End Get
		Set
			If (String.Equals(Me._frgncd, value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="NVarChar(50)")>  _
	Public Property frgnlctcd() As String
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (String.Equals(Me._frgnlctcd, value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_DRUG_NO_USE")>  _
Partial Public Class XML_DRUG_NO_USE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _nouse As String
	
	Private _Newcode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnnouseChanging(value As String)
    End Sub
    Partial Private Sub OnnouseChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nouse", DbType:="NVarChar(MAX)")>  _
	Public Property nouse() As String
		Get
			Return Me._nouse
		End Get
		Set
			If (String.Equals(Me._nouse, value) = false) Then
				Me.OnnouseChanging(value)
				Me.SendPropertyChanging
				Me._nouse = value
				Me.SendPropertyChanged("nouse")
				Me.OnnouseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
